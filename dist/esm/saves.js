import"./tslib.es6-ac47674d.js";import{customBuildings as e,customUpgrades as n,customAchievements as o,mods as r}from"./vars.js";import{applyAllProps as a,hasOwnProperty as i}from"./helpers.js";import{decompressFromUTF16 as t,compressToUTF16 as u}from"./lz-string.js";var s=Game.dragonLevels.length+0,m=3,l=[];function d(e){switch(e){case"mod":return{custom:null};case"dragon":return{level:"sync",auras:["sync","sync"]};case"achievement":return{won:!1};case"upgrade":return{bought:!1,unlocked:!1};case"building":return{amount:0,bought:0,free:0,totalCookies:0,level:0,muted:0,minigameSave:""};default:throw new Error("Invalid fragment name!")}}function g(){return{mods:{},foreign:d("mod"),saveVer:3,dragon:d("dragon")}}var v=g();function f(){var e=g();a(v,e)}function c(e){var n,o=e.amount,r=e.bought,a=e.free,i=e.totalCookies,t=e.level,u=e.muted,s=e.minigameSave,m=e.name,l=e.owner;if(l){var d=v.mods[l.keyname].buildings;d?d[m]={amount:o,bought:r,free:a,totalCookies:i,level:t,muted:u,minigameSave:s}:v.mods[l.keyname].buildings=((n={})[m]={amount:o,bought:r,free:a,totalCookies:i,level:t,muted:u,minigameSave:s},n)}else v.foreign.buildings||(v.foreign.buildings={}),v.foreign.buildings[m]={amount:o,bought:r,free:a,totalCookies:i,level:t,muted:u,minigameSave:s}}function b(e){var n,o;return(null===(o=null===(n=e.owner?v.mods[e.owner.keyname]:v.foreign)||void 0===n?void 0:n.buildings)||void 0===o?void 0:o[e.name])||d("building")}function h(e){var n;if(e.owner){var o=v.mods[e.owner.keyname].upgrades;o?o[e.name]={unlocked:!!e.unlocked,bought:!!e.bought}:v.mods[e.owner.keyname].upgrades=((n={})[e.name]={unlocked:!!e.unlocked,bought:!!e.bought},n)}else v.foreign.upgrades||(v.foreign.upgrades={}),v.foreign.upgrades[e.name]={unlocked:!!e.unlocked,bought:!!e.bought}}function p(e){var n,o;return(null===(o=null===(n=e.owner?v.mods[e.owner.keyname]:v.foreign)||void 0===n?void 0:n.upgrades)||void 0===o?void 0:o[e.name])||d("upgrade")}function y(e){var n;if(e.owner){var o=v.mods[e.owner.keyname].achievements;o?o[e.name]={won:!!e.won}:v.mods[e.owner.keyname].achievements=((n={})[e.name]={won:!!e.won},n)}else v.foreign.achievements||(v.foreign.achievements={}),v.foreign.achievements[e.name]={won:!!e.won}}function k(e){var n,o;return(null===(o=null===(n=e.owner?v.mods[e.owner.keyname]:v.foreign)||void 0===n?void 0:n.achievements)||void 0===o?void 0:o[e.name])||d("achievement")}function w(e){v.mods[e.keyname]?v.mods[e.keyname].custom=e.custom:v.mods[e.keyname]={custom:e.custom};for(var n=0,o=e.toggles;n<o.length;n++){var r=o[n];if(r.save){var a=v.mods[e.keyname].ui;a?a[r.keyname]=r.save():v.mods[e.keyname].ui={}}}}function j(e){return v.mods[e.keyname]||d("mod")}function C(e,n){if(e.custom=n.custom,n.ui)for(var o=0,r=e.toggles;o<r.length;o++){var a=r[o];a.load&&i(n.ui,a.keyname)&&a.load(n.ui[a.keyname])}}function S(){for(var i=0,t=e;i<t.length;i++){var u=t[i];a(u,b(u))}for(var s=0,m=n;s<m.length;s++){var d=m[s];a(d,p(d)),d.bought&&Game.CountsAsUpgradeOwned(d.pool)&&Game.UpgradesOwned++}for(var g=0,v=o;g<v.length;g++){var f=v[g];a(f,k(f)),f.won&&Game.CountsAsAchievementOwned(f.pool)&&Game.AchievementsOwned++}for(var c=0,h=r;c<h.length;c++){var y=h[c];C(y,j(y))}for(var w=0,S=l;w<S.length;w++){(0,S[w])()}}function O(){for(var a=0,i=r;a<i.length;a++){w(i[a])}for(var t=0,u=e;t<u.length;t++){c(u[t])}for(var s=0,m=n;s<m.length;s++){h(m[s])}for(var l=0,d=o;l<d.length;l++){y(d[l])}}function A(e){var n=g();if("object"!=typeof e||null===e)return n;if(!i(e,"saveVer")||"number"!=typeof e.saveVer||e.saveVer>3)return n;function o(e){var n=d("mod");if("object"!=typeof e||null===e)return n;if(i(e,"buildings")&&"object"==typeof e.buildings&&null!==e.buildings&&(e.buildings,1))for(var o in n.buildings={},e.buildings){var r=e.buildings[o];"object"==typeof r&&null!==r&&(n.buildings[o]=d("building"),a(n.buildings[o],r))}if(i(e,"upgrades")&&"object"==typeof e.upgrades&&null!==e.upgrades&&(e.upgrades,1))for(var t in n.upgrades={},e.upgrades){var u=e.upgrades[t];"object"==typeof u&&null!==u&&(n.upgrades[t]=d("upgrade"),a(n.upgrades[t],u))}if(i(e,"achievements")&&"object"==typeof e.achievements&&null!==e.achievements&&(e.achievements,1))for(var s in n.achievements={},e.achievements){var m=e.achievements[s];"object"==typeof m&&null!==m&&(n.achievements[s]=d("achievement"),a(n.achievements[s],m))}if(i(e,"ui")&&"object"==typeof e.ui&&null!==e.ui&&(e.ui,1))for(var l in n.ui={},e.ui)n.ui[l]=e.ui[l];return i(e,"custom")&&"object"==typeof e.custom&&(n.custom=e.custom),n}if(i(e,"foreign")?n.foreign=o(e.foreign):n.foreign=d("mod"),i(e,"mods")&&"object"==typeof e.mods&&null!==e.mods&&(e.mods,1))for(var r in e.mods)n.mods[r]=o(e.mods[r]);if(i(e,"dragon")&&"object"==typeof e.dragon&&null!==e.dragon&&(!i(e.dragon,"level")||"number"!=typeof e.dragon.level&&"sync"!==e.dragon.level||(n.dragon.level=e.dragon.level),i(e.dragon,"auras")&&e.dragon.auras instanceof Array))for(var t in e.dragon.auras){var u=e.dragon.auras[t];"number"!=typeof u&&"sync"!==u||(n.dragon.auras[t]=u)}if(i(e,"minigames")&&"object"==typeof e.minigames&&null!==e.minigames&&(e.minigames,1))for(var s in n.minigames={},e.minigames){var m=e.minigames[s];"object"==typeof m&&null!==m&&(n.minigames[s]=m)}return n}function G(e){var n;if(""===e||"{}"===e)f();else try{var o=t(e);o||(o=e),n=JSON.parse(o)}catch(e){console.warn("CPPKIES: Found invalid save, creating new one..."),console.error(e),f()}var r=A(n);a(v,r),S()}function F(){return O(),u(JSON.stringify(v))}export{m as SAVE_VER,s as VANILLA_DRAGON_LEVEL_AMOUNT,C as applyModSave,A as applySave,l as customLoad,F as exportSave,G as importSave,f as initSave,k as loadAchievement,S as loadAll,b as loadBuilding,j as loadMod,p as loadUpgrade,v as save,y as saveAchievement,O as saveAll,c as saveBuilding,w as saveMod,h as saveUpgrade};
