{"version":3,"file":"index.js","sources":["../src/helpers.ts","../src/injects.ts","../src/index.ts"],"sourcesContent":["/**\n * The common type for a string, can be either a string or a function that returns a string\n */\nexport type CommonString = string | (() => string)\n/**\n * A helper function which converts a common string to a string.\n * @param value The common string to convert\n * @helper\n */\nexport function getValue(value: CommonString): string {\n\tif (value instanceof Function) return value()\n\treturn value\n}\n/**\n * A helper function which escapes special regex characters.\n * @param str The string to escape\n * @helper\n */\nexport function escapeRegExp(str: string): string {\n\t// eslint-disable-next-line no-useless-escape\n\treturn str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\")\n}\n/**\n * A helper function which replaces(or appends) code in a function, returning the new function, and it's eval free!\n * @param func The source function\n * @param source What to replace(or act as a anchor where to plane), can be null for slicing\n * @param target What to put instead(or before/after) the source\n * @param where Where to insert or replace your injection\n * @helper\n */\nexport function injectCode(\n\tfunc: Function,\n\tsource: CommonString | null,\n\ttarget: CommonString,\n\twhere: \"before\" | \"replace\" | \"after\"\n): Function {\n\tlet newFuncStr = func.toString()\n\tconst sliceMode = source === null\n\tlet regex: RegExp\n\tif (!sliceMode) {\n\t\tsource = getValue(source)\n\t\tregex = new RegExp(escapeRegExp(source), \"g\")\n\t}\n\ttarget = getValue(target)\n\tconst findStart = /\\)\\s+{/\n\tif (!sliceMode && !regex.test(newFuncStr)) console.warn(\"Nothing to inject.\")\n\tswitch (where) {\n\t\tcase \"before\":\n\t\t\tif (sliceMode) newFuncStr = newFuncStr.replace(findStart, `) {${target}`)\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}${source}`)\n\t\t\tbreak\n\t\tcase \"replace\":\n\t\t\tif (sliceMode) newFuncStr = `${target}`\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}`)\n\t\t\tbreak\n\t\tcase \"after\":\n\t\t\tif (sliceMode) throw new Error(\"Yikes, can't add to end!\")\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${source}${target}`)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error('where Parameter must be \"before\", \"replace\" or \"after\"')\n\t}\n\tconst newFunc = new Function(`return (${newFuncStr})`)()\n\tnewFunc.prototype = func.prototype\n\treturn newFunc\n}\n","import { injectCode } from \"./helpers\"\nimport Game, { Cppkies } from \"./gameType\"\n\ndeclare global {\n\tinterface Window {\n\t\tGame: Game\n\t\tCppkies: Cppkies\n\t\tBeautify: Function\n\t}\n}\n/**\n * Injects functions for basegame\n * @returns A promise\n */\nexport function main(): Promise<{ [key: string]: Function[] }> {\n\treturn new Promise(resolve => {\n\t\tclass Injection {\n\t\t\tconstructor(\n\t\t\t\tpublic value: string,\n\t\t\t\tpublic defValue: [],\n\t\t\t\tpublic func?: Function\n\t\t\t) {}\n\t\t}\n\t\tconst dummy = {}\n\t\tconst injections: Array<Injection> = [\n\t\t\t//Custom menus\n\t\t\tnew Injection(\"customMenu\", [], () => {\n\t\t\t\twindow.Game.UpdateMenu = injectCode(\n\t\t\t\t\twindow.Game.UpdateMenu,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\tswitch (Game.onMenu) {\n\t\t\t\tcase \"prefs\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customOptionsMenu) Cppkies.hooks.customOptionsMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stats\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customStatsMenu) Cppkies.hooks.customStatsMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"log\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customInfoMenu) Cppkies.hooks.customInfoMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(const i in Cppkies.hooks.customMenu) Cppkies.hooks.customMenu[i]();`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"customOptionsMenu\", []),\n\t\t\tnew Injection(\"customStatsMenu\", []),\n\t\t\tnew Injection(\"customInfoMenu\", []),\n\t\t\t//Data manipulation\n\t\t\tnew Injection(\"customLoad\", [], () => {\n\t\t\t\twindow.Game.LoadSave = injectCode(\n\t\t\t\t\twindow.Game.LoadSave,\n\t\t\t\t\t\"if (Game.prefs.showBackupWarning==1)\",\n\t\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in CLL.customLoad) CLL.customLoad[i](); `,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"customReset\", [], () => {\n\t\t\t\twindow.Game.Reset = injectCode(\n\t\t\t\t\twindow.Game.Reset,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customReset) Cppkies.hooks.customReset[i](hard);\n\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//Misc\n\t\t\tnew Injection(\"customBeautify\", [], () => {\n\t\t\t\twindow.Beautify = injectCode(\n\t\t\t\t\twindow.Beautify,\n\t\t\t\t\t\"return negative?'-'+output:output+decimal;\",\n\t\t\t\t\t`// Cppkies injection\n  let ret = negative?'-'+output:output+decimal;\n\tfor(const i in Cppkies.hooks.customBeautify) {\n\t\tlet returnedValue = Cppkies.hooks.customBeautify[i](value, floats, ret)\n\t\tret = returnedValue ? returnedValue : ret\n\t};\n\treturn ret;`,\n\t\t\t\t\t\"replace\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//Tooltips\n\t\t\tnew Injection(\"customTooltipDraw\", [], () => {\n\t\t\t\twindow.Game.tooltip.draw = injectCode(\n\t\t\t\t\twindow.Game.tooltip.draw,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customTooltipDraw) CLL.customTooltipDraw[i](from, text, origin);\n\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"customTooltipUpdate\", [], () => {\n\t\t\t\twindow.Game.tooltip.update = injectCode(\n\t\t\t\t\twindow.Game.tooltip.update,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customTooltipUpdate) CLL.customTooltipUpdate[i]();\n\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//Ascension\n\t\t\tnew Injection(\"customHowMuchPrestige\", [], () => {\n\t\t\t\twindow.Game.HowMuchPrestige = injectCode(\n\t\t\t\t\tinjectCode(\n\t\t\t\t\t\twindow.Game.HowMuchPrestige,\n\t\t\t\t\t\t\"return\",\n\t\t\t\t\t\t\"let ret =\",\n\t\t\t\t\t\t\"replace\"\n\t\t\t\t\t),\n\t\t\t\t\t\";\",\n\t\t\t\t\t`// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customHowManyCookiesReset){ \n\t\t\t\treturnedValue = Cppkies.hooks.customHowManyCookiesReset[i](chips, ret);\n\t\t\t\tret = returnedValue ? returnedValue : ret\n\t\t\t}\n\t\t\treturn ret;`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"customHeavenlyMultiplier\", []),\n\t\t\tnew Injection(\"UpdateAscensionModePrompt\", []),\n\t\t]\n\t\tinjections.forEach(inject => {\n\t\t\tdummy[inject.value] = inject.defValue\n\t\t\tif (inject.func) inject.func()\n\t\t})\n\t\t//Misc stuff\n\t\twindow.Game.Loader.Load = injectCode(\n\t\t\twindow.Game.Loader.Load,\n\t\t\t\"img.src=this.domain\",\n\t\t\t\"img.src=(assets[i].indexOf('http') !== -1 ? \\\"\\\" : this.domain)\",\n\t\t\t\"replace\"\n\t\t)\n\t\tresolve(dummy)\n\t})\n}\n","import { injectCode } from \"./helpers\"\nimport { main } from \"./injects\"\nimport GameType, { Cppkies as CppkiesType } from \"./gameType\"\ndeclare global {\n\tinterface Window {\n\t\tGame: GameType\n\t\tCppkies: CppkiesType | undefined\n\t}\n}\n\nif (window.Cppkies) throw new Error(\"Duplicate Cppkies import\")\nmain().then((answer: { [key: string]: Function[] }) => {\n\twindow.Cppkies.hooks = answer\n})\nconst master = {\n\thooks: {},\n\tinjectCode,\n}\nexport default master\n"],"names":[],"mappings":"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"}