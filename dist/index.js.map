{"version":3,"file":"index.js","sources":["../src/helpers.ts","../src/index.ts","../src/injects.ts"],"sourcesContent":["/**\n * The common type for a string, can be either a string or a function that returns a string\n */\nexport type CommonString = string | (() => string)\n/**\n * A helper function which converts a common string to a string.\n * @param value The common string to convert\n * @helper\n */\nexport function getValue(value: CommonString): string {\n\tif (value instanceof Function) return value()\n\treturn value\n}\n/**\n * A helper function which escapes special regex characters.\n * @param str The string to escape\n * @helper\n */\nexport function escapeRegExp(str: string): string {\n\t// eslint-disable-next-line no-useless-escape\n\treturn str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\")\n}\n/**\n * A helper function which replaces(or appends) code in a function, returning the new function, and it's eval free!\n * @param func The source function\n * @param source What to replace(or act as a anchor where to plane), can be null for slicing\n * @param target What to put instead(or before/after) the source\n * @param where Where to insert or replace your injection\n * @helper\n */\nexport function injectCode(\n\tfunc: Function,\n\tsource: CommonString | null,\n\ttarget: CommonString,\n\twhere: \"before\" | \"replace\" | \"after\"\n): Function {\n\tlet newFuncStr = func.toString()\n\tconst sliceMode = source === null\n\tlet regex: RegExp\n\tif (!sliceMode) {\n\t\tsource = getValue(source)\n\t\tregex = new RegExp(escapeRegExp(source), \"g\")\n\t}\n\ttarget = getValue(target)\n\tconst findStart = /\\)\\s+{/\n\tif (!sliceMode && !regex.test(newFuncStr)) console.warn(\"Nothing to inject.\")\n\tswitch (where) {\n\t\tcase \"before\":\n\t\t\tif (sliceMode) newFuncStr = newFuncStr.replace(findStart, `) {${target}`)\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}${source}`)\n\t\t\tbreak\n\t\tcase \"replace\":\n\t\t\tif (sliceMode) newFuncStr = `${target}`\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}`)\n\t\t\tbreak\n\t\tcase \"after\":\n\t\t\tif (sliceMode) throw new Error(\"Yikes, can't add to end!\")\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${source}${target}`)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error('re Parameter must be \"before\", \"replace\" or \"after\"')\n\t}\n\tconst newFunc = new Function(`return (${newFuncStr})`)()\n\tnewFunc.prototype = func.prototype\n\treturn newFunc\n}\n","import { injectCode } from \"./helpers\"\nimport { main } from \"./injects\"\nimport GameType, { Cppkies as CppkiesType } from \"./gameType\"\ndeclare global {\n\tinterface Window {\n\t\tGame: GameType\n\t\tCppkies: CppkiesType | undefined\n\t}\n}\n\nif (window.Cppkies) throw new Error(\"Duplicate Cppkies import\")\nconst hooks = main()\nconst master = {\n\thooks,\n\tinjectCode,\n}\nexport default master\n","import { injectCode } from \"./helpers\"\nimport Game, { Cppkies } from \"./gameType\"\n\ndeclare global {\n\tinterface Window {\n\t\tGame: Game\n\t\tCppkies: Cppkies\n\t\tBeautify: Function\n\t}\n}\nexport function main(): { [key: string]: Function[] } {\n\tclass Injection {\n\t\tconstructor(\n\t\t\tpublic value: string,\n\t\t\tpublic defValue: [],\n\t\t\tpublic func?: Function\n\t\t) {}\n\t}\n\tconst dummy = {}\n\tconst injections: Array<Injection> = [\n\t\t//Custom menus\n\t\tnew Injection(\"customMenu\", [], () => {\n\t\t\twindow.Game.UpdateMenu = injectCode(\n\t\t\t\twindow.Game.UpdateMenu,\n\t\t\t\tnull,\n\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\tswitch (Game.onMenu) {\n\t\t\t\tcase \"prefs\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customOptionsMenu) Cppkies.hooks.customOptionsMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"stats\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customStatsMenu) Cppkies.hooks.customStatsMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"log\":\n\t\t\t\t\tfor(const i in Cppkies.hooks.customInfoMenu) Cppkies.hooks.customInfoMenu[i]();\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(const i in Cppkies.hooks.customMenu) Cppkies.hooks.customMenu[i]();`,\n\t\t\t\t\"before\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"customOptionsMenu\", []),\n\t\tnew Injection(\"customStatsMenu\", []),\n\t\tnew Injection(\"customInfoMenu\", []),\n\t\t//Data manipulation\n\t\tnew Injection(\"customLoad\", [], () => {\n\t\t\twindow.Game.LoadSave = injectCode(\n\t\t\t\twindow.Game.LoadSave,\n\t\t\t\t\"if (Game.prefs.showBackupWarning==1)\",\n\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in CLL.customLoad) CLL.customLoad[i](); `,\n\t\t\t\t\"before\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"customReset\", [], () => {\n\t\t\twindow.Game.Reset = injectCode(\n\t\t\t\twindow.Game.Reset,\n\t\t\t\tnull,\n\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customReset) Cppkies.hooks.customReset[i](hard);\n\t\t`,\n\t\t\t\t\"before\"\n\t\t\t)\n\t\t}),\n\t\t//Misc\n\t\tnew Injection(\"customBeautify\", [], () => {\n\t\t\twindow.Beautify = injectCode(\n\t\t\t\twindow.Beautify,\n\t\t\t\t\"return negative?'-'+output:output+decimal;\",\n\t\t\t\t`// Cppkies injection\n  let ret = negative?'-'+output:output+decimal;\n\tfor(const i in Cppkies.hooks.customBeautify) {\n\t\tlet returnedValue = Cppkies.hooks.customBeautify[i](value, floats, ret)\n\t\tret = returnedValue ? returnedValue : ret\n\t};\n\treturn ret;`,\n\t\t\t\t\"replace\"\n\t\t\t)\n\t\t}),\n\t\t//Tooltips\n\t\tnew Injection(\"customTooltipDraw\", [], () => {\n\t\t\twindow.Game.tooltip.draw = injectCode(\n\t\t\t\twindow.Game.tooltip.draw,\n\t\t\t\tnull,\n\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customTooltipDraw) CLL.customTooltipDraw[i](from, text, origin);\n\t\t`,\n\t\t\t\t\"before\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"customTooltipUpdate\", [], () => {\n\t\t\twindow.Game.tooltip.update = injectCode(\n\t\t\t\twindow.Game.tooltip.update,\n\t\t\t\tnull,\n\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customTooltipUpdate) CLL.customTooltipUpdate[i]();\n\t\t`,\n\t\t\t\t\"before\"\n\t\t\t)\n\t\t}),\n\t\t//Ascension\n\t\tnew Injection(\"customHowMuchPrestige\", [], () => {\n\t\t\twindow.Game.HowMuchPrestige = injectCode(\n\t\t\t\tinjectCode(\n\t\t\t\t\twindow.Game.HowMuchPrestige,\n\t\t\t\t\t\"return\",\n\t\t\t\t\t\"let ret =\",\n\t\t\t\t\t\"replace\"\n\t\t\t\t),\n\t\t\t\t\";\",\n\t\t\t\t`// Cppkies injection\n\t\t\tfor(const i in Cppkies.hooks.customHowManyCookiesReset){ \n\t\t\t\treturnedValue = Cppkies.hooks.customHowManyCookiesReset[i](chips, ret);\n\t\t\t\tret = returnedValue ? returnedValue : ret\n\t\t\t}\n\t\t\treturn ret;`,\n\t\t\t\t\"after\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"customHeavenlyMultiplier\", []),\n\t\tnew Injection(\"UpdateAscensionModePrompt\", []),\n\t]\n\tinjections.forEach(inject => {\n\t\tdummy[inject.value] = inject.defValue\n\t\tif (inject.func) inject.func()\n\t})\n\t//Misc stuff\n\twindow.Game.Loader.Load = injectCode(\n\t\twindow.Game.Loader.Load,\n\t\t\"img.src=this.domain\",\n\t\t\"img.src=(assets[i].indexOf('http') !== -1 ? \\\"\\\" : this.domain)\",\n\t\t\"replace\"\n\t)\n\treturn dummy\n}\n"],"names":["getValue","value","Function","escapeRegExp","str","replace","injectCode","func","source","target","where","regex","newFuncStr","toString","sliceMode","RegExp","findStart","test","console","warn","Error","newFunc","prototype","window","Cppkies","hooks","defValue","dummy","injections","Injection","Game","UpdateMenu","LoadSave","Reset","Beautify","tooltip","draw","update","HowMuchPrestige","forEach","inject","Loader","Load"],"mappings":"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"}