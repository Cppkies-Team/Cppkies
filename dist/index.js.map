{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/vars.ts","../src/spritesheets.ts","../src/helpers.ts","../src/lib/lz-string.ts","../src/saves.ts","../src/upgrades/baseUpgrade.ts","../src/injects/generic.ts","../src/upgrades/heavenlyUpgrade.ts","../src/upgrades/tieredUpgrade.ts","../src/lib/eventemitter.ts","../src/injects/buildings.ts","../src/injects/basegame.ts","../src/upgrades/grandmaSynergy.ts","../src/upgrades/synergyUpgrade.ts","../src/upgrades/cursorUpgrade.ts","../src/upgrades/kittenUpgrade.ts","../src/upgrades/mouseUpgrade.ts","../src/upgrades/cookieUpgrade.ts","../src/achievements/baseAchievement.ts","../src/achievements/tieredAchievement.ts","../src/achievements/cookieAchievements.ts","../src/achievements/level10Achievement.ts","../src/achievements/mouseAchievement.ts","../src/achievements/productionAchievement.ts","../src/buildings.ts","../src/dragon.ts","../src/milk.ts","../src/tiers.ts","../src/loadValues.ts","../src/mods.ts","../src/ccUI/appendHTML.ts","../src/ccUI/button.ts","../src/ccUI/hidableSection.ts","../src/ccUI/slider.ts","../src/modUI/toggleBase.ts","../src/modUI/button.ts","../src/modUI/multiStateButton.ts","../src/modUI/slider.ts","../src/modUI/toggleButton.ts","../src/minigames/pantheon.ts","../src/injects/pantheon.ts","../src/onLoad.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Achievement } from \"./achievements\"\nimport Tier from \"./tiers\"\nimport { Upgrade } from \"./upgrades\"\nimport { Building } from \"./buildings\"\nimport { Mod, OwnershipUnit } from \"./mods\"\n\nexport const miscValues = {\n\tcookieOrder: 121212,\n\ticonLink: \"\",\n\tbuildingLink: \"\",\n}\n\nexport const customBuildings: Building[] = []\n\nexport const customAchievements: Achievement[] = []\n\nexport const customUpgrades: Upgrade[] = []\n\nexport const customTiers: Tier[] = []\n\nexport const mods: Mod[] = []\n\nexport let currentMod: Mod | null = null\n\nexport function setCurrentMod(mod: Mod | null): void {\n\tcurrentMod = mod\n}\n\nexport function setUnitOwner(unit: OwnershipUnit): void {\n\tif (currentMod) {\n\t\tunit.owner = currentMod\n\t\tcurrentMod.ownedUnits.push(unit)\n\t}\n}\n","import { miscValues } from \"./vars\"\n// Resolve aliases\n/**\n * Currently defined alias\n */\nexport const aliases: Record<string, string> = {}\nlet steppedAliases: string[] = []\n/**\n * Creates an alias from an old name to a new one\n * @param oldName The current name\n * @param aliasName The new, alias name\n */\nexport function alias(oldName: string, aliasName: string): void {\n\taliases[oldName] = aliasName\n}\n\n/**\n * Deletes an alias from the name\n * @param name The name to remove an alias from\n */\nexport function unalias(name: string): void {\n\tdelete aliases[name]\n}\n\n/**\n * Resolves an aliased name\n * @param name The name to be resolved\n */\nexport function resolveAlias(name: string): string {\n\tif (steppedAliases.includes(name)) throw new Error(\"Recursive alias\")\n\tsteppedAliases.push(name)\n\tif (name in aliases) return resolveAlias(aliases[name])\n\tsteppedAliases = []\n\treturn name\n}\n\n/**\n * A local helper to fetch an image from an image link\n * @param link The image URI\n */\nfunction generateImageFromLink(link: string): Promise<HTMLImageElement> {\n\treturn new Promise(resolve => {\n\t\tconst img = new Image()\n\t\timg.addEventListener(\"load\", (): void => {\n\t\t\tresolve(img)\n\t\t})\n\t\timg.crossOrigin = \"Anonymous\"\n\t\timg.src = link\n\t})\n}\n\n/**\n * A local helper to create a blob URI from a canvas buffer\n */\nfunction toBlobURI(buf: CanvasRenderingContext2D): Promise<string> {\n\treturn new Promise(resolve => {\n\t\tbuf.canvas.toBlob((blob: Blob | null) => {\n\t\t\tresolve(URL.createObjectURL(blob))\n\t\t})\n\t})\n}\n\n/**\n * Relocates the icons on an iconsheets\n * @param link The link to the original file\n * @param icons The definition of iconName: iconPosition\n * @param matrix The matrix of icon names\n * @param iconSize The size of a single icon\n * @param size The size of the new spritesheet\n * @param postProcess Optional operations after the relink\n */\nfunction relink(\n\tlink: string,\n\ticons: Record<string, [number, number]>,\n\tmatrix: string[][] | string[],\n\ticonSize: [number, number],\n\tsize: [number, number],\n\tpostProcess?: (ctx: CanvasRenderingContext2D) => void | Promise<void>\n): Promise<string> {\n\treturn new Promise(resolve => {\n\t\tif (!(matrix[0] instanceof Array)) matrix = [matrix as string[]]\n\t\tmatrix = matrix as string[][]\n\t\t//Collect references\n\t\tconst references: Record<string, Game.Icon> = {}\n\t\tfor (const y in matrix)\n\t\t\tfor (const x in matrix[y]) {\n\t\t\t\t// Ignore if falsy\n\t\t\t\tif (!matrix[y][x]) continue\n\t\t\t\tmatrix[y][x] = matrix[y][x].toString().toLowerCase()\n\t\t\t\tif (!(matrix[y][x] in icons)) throw new Error(\"Invalid icon name\")\n\t\t\t\treferences[matrix[y][x]] = [parseInt(x), parseInt(y)]\n\t\t\t}\n\t\t//Draw new column\n\t\tconst buffer = document\n\t\t\t.createElement(\"canvas\")\n\t\t\t.getContext(\"2d\") as CanvasRenderingContext2D\n\t\tconst img = new Image()\n\t\timg.addEventListener(\"load\", (): void => {\n\t\t\tbuffer.canvas.width = size[0]\n\t\t\tbuffer.canvas.height = size[1]\n\t\t\tfor (const i in references)\n\t\t\t\tbuffer.drawImage(\n\t\t\t\t\timg,\n\t\t\t\t\treferences[i][0] * iconSize[0],\n\t\t\t\t\treferences[i][1] * iconSize[1],\n\t\t\t\t\ticonSize[0],\n\t\t\t\t\ticonSize[1],\n\t\t\t\t\ticons[i][0] * iconSize[0],\n\t\t\t\t\ticons[i][1] * iconSize[1],\n\t\t\t\t\ticonSize[0],\n\t\t\t\t\ticonSize[1]\n\t\t\t\t)\n\t\t\tconst postPostProcess = (): void => {\n\t\t\t\ttoBlobURI(buffer).then(resolve)\n\t\t\t}\n\t\t\tlet ret: void | Promise<void>\n\t\t\tif (postProcess) ret = postProcess(buffer)\n\t\t\tif (ret instanceof Promise) ret.then(postPostProcess)\n\t\t\telse postPostProcess()\n\t\t})\n\t\timg.crossOrigin = \"Anonymous\"\n\t\timg.src = link\n\t})\n}\n\n/**\n * The amount of column relinks a URI has been to\n */\nconst columnRelinkAmount: Record<string, number> = {}\n\n/**\n * Additional icons which aren't defined with tiers\n */\nexport const extraColumnIcons: Record<string, [number, number]> = {\n\t\"3d\": [0, 21],\n\tmilestone1: [0, 22],\n\tmilestone2: [0, 23],\n\tmilestone3: [0, 24],\n\tkrumblor: [0, 25],\n\tlevel1: [0, 26],\n\tlevel2: [0, 27],\n}\n/**\n * Relocates the icons for a column and automatically aliases it\n * @param link The link to the original, unordered iconsheet\n * @param matrix The matrix of the names of the icon tiers\n * Valid tier names are:\n * * Tier ids: `1`, `5`, `7`, etc.\n * * Tier names: `\"jetmint\"`, `\"plain\"`, etc.\n * * Non-standard tier icon tiers: `\"3d\"`, `\"milestone1\"`, `\"milestone2\"`, `\"milestone3\"`, `\"krumblor\"`, `\"level1\"`, `\"level2\"`\n * @param offset The icon X to offset the column\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function relinkColumn(\n\tlink: string,\n\tmatrix: string[] | string[][],\n\toffset?: number,\n\tfollowAlias = false\n): Promise<void> {\n\t// Automatically offset the X by 1 for each relink\n\tif (offset === undefined) {\n\t\tif (!columnRelinkAmount[link]) columnRelinkAmount[link] = 0\n\t\toffset = columnRelinkAmount[link]++\n\t}\n\tconst columnIcons: Record<string, [number, number]> = {}\n\tfor (const i in extraColumnIcons) {\n\t\tcolumnIcons[i] = [offset, extraColumnIcons[i][1]]\n\t}\n\t// Automatically generate normal tiers\n\tfor (const i in Game.Tiers)\n\t\tcolumnIcons[Game.Tiers[i].name.toLowerCase()] = columnIcons[\n\t\t\ti.toString()\n\t\t] = [offset, Game.Tiers[i].iconRow]\n\talias(\n\t\tlink,\n\t\tawait relink(\n\t\t\tfollowAlias ? resolveAlias(link) : link,\n\t\t\tcolumnIcons,\n\t\t\tmatrix,\n\t\t\t[48, 48],\n\t\t\t[\n\t\t\t\t(offset + 1) * 48,\n\t\t\t\t(Object.values(columnIcons).reduce(\n\t\t\t\t\t(acc, value) => Math.max(acc, value[1]),\n\t\t\t\t\t-Infinity\n\t\t\t\t) +\n\t\t\t\t\t1) *\n\t\t\t\t\t48,\n\t\t\t],\n\t\t\tctx => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t// If not first relink, append to original image\n\t\t\t\t\tif (resolveAlias(link) !== link) {\n\t\t\t\t\t\tconst img = new Image()\n\t\t\t\t\t\timg.addEventListener(\"load\", (): void => {\n\t\t\t\t\t\t\tctx.drawImage(img, 0, 0)\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t})\n\t\t\t\t\t\timg.src = resolveAlias(link)\n\t\t\t\t\t\timg.crossOrigin = \"Anonymous\"\n\t\t\t\t\t} else resolve()\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t)\n}\n\n/**\n * The amount of row relinks a URI has been to\n */\nconst rowRelinkAmount: Record<string, number> = {}\n\n/**\n * Additional icons which aren't defined with buildings\n */\nexport const extraRowIcons: Record<string, [number, number]> = {\n\tresearch: [9, 0],\n\tcookie: [10, 0],\n\tmouse: [11, 0],\n\tmulticursor: [12, 0],\n\tkitten: [18, 0],\n}\n/**\n * Relocates the icons for a row and automatically aliases it\n * @param link The link to the original, unordered iconsheet\n * @param matrix The matrix of the names of the icon types\n * Valid tier types are:\n * * Building ids: `1, `5`, `7`, etc.\n * * Building names: `\"cursor\"`, `\"farm\"`, etc.\n * * Non-standard tier icon tiers: `\"research\"`, `\"cookie\"`, `\"mouse\"`, `\"multicursor\"`, `\"kitten\"`\n * @param offset The icon X to offset the column\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function relinkRow(\n\tlink: string,\n\tmatrix: string[] | string[][],\n\toffset?: number,\n\tfollowAlias = false\n): Promise<void> {\n\tif (offset === undefined) {\n\t\tif (!rowRelinkAmount[link]) rowRelinkAmount[link] = 0\n\t\toffset = rowRelinkAmount[link]++\n\t}\n\tconst rowIcons: Record<string, [number, number]> = {}\n\tfor (const i in extraRowIcons) {\n\t\trowIcons[i] = [extraRowIcons[i][0], offset]\n\t}\n\t// Automatically generate normal buildings\n\tfor (const i in Game.ObjectsById)\n\t\trowIcons[Game.ObjectsById[i].single.toLowerCase()] = rowIcons[i] = [\n\t\t\tGame.ObjectsById[i].iconColumn,\n\t\t\toffset,\n\t\t]\n\talias(\n\t\tlink,\n\t\tawait relink(\n\t\t\tfollowAlias ? resolveAlias(link) : link,\n\t\t\trowIcons,\n\t\t\tmatrix,\n\t\t\t[48, 48],\n\t\t\t[\n\t\t\t\t(Object.values(rowIcons).reduce(\n\t\t\t\t\t(acc, value) => Math.max(acc, value[0]),\n\t\t\t\t\t-Infinity\n\t\t\t\t) +\n\t\t\t\t\t1) *\n\t\t\t\t\t48,\n\t\t\t\t(offset + 1) * 48,\n\t\t\t],\n\t\t\tctx => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t// If not first relink, append to original image\n\t\t\t\t\tif (resolveAlias(link) !== link) {\n\t\t\t\t\t\tconst img = new Image()\n\t\t\t\t\t\timg.addEventListener(\"load\", (): void => {\n\t\t\t\t\t\t\tctx.drawImage(img, 0, 0)\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t})\n\t\t\t\t\t\timg.src = resolveAlias(link)\n\t\t\t\t\t\timg.crossOrigin = \"Anonymous\"\n\t\t\t\t\t} else resolve()\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t)\n}\n\n/**\n * Patches an iconsheet with replacements\n * @param link The link to the original, unpatched iconsheet\n * @param replacements The replacements to make, first element in tuple is the original position,\n * second is the icon to replace with\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function patchIconsheet(\n\tlink: string,\n\treplacements: [[number, number], Game.Icon][],\n\tfollowAlias = true\n): Promise<void> {\n\t// First, create a canvas with the original image\n\tconst buffer = document\n\t\t.createElement(\"canvas\")\n\t\t.getContext(\"2d\") as CanvasRenderingContext2D\n\tconst ogImg = await generateImageFromLink(\n\t\tfollowAlias ? resolveAlias(link) : link\n\t)\n\tconst maxSize = [ogImg.width, ogImg.height]\n\t// Get the size of the output canvas\n\tfor (const place of replacements) {\n\t\tif (place[0][0] * 48 > maxSize[0]) maxSize[0] = place[0][0] * 48\n\t\tif (place[0][1] * 48 > maxSize[1]) maxSize[1] = place[0][1] * 48\n\t}\n\tbuffer.canvas.width = maxSize[0]\n\tbuffer.canvas.height = maxSize[1]\n\tbuffer.drawImage(ogImg, 0, 0)\n\t// Generate a cache\n\tconst replacementCache: Record<string, HTMLImageElement> = {}\n\tfor (const replacement of replacements) {\n\t\t// Little trick, here, if icon [2] is \"\", go to \"img/icons.png\" instead of `miscValues.iconLink`\n\t\tconst iconLink = resolveAlias(\n\t\t\t(replacement[1][2] ?? miscValues.iconLink) || \"img/icons.png\"\n\t\t)\n\t\tif (!replacementCache[iconLink])\n\t\t\treplacementCache[iconLink] = await generateImageFromLink(iconLink)\n\t\t// Clear the icon beforehand\n\t\tbuffer.clearRect(replacement[0][0] * 48, replacement[0][1] * 48, 48, 48)\n\n\t\tbuffer.drawImage(\n\t\t\treplacementCache[iconLink],\n\t\t\treplacement[1][0] * 48,\n\t\t\treplacement[1][1] * 48,\n\t\t\t48,\n\t\t\t48,\n\t\t\treplacement[0][0] * 48,\n\t\t\treplacement[0][1] * 48,\n\t\t\t48,\n\t\t\t48\n\t\t)\n\t}\n\talias(link, await toBlobURI(buffer))\n}\n\nexport function resolveIcon(icon: Game.Icon): Game.Icon {\n\ticon = [...icon]\n\tif (icon[2] === undefined || icon[2] === null)\n\t\ticon[2] = resolveAlias(miscValues.iconLink)\n\telse icon[2] = resolveAlias(icon[2])\n\treturn icon\n}\n\nexport const iconsNamespace = {\n\talias,\n\taliases,\n\textraColumnIcons,\n\textraRowIcons,\n\tpatchIconsheet,\n\trelinkColumn,\n\trelinkRow,\n\tresolveAlias,\n\tresolveIcon,\n\tunalias,\n}\n","/**\n * The common type for a value, can be either the value or a function that returns a value with the type.\n */\nexport type CommonValue<T> = T | (() => T)\n/**\n * A helper function which converts a common value to a value\n * @param value The common value to convert\n * @helper\n */\nexport function getValue<T>(value: CommonValue<T>): T {\n\tif (value instanceof Function) return value()\n\treturn value\n}\n/**\n * A helper function which escapes special regex characters.\n * @param str The string to escape\n * @helper\n */\nexport function escapeRegExp(str: string): string {\n\t// eslint-disable-next-line no-useless-escape\n\treturn str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\")\n}\n/**\n * The parameters of an injection, in order: `source`, `target`, `where`\n */\nexport type InjectParams = [\n\tstring | RegExp | null,\n\tstring,\n\t\"before\" | \"replace\" | \"after\"\n]\n/**\n * A helper helper function, which does a single inject to code\n * @param source The code to perform the inject on\n * @param config The configuration of the inject\n * @helper\n * @helperhelper\n */\nfunction doSingleInject(source: string, config: InjectParams): string {\n\tconst sliceMode = config[0] === null\n\t// Do this to mute typescript silly wrong errors\n\tlet regex = new RegExp(\"\")\n\tif (config[0] !== null) {\n\t\tif (typeof config[0] === \"string\")\n\t\t\tregex = new RegExp(escapeRegExp(config[0]), \"g\")\n\t\telse regex = config[0]\n\t\tif (!regex.test(source)) console.warn(\"Nothing to inject.\")\n\t}\n\n\tconst findStart = /(\\)[^{]*{)/\n\tconst findEnd = /(}?)$/\n\n\tswitch (config[2]) {\n\t\tcase \"before\":\n\t\t\tif (sliceMode) source = source.replace(findStart, `$1${config[1]}`)\n\t\t\telse source = source.replace(regex, `${config[1]}${config[0]}`)\n\t\t\tbreak\n\t\tcase \"replace\":\n\t\t\tif (sliceMode) source = config[1]\n\t\t\telse source = source.replace(regex, config[1])\n\t\t\tbreak\n\t\tcase \"after\":\n\t\t\tif (sliceMode) source = source.replace(findEnd, `${config[1]}$1`)\n\t\t\telse source = source.replace(regex, `${config[0]}${config[1]}`)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error('where Parameter must be \"before\", \"replace\" or \"after\"')\n\t}\n\treturn source\n}\n/**\n * A helper function which replaces(or appends) code in a function, returning the new function, and it's eval free!\n * @param func The source function\n * @param source What to replace, can be null for slicing\n * @param target What to put instead of (or before/after) the source\n * @param where Where to insert or replace your injection\n * @param context The optional context to use\n * @helper\n */\nexport function injectCode<\n\tT extends ((...args: any[]) => any) | (new (...args: any[]) => any)\n>(\n\tfunc: T,\n\tsource: string | RegExp | null,\n\ttarget: string,\n\twhere: \"before\" | \"replace\" | \"after\",\n\tcontext: Record<string, any> = {}\n): T {\n\tconst newFunc = Function(\n\t\t...Object.keys(context),\n\t\t`return (${doSingleInject(func.toString(), [source, target, where])})`\n\t)(...Object.values(context))\n\tnewFunc.prototype = func.prototype\n\treturn newFunc\n}\n\n/**\n * A helper function which replaces(or appends) code in a function, returning the new function, and it's eval free!\n * @param func The source function\n * @param injections The injections to apply, the parameters of an injection, in order: `source`, `target`, `where`\n * @param context The optional context to use\n * @helper\n */\nexport function injectCodes<\n\tT extends ((...args: any[]) => any) | (new (...args: any[]) => any)\n>(func: T, injections: InjectParams[], context: object = {}): T {\n\tlet newStr = func.toString()\n\tfor (const injection of injections) newStr = doSingleInject(newStr, injection)\n\tconst newFunc = Function(\n\t\t...Object.keys(context),\n\t\t`return (${newStr})`\n\t)(...Object.values(context))\n\tnewFunc.prototype = func.prototype\n\treturn newFunc\n}\n/**\n * Applies all props to an object via mutating\n * @param targObj The object which will be mutated\n * @param srcObj The object which properties will be applied to the target object\n */\n\nexport function applyAllProps(targObj: any, srcObj: any): void {\n\tfor (const i in srcObj) targObj[i] = srcObj[i]\n}\n\n/**\n * Converts a string to sentense case, AKA first letter upper, all next lower\n * @param string\n */\nexport function toSentenseCase(string: string): string {\n\treturn string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n}\n\n/**\n * A strongly typed `hasOwnProperty`\n * @helper\n */\nexport function hasOwnProperty<X extends object, Y extends PropertyKey>(\n\tobj: X,\n\tprop: Y\n): obj is X & Record<Y, unknown> {\n\t// eslint-disable-next-line no-prototype-builtins\n\treturn obj.hasOwnProperty(prop)\n}\n/**\n * Creates a roman numeral from a number\n * @param num The number to convert\n * @helper\n */\nexport function toRomanNumeral(num: number): string {\n\tconst lookup = [\n\t\t[1000, \"M\"],\n\t\t[900, \"CM\"],\n\t\t[500, \"D\"],\n\t\t[400, \"CD\"],\n\t\t[100, \"C\"],\n\t\t[90, \"XC\"],\n\t\t[50, \"L\"],\n\t\t[40, \"XL\"],\n\t\t[10, \"X\"],\n\t\t[9, \"IX\"],\n\t\t[5, \"V\"],\n\t\t[4, \"IV\"],\n\t\t[1, \"I\"],\n\t] as const\n\tlet roman = \"\"\n\n\tfor (const charType of lookup) {\n\t\twhile (num >= charType[0]) {\n\t\t\troman += charType[1]\n\t\t\tnum -= charType[0]\n\t\t}\n\t}\n\treturn roman\n}\n","/* eslint-disable */\n// @ts-nocheck\n\nlet t=String.fromCharCode;const n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";let r={};function e(t,n){if(!r[t]){r[t]={};for(var o=0;o<t.length;o++)r[t][t.charAt(o)]=o}return r[t][n]}const i=function(t){if(null==t)return\"\";var o=d(t,6,function(t){return n.charAt(t)});switch(o.length%4){default:case 0:return o;case 1:return o+\"===\";case 2:return o+\"==\";case 3:return o+\"=\"}},u=function(t){return null==t?\"\":\"\"==t?null:w(t.length,32,function(o){return e(n,t.charAt(o))})},a=function(n){return null==n?\"\":d(n,15,function(n){return t(n+32)})+\" \"},l=function(t){return null==t?\"\":\"\"==t?null:w(t.length,16384,function(n){return t.charCodeAt(n)-32})},p=function(t){for(var n=f(t),o=new Uint8Array(2*n.length),r=0,e=n.length;r<e;r++){var i=n.charCodeAt(r);o[2*r]=i>>>8,o[2*r+1]=i%256}return o},s=function(n){if(null==n)return v(n);for(var o=new Array(n.length/2),r=0,e=o.length;r<e;r++)o[r]=256*n[2*r]+n[2*r+1];var i=[];return o.forEach(function(n){i.push(t(n))}),v(i.join(\"\"))},c=function(t){return null==t?\"\":d(t,6,function(t){return o.charAt(t)})},h=function(t){return null==t?\"\":\"\"==t?null:(t=t.replace(/ /g,\"+\"),w(t.length,32,function(n){return e(o,t.charAt(n))}))},f=function(n){return d(n,16,function(n){return t(n)})},d=function(t,n,o){if(null==t)return\"\";var r,e,i,u={},a={},l=\"\",p=\"\",s=\"\",c=2,h=3,f=2,d=[],v=0,w=0;for(i=0;i<t.length;i+=1)if(l=t.charAt(i),Object.prototype.hasOwnProperty.call(u,l)||(u[l]=h++,a[l]=!0),p=s+l,Object.prototype.hasOwnProperty.call(u,p))s=p;else{if(Object.prototype.hasOwnProperty.call(a,s)){if(s.charCodeAt(0)<256){for(r=0;r<f;r++)v<<=1,w==n-1?(w=0,d.push(o(v)),v=0):w++;for(e=s.charCodeAt(0),r=0;r<8;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1}else{for(e=1,r=0;r<f;r++)v=v<<1|e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e=0;for(e=s.charCodeAt(0),r=0;r<16;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1}0==--c&&(c=Math.pow(2,f),f++),delete a[s]}else for(e=u[s],r=0;r<f;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1;0==--c&&(c=Math.pow(2,f),f++),u[p]=h++,s=String(l)}if(\"\"!==s){if(Object.prototype.hasOwnProperty.call(a,s)){if(s.charCodeAt(0)<256){for(r=0;r<f;r++)v<<=1,w==n-1?(w=0,d.push(o(v)),v=0):w++;for(e=s.charCodeAt(0),r=0;r<8;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1}else{for(e=1,r=0;r<f;r++)v=v<<1|e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e=0;for(e=s.charCodeAt(0),r=0;r<16;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1}0==--c&&(c=Math.pow(2,f),f++),delete a[s]}else for(e=u[s],r=0;r<f;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1;0==--c&&(c=Math.pow(2,f),f++)}for(e=2,r=0;r<f;r++)v=v<<1|1&e,w==n-1?(w=0,d.push(o(v)),v=0):w++,e>>=1;for(;;){if(v<<=1,w==n-1){d.push(o(v));break}w++}return d.join(\"\")},v=function(t){return null==t?\"\":\"\"==t?null:w(t.length,32768,function(n){return t.charCodeAt(n)})},w=function(n,o,r){var e,i,u,a,l,p,s,c=[],h=4,f=4,d=3,v=\"\",w=[],A={val:r(0),position:o,index:1};for(e=0;e<3;e+=1)c[e]=e;for(u=0,l=Math.pow(2,2),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;switch(u){case 0:for(u=0,l=Math.pow(2,8),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;s=t(u);break;case 1:for(u=0,l=Math.pow(2,16),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;s=t(u);break;case 2:return\"\"}for(c[3]=s,i=s,w.push(s);;){if(A.index>n)return\"\";for(u=0,l=Math.pow(2,d),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;switch(s=u){case 0:for(u=0,l=Math.pow(2,8),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;c[f++]=t(u),s=f-1,h--;break;case 1:for(u=0,l=Math.pow(2,16),p=1;p!=l;)a=A.val&A.position,A.position>>=1,0==A.position&&(A.position=o,A.val=r(A.index++)),u|=(a>0?1:0)*p,p<<=1;c[f++]=t(u),s=f-1,h--;break;case 2:return w.join(\"\")}if(0==h&&(h=Math.pow(2,d),d++),c[s])v=c[s];else{if(s!==f)return null;v=i+i.charAt(0)}w.push(v),c[f++]=i+v.charAt(0),i=v,0==--h&&(h=Math.pow(2,d),d++)}};export{f as compress,i as compressToBase64,c as compressToEncodedURIComponent,a as compressToUTF16,p as compressToUint8Array,v as decompress,u as decompressFromBase64,h as decompressFromEncodedURIComponent,l as decompressFromUTF16,s as decompressFromUint8Array};\n","import { Building } from \"./buildings\"\nimport { Upgrade } from \"./upgrades\"\nimport { applyAllProps, hasOwnProperty } from \"./helpers\"\nimport { Achievement } from \"./achievements\"\nimport {\n\tcustomAchievements,\n\tcustomBuildings,\n\tcustomUpgrades,\n\tmods,\n} from \"./vars\"\nimport { Mod } from \"./mods\"\nimport { compressToUTF16, decompressFromUTF16 } from \"./lib/lz-string\"\n\nexport const VANILLA_DRAGON_LEVEL_AMOUNT = Game.dragonLevels.length + 0\n\nexport const SAVE_VER = 3 as const\n/**\n * The save type for Cppkies\n */\nexport interface SaveType {\n\tsaveVer: typeof SAVE_VER\n\tmods: Record<string, ModSave>\n\tforeign: ModSave\n\tdragon: DragonSave\n}\n\nfunction createDefaultSaveFragment(name: \"building\"): BuildingSave\nfunction createDefaultSaveFragment(name: \"upgrade\"): UpgradeSave\nfunction createDefaultSaveFragment(name: \"achievement\"): AchievementSave\nfunction createDefaultSaveFragment(name: \"dragon\"): DragonSave\nfunction createDefaultSaveFragment(name: \"mod\"): ModSave\nfunction createDefaultSaveFragment(name: string): unknown {\n\tswitch (name) {\n\t\tcase \"mod\":\n\t\t\treturn {\n\t\t\t\tcustom: null,\n\t\t\t}\n\t\tcase \"dragon\":\n\t\t\treturn {\n\t\t\t\tlevel: \"sync\",\n\t\t\t\tauras: [\"sync\", \"sync\"],\n\t\t\t}\n\t\tcase \"achievement\":\n\t\t\treturn { won: false }\n\t\tcase \"upgrade\":\n\t\t\treturn {\n\t\t\t\tbought: false,\n\t\t\t\tunlocked: false,\n\t\t\t}\n\t\tcase \"building\":\n\t\t\treturn {\n\t\t\t\tamount: 0,\n\t\t\t\tbought: 0,\n\t\t\t\tfree: 0,\n\t\t\t\ttotalCookies: 0,\n\t\t\t\tlevel: 0,\n\t\t\t\tmuted: 0,\n\t\t\t\tminigameSave: \"\",\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error(\"Invalid fragment name!\")\n\t}\n}\n\nfunction createDefaultSave(): SaveType {\n\treturn {\n\t\tmods: {},\n\t\tforeign: createDefaultSaveFragment(\"mod\"),\n\t\tsaveVer: SAVE_VER,\n\t\tdragon: createDefaultSaveFragment(\"dragon\"),\n\t}\n}\n\nexport const save: SaveType = createDefaultSave()\n\n/**\n * Creates a save for Cppkies\n */\nexport function initSave(): void {\n\tconst newSave = createDefaultSave()\n\tapplyAllProps(save, newSave)\n}\n\n// #region Building\n\n/**\n * The save type for a building\n */\nexport interface BuildingSave {\n\tamount: number\n\tbought: number\n\tfree: number\n\ttotalCookies: number\n\tlevel: number\n\tmuted: number\n\tminigameSave: string\n}\n\n/**\n * Saves a building\n * @param building The building to save\n */\nexport function saveBuilding({\n\tamount,\n\tbought,\n\tfree,\n\ttotalCookies,\n\tlevel,\n\tmuted,\n\tminigameSave,\n\tname,\n\towner,\n}: Building): void {\n\tif (owner) {\n\t\tconst buildingsObject = save.mods[owner.keyname].buildings\n\t\tif (!buildingsObject)\n\t\t\tsave.mods[owner.keyname].buildings = {\n\t\t\t\t[name]: {\n\t\t\t\t\tamount,\n\t\t\t\t\tbought,\n\t\t\t\t\tfree,\n\t\t\t\t\ttotalCookies,\n\t\t\t\t\tlevel,\n\t\t\t\t\tmuted,\n\t\t\t\t\tminigameSave,\n\t\t\t\t},\n\t\t\t}\n\t\telse\n\t\t\tbuildingsObject[name] = {\n\t\t\t\tamount,\n\t\t\t\tbought,\n\t\t\t\tfree,\n\t\t\t\ttotalCookies,\n\t\t\t\tlevel,\n\t\t\t\tmuted,\n\t\t\t\tminigameSave,\n\t\t\t}\n\t} else {\n\t\tif (!save.foreign.buildings) save.foreign.buildings = {}\n\t\tsave.foreign.buildings[name] = {\n\t\t\tamount,\n\t\t\tbought,\n\t\t\tfree,\n\t\t\ttotalCookies,\n\t\t\tlevel,\n\t\t\tmuted,\n\t\t\tminigameSave,\n\t\t}\n\t}\n}\n\n/**\n * Loads the building save data\n * @param building The building to load savedata for\n */\nexport function loadBuilding(building: Building): BuildingSave {\n\t//Use names because ID conflicts\n\treturn (\n\t\t(building.owner ? save.mods[building.owner.keyname] : save.foreign)\n\t\t\t?.buildings?.[building.name] || createDefaultSaveFragment(\"building\")\n\t)\n}\n\n//#endregion\n\n// #region Upgrade\n\n/**\n * The save type for an upgrade\n */\nexport interface UpgradeSave {\n\tunlocked: boolean\n\tbought: boolean\n}\n\n/**\n * Saves an upgrade\n * @param upgrade The upgrade to save\n */\nexport function saveUpgrade(upgrade: Upgrade): void {\n\tif (upgrade.owner) {\n\t\tconst upgradesObject = save.mods[upgrade.owner.keyname].upgrades\n\t\tif (!upgradesObject)\n\t\t\tsave.mods[upgrade.owner.keyname].upgrades = {\n\t\t\t\t[upgrade.name]: {\n\t\t\t\t\tunlocked: !!upgrade.unlocked,\n\t\t\t\t\tbought: !!upgrade.bought,\n\t\t\t\t},\n\t\t\t}\n\t\telse\n\t\t\tupgradesObject[upgrade.name] = {\n\t\t\t\tunlocked: !!upgrade.unlocked,\n\t\t\t\tbought: !!upgrade.bought,\n\t\t\t}\n\t} else {\n\t\tif (!save.foreign.upgrades) save.foreign.upgrades = {}\n\t\tsave.foreign.upgrades[upgrade.name] = {\n\t\t\tunlocked: !!upgrade.unlocked,\n\t\t\tbought: !!upgrade.bought,\n\t\t}\n\t}\n}\n\n/**\n * Loads an upgrade\n * @param upgrade The upgrade to load\n */\nexport function loadUpgrade(upgrade: Upgrade): UpgradeSave {\n\treturn (\n\t\t(upgrade.owner ? save.mods[upgrade.owner.keyname] : save.foreign)\n\t\t\t?.upgrades?.[upgrade.name] || createDefaultSaveFragment(\"upgrade\")\n\t)\n}\n\n//#endregion\n\n// #region Achievement\n\n/**\n * The save type for an achievement\n */\nexport interface AchievementSave {\n\twon: boolean\n}\n\n/**\n * Saves an achievement\n * @param upgrade The achievement to save\n */\nexport function saveAchievement(upgrade: Achievement): void {\n\tif (upgrade.owner) {\n\t\tconst upgradesObject = save.mods[upgrade.owner.keyname].achievements\n\t\tif (!upgradesObject)\n\t\t\tsave.mods[upgrade.owner.keyname].achievements = {\n\t\t\t\t[upgrade.name]: {\n\t\t\t\t\twon: !!upgrade.won,\n\t\t\t\t},\n\t\t\t}\n\t\telse\n\t\t\tupgradesObject[upgrade.name] = {\n\t\t\t\twon: !!upgrade.won,\n\t\t\t}\n\t} else {\n\t\tif (!save.foreign.achievements) save.foreign.achievements = {}\n\t\tsave.foreign.achievements[upgrade.name] = {\n\t\t\twon: !!upgrade.won,\n\t\t}\n\t}\n}\n\n/**\n * Loads an achievement\n * @param upgrade The achievement to load\n */\nexport function loadAchievement(upgrade: Achievement): AchievementSave {\n\treturn (\n\t\t(upgrade.owner ? save.mods[upgrade.owner.keyname] : save.foreign)\n\t\t\t?.achievements?.[upgrade.name] || createDefaultSaveFragment(\"achievement\")\n\t)\n}\n\n// #endregion\n\n// #region Dragon\n\n/**\n * The save type for Krumblor\n */\ninterface DragonSave {\n\tlevel: number | \"sync\"\n\tauras: [number | \"sync\", number | \"sync\"]\n}\n\n// Dragon saving stuff is in dragon.ts\n\nexport function loadDragon(): void {\n\tif (\n\t\tsave.dragon.level !== \"sync\" &&\n\t\tsave.dragon.level <= Game.dragonLevels.length - 1\n\t)\n\t\tGame.dragonLevel = save.dragon.level\n\tif (\n\t\tsave.dragon.auras[0] !== \"sync\" &&\n\t\tsave.dragon.auras[0] <= Object.keys(Game.dragonAuras).length - 1\n\t)\n\t\tGame.dragonAura = save.dragon.auras[0]\n\tif (\n\t\tsave.dragon.auras[1] !== \"sync\" &&\n\t\tsave.dragon.auras[1] <= Object.keys(Game.dragonAuras).length - 1\n\t)\n\t\tGame.dragonAura2 = save.dragon.auras[1]\n}\n\n//#endregion\n\n// #region Mod\n/**\n * The save type for a mod\n */\nexport interface ModSave {\n\tbuildings?: Record<string, BuildingSave>\n\tupgrades?: Record<string, UpgradeSave>\n\tachievements?: Record<string, AchievementSave>\n\tui?: Record<string, unknown>\n\tcustom: object | null\n}\n\nexport function saveMod(mod: Mod): void {\n\tif (!save.mods[mod.keyname])\n\t\tsave.mods[mod.keyname] = {\n\t\t\tcustom: mod.custom,\n\t\t}\n\telse save.mods[mod.keyname].custom = mod.custom\n\n\tfor (const ui of mod.toggles)\n\t\tif (ui.save) {\n\t\t\tconst modUI = save.mods[mod.keyname].ui\n\t\t\tif (!modUI) save.mods[mod.keyname].ui = {}\n\t\t\telse modUI[ui.keyname] = ui.save()\n\t\t}\n}\n\nexport function loadMod(mod: Mod): ModSave {\n\treturn save.mods[mod.keyname] || createDefaultSaveFragment(\"mod\")\n}\n\nexport function applyModSave(mod: Mod, modSave: ModSave): void {\n\tmod.custom = modSave.custom\n\tif (modSave.ui)\n\t\tfor (const ui of mod.toggles)\n\t\t\tif (ui.load && hasOwnProperty(modSave.ui, ui.keyname))\n\t\t\t\tui.load(modSave.ui[ui.keyname])\n}\n\n// #endregion\n\n/**\n * Loads everything\n */\nexport function loadAll(): void {\n\tfor (const building of customBuildings)\n\t\tapplyAllProps(building, loadBuilding(building))\n\n\tfor (const upgrade of customUpgrades) {\n\t\tapplyAllProps(upgrade, loadUpgrade(upgrade))\n\t\tif (upgrade.bought && Game.CountsAsUpgradeOwned(upgrade.pool))\n\t\t\tGame.UpgradesOwned++\n\t}\n\n\tfor (const achievement of customAchievements) {\n\t\tapplyAllProps(achievement, loadAchievement(achievement))\n\t\tif (achievement.won && Game.CountsAsAchievementOwned(achievement.pool))\n\t\t\tGame.AchievementsOwned++\n\t}\n\n\tloadDragon()\n\n\tfor (const mod of mods) applyModSave(mod, loadMod(mod))\n}\n/**\n * Saves everything\n */\nexport function saveAll(): void {\n\tfor (const mod of mods) saveMod(mod)\n\tfor (const building of customBuildings) saveBuilding(building)\n\tfor (const upgrade of customUpgrades) saveUpgrade(upgrade)\n\tfor (const achievement of customAchievements) saveAchievement(achievement)\n\t// Saving the dragon is in dragon.ts\n}\n\nfunction assume<T>(val: unknown): val is T {\n\treturn true\n}\n\nexport function applySave(newSave: unknown): SaveType {\n\tconst virtualSave = createDefaultSave()\n\t// Assert type\n\tif (typeof newSave !== \"object\" || newSave === null) return virtualSave\n\t// Assert save version\n\tif (\n\t\t!hasOwnProperty(newSave, \"saveVer\") ||\n\t\ttypeof newSave.saveVer !== \"number\" ||\n\t\tnewSave.saveVer > SAVE_VER\n\t)\n\t\treturn virtualSave\n\n\t// Create mods\n\tfunction applyModSave(modSave: unknown): ModSave {\n\t\tconst virtualModSave = createDefaultSaveFragment(\"mod\")\n\n\t\t// Assert type\n\t\tif (typeof modSave !== \"object\" || modSave === null) return virtualModSave\n\t\t// Assert buildings\n\t\tif (\n\t\t\thasOwnProperty(modSave, \"buildings\") &&\n\t\t\ttypeof modSave.buildings === \"object\" &&\n\t\t\tmodSave.buildings !== null &&\n\t\t\tassume<Record<string, unknown>>(modSave.buildings)\n\t\t) {\n\t\t\tvirtualModSave.buildings = {}\n\t\t\tfor (const buildingName in modSave.buildings) {\n\t\t\t\tconst building = modSave.buildings[buildingName] as object\n\t\t\t\tif (typeof building !== \"object\" || building === null) continue\n\t\t\t\tvirtualModSave.buildings[buildingName] = createDefaultSaveFragment(\n\t\t\t\t\t\"building\"\n\t\t\t\t)\n\t\t\t\tapplyAllProps(virtualModSave.buildings[buildingName], building)\n\t\t\t}\n\t\t}\n\t\t// Assert upgrades and achievements\n\t\tif (\n\t\t\thasOwnProperty(modSave, \"upgrades\") &&\n\t\t\ttypeof modSave.upgrades === \"object\" &&\n\t\t\tmodSave.upgrades !== null &&\n\t\t\tassume<Record<string, unknown>>(modSave.upgrades)\n\t\t) {\n\t\t\tvirtualModSave.upgrades = {}\n\t\t\tfor (const upgradeName in modSave.upgrades) {\n\t\t\t\tconst upgrade = modSave.upgrades[upgradeName]\n\t\t\t\tif (typeof upgrade !== \"object\" || upgrade === null) continue\n\t\t\t\tvirtualModSave.upgrades[upgradeName] = createDefaultSaveFragment(\n\t\t\t\t\t\"upgrade\"\n\t\t\t\t)\n\t\t\t\tapplyAllProps(virtualModSave.upgrades[upgradeName], upgrade)\n\t\t\t}\n\t\t}\n\t\tif (\n\t\t\thasOwnProperty(modSave, \"achievements\") &&\n\t\t\ttypeof modSave.achievements === \"object\" &&\n\t\t\tmodSave.achievements !== null &&\n\t\t\tassume<Record<string, unknown>>(modSave.achievements)\n\t\t) {\n\t\t\tvirtualModSave.achievements = {}\n\t\t\tfor (const achievementName in modSave.achievements) {\n\t\t\t\tconst achievement = modSave.achievements[achievementName]\n\t\t\t\tif (typeof achievement !== \"object\" || achievement === null) continue\n\t\t\t\tvirtualModSave.achievements[\n\t\t\t\t\tachievementName\n\t\t\t\t] = createDefaultSaveFragment(\"achievement\")\n\t\t\t\tapplyAllProps(virtualModSave.achievements[achievementName], achievement)\n\t\t\t}\n\t\t}\n\n\t\tif (\n\t\t\thasOwnProperty(modSave, \"ui\") &&\n\t\t\ttypeof modSave.ui === \"object\" &&\n\t\t\tmodSave.ui !== null &&\n\t\t\tassume<Record<string, unknown>>(modSave.ui)\n\t\t) {\n\t\t\tvirtualModSave.ui = {}\n\t\t\tfor (const uiName in modSave.ui)\n\t\t\t\tvirtualModSave.ui[uiName] = modSave.ui[uiName]\n\t\t}\n\n\t\tif (hasOwnProperty(modSave, \"custom\") && typeof modSave.custom === \"object\")\n\t\t\tvirtualModSave.custom = modSave.custom\n\n\t\treturn virtualModSave\n\t}\n\n\t// `foreign` check\n\tif (!hasOwnProperty(newSave, \"foreign\"))\n\t\tvirtualSave.foreign = createDefaultSaveFragment(\"mod\")\n\telse virtualSave.foreign = applyModSave(newSave.foreign)\n\tif (\n\t\thasOwnProperty(newSave, \"mods\") &&\n\t\ttypeof newSave.mods === \"object\" &&\n\t\tnewSave.mods !== null &&\n\t\tassume<Record<string, unknown>>(newSave.mods)\n\t)\n\t\tfor (const modName in newSave.mods)\n\t\t\tvirtualSave.mods[modName] = applyModSave(newSave.mods[modName])\n\n\t// Dragon\n\tif (\n\t\thasOwnProperty(newSave, \"dragon\") &&\n\t\ttypeof newSave.dragon === \"object\" &&\n\t\tnewSave.dragon !== null\n\t) {\n\t\tif (\n\t\t\thasOwnProperty(newSave.dragon, \"level\") &&\n\t\t\t(typeof newSave.dragon.level === \"number\" ||\n\t\t\t\tnewSave.dragon.level === \"sync\")\n\t\t)\n\t\t\tvirtualSave.dragon.level = newSave.dragon.level\n\t\tif (\n\t\t\thasOwnProperty(newSave.dragon, \"auras\") &&\n\t\t\tnewSave.dragon.auras instanceof Array\n\t\t) {\n\t\t\tfor (const i in newSave.dragon.auras) {\n\t\t\t\tconst aura = newSave.dragon.auras[i]\n\t\t\t\tif (typeof aura === \"number\" || aura === \"sync\")\n\t\t\t\t\tvirtualSave.dragon.auras[i] = aura\n\t\t\t}\n\t\t}\n\t}\n\treturn virtualSave\n}\n\nexport function importSave(data: string): void {\n\tlet newSave: unknown\n\tif (data === \"\" || data === \"{}\") initSave()\n\telse\n\t\ttry {\n\t\t\tlet decompressedData = decompressFromUTF16(data)\n\t\t\t// If it's invalid LZ-string, try raw string\n\t\t\tif (!decompressedData) decompressedData = data\n\t\t\tnewSave = JSON.parse(decompressedData)\n\t\t} catch (err) {\n\t\t\tconsole.warn(\"CPPKIES: Found invalid save, creating new one...\")\n\t\t\tconsole.error(err)\n\t\t\tinitSave()\n\t\t}\n\n\tconst computedSave = applySave(newSave)\n\tapplyAllProps(save, computedSave)\n\tloadAll()\n}\n\nexport function exportSave(): string {\n\tsaveAll()\n\treturn compressToUTF16(JSON.stringify(save))\n}\n","import { loadUpgrade } from \"../saves\"\nimport { applyAllProps, CommonValue } from \"../helpers\"\nimport { resolveIcon } from \"../spritesheets\"\nimport { customUpgrades, setUnitOwner } from \"../vars\"\nimport { TieredUpgrade } from \"./tieredUpgrade\"\nimport { Mod, OwnershipUnit } from \"../mods\"\n\n// This file splitting is for the ebic treeshaking\n\nexport function isFortune(\n\tupgrade: TieredUpgrade\n): upgrade is TieredUpgrade<\"fortune\"> {\n\treturn upgrade.tier === \"fortune\"\n}\n\n/**\n * The class for upgrades\n */\nexport class Upgrade extends Game.Upgrade implements OwnershipUnit {\n\towner?: Mod\n\t/**\n\t * Creates an upgrade\n\t * @param name The name of the upgrade\n\t * @param desc The description of it\n\t * @param price The price of it\n\t * @param icon  The icon for it\n\t * @param buyFunc The function that gets called when you buy the upgrade\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdesc: CommonValue<string>,\n\t\tprice: CommonValue<number>,\n\t\ticon: CommonValue<Game.Icon>,\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\tbuyFunc: () => void = (): void => {}\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\ttypeof desc === \"function\" ? \"\" : desc,\n\t\t\ttypeof price === \"function\" ? 0 : price,\n\t\t\ttypeof icon === \"function\" ? [0, 0] : resolveIcon(icon),\n\t\t\tbuyFunc\n\t\t)\n\t\tsetUnitOwner(this)\n\t\tif (typeof desc === \"function\") this.descFunc = desc\n\t\tif (typeof price === \"function\") this.priceFunc = price\n\t\tif (typeof icon === \"function\")\n\t\t\tthis.iconFunction = () => resolveIcon(icon())\n\t\tcustomUpgrades.push(this)\n\t\tconst loadProps = loadUpgrade(this)\n\t\tapplyAllProps(this, loadProps)\n\t\tGame.upgradesToRebuild = 1\n\t\tif (this.bought && Game.CountsAsUpgradeOwned(this.pool))\n\t\t\tGame.UpgradesOwned++\n\t}\n}\n","export const HOOKS_VERSION = 1 as const\n\nexport class Injection {\n\tconstructor(\n\t\tpublic value: string,\n\t\tpublic hookVersion: number,\n\t\tpublic func?: () => void\n\t) {}\n\trunHook(): void {\n\t\tif (shouldRunVersioned(this.hookVersion)) this.func?.()\n\t}\n}\n\nexport function shouldRunVersioned(hookVersion: number): boolean {\n\treturn (\n\t\t!window.__INTERNAL_CPPKIES_HOOKS__ ||\n\t\thookVersion > window.__INTERNAL_CPPKIES_HOOKS__.hooksVersion\n\t)\n}\n\nlet currentMinigame: Game.Minigame | undefined\n\nexport function setMinigameInjection(mg?: Game.Minigame): void {\n\tcurrentMinigame = mg\n}\n\nexport class MinigameInjection extends Injection {\n\trunHook(): void {\n\t\tif (\n\t\t\tcurrentMinigame &&\n\t\t\tshouldRunVersionedMinigame(currentMinigame, this.hookVersion)\n\t\t)\n\t\t\tthis.func?.()\n\t}\n}\n\nexport function shouldRunVersionedMinigame(\n\tmg: Game.Minigame,\n\thookVersion: number\n): boolean {\n\treturn (\n\t\t!window.__INTERNAL_CPPKIES_HOOKS__.injectedMinigames.has(mg.name) ||\n\t\thookVersion > window.__INTERNAL_CPPKIES_HOOKS__.hooksVersion\n\t)\n}\n","import { CommonValue } from \"../helpers\"\nimport { Upgrade } from \"./baseUpgrade\"\n/**\n * The class for heavenly upgrades\n */\nexport class HeavenlyUpgrade extends Upgrade implements Game.HeavenlyUpgrade {\n\tposX: number\n\tposY: number\n\n\tpool = \"prestige\" as const\n\t/**\n\t * Creates a heavenly upgrade\n\t * @param name The name for it\n\t * @param desc The description of it\n\t * @param price The price of in (in Heavenly Chips)\n\t * @param icon The icon for it\n\t * @param position The position of it on the heavenly map screen\n\t * @param parents It's parents, can be mixed ID's with names\n\t * @param buyFunc The function which gets called on being bought\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdesc: CommonValue<string>,\n\t\tprice: CommonValue<number>,\n\t\ticon: CommonValue<Game.Icon>,\n\t\tposition: [number, number],\n\t\tparents: (string | number)[] = [\"Legacy\"],\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\tbuyFunc: () => void = (): void => {}\n\t) {\n\t\tsuper(name, desc, price, icon, buyFunc)\n\n\t\tthis.posX = position[0]\n\t\tthis.posY = position[1]\n\n\t\tthis.parents = parents.map(id =>\n\t\t\ttypeof id === \"number\" ? Game.UpgradesById[id] : Game.Upgrades[id]\n\t\t)\n\n\t\tGame.PrestigeUpgrades.push(this)\n\t\tGame.UpgradePositions[this.id] = position\n\t}\n}\n","import { toSentenseCase } from \"../helpers\"\nimport { Upgrade } from \"./baseUpgrade\"\nimport { isFortune } from \"./baseUpgrade\"\n\nexport class TieredUpgrade<Tier extends string | number = string | number>\n\textends Upgrade\n\timplements Game.TieredUpgradeClass<Tier> {\n\tbuildingTie: Game.Object\n\tbuildingTie1: Game.Object\n\ttier: Tier\n\tpool: \"\"\n\n\t/**\n\t * Creates a tiered upgrade\n\t * @param name The name of the tiered upgrade\n\t * @param quote The description of the upgrade\n\t * @param building The building it boosts\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), `synergy2`(Synergy II), etc.\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tbuilding: Game.Object | string,\n\t\ttier: Tier\n\t) {\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tsuper(\n\t\t\tname,\n\t\t\t`${toSentenseCase(\n\t\t\t\tbuilding.plural\n\t\t\t)} are <b>twice</b> as efficient.<q>${quote}</q>`,\n\t\t\tbuilding.basePrice * Game.Tiers[tier].price,\n\t\t\tGame.GetIcon(building.name, tier)\n\t\t)\n\t\tthis.pool = \"\"\n\t\tthis.tier = tier\n\t\tthis.buildingTie = building\n\t\tbuilding.tieredUpgrades[tier] = this\n\n\t\tthis.buildingTie1 = building\n\t\tif (isFortune(this)) {\n\t\t\tthis.order = 19000\n\t\t\tbuilding.fortune = this\n\t\t\tGame.Tiers[tier].upgrades.push(this)\n\t\t}\n\t\tif (!isNaN(parseInt(tier.toString()))) {\n\t\t\ttier = parseInt(tier.toString()) as Tier\n\t\t}\n\t\tif (typeof tier === \"number\") {\n\t\t\tthis.order = (building.id + 1) * 100 + this.id / 1000\n\t\t\t// Manually patch order since Orteil doesn't like consistency\n\t\t\tthis.order -= Math.max(0, Math.min(building.id - 4, 3)) * 75\n\t\t\tif (building.id >= 8) this.order -= 75\n\t\t}\n\n\t\tbuilding.buyFunction.apply(building)\n\t}\n}\n","type EventListenerFunction<\n\tT extends Record<string, [unknown, unknown]>,\n\tN extends keyof T\n> = (src: T[N][0]) => T[N][1]\n\ntype EventList<T extends Record<string, [unknown, unknown]>> = {\n\t[P in keyof T]: EventListenerFunction<T, P>[]\n}\n\n/**\n * A small implementation of node's EventEmitter with return value support\n */\n\nexport class ReturnableEventEmitter<\n\tT extends Record<string, [unknown, unknown]>\n> {\n\t_events = {} as EventList<T>\n\tforwardTo?: this\n\t/**\n\t * Registers an event listener which is called each time the event is emitted\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\ton<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tif (this.forwardTo) return this.forwardTo.on(name, func)\n\t\tif (!this._events[name]) {\n\t\t\tthis._events[name] = [func]\n\t\t} else this._events[name].push(func)\n\t}\n\t/**\n\t * Registers an event listener which is called for the first time the event is emitted\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\tonce<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tthis.on(name, arg => {\n\t\t\tthis.off(name, func)\n\t\t\treturn func(arg)\n\t\t})\n\t}\n\t/**\n\t * Removes an event listener which was registered before\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\toff<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tif (this.forwardTo) return this.forwardTo.off(name, func)\n\t\tthis._events[name].splice(this._events[name].indexOf(func), 1)\n\t}\n\n\t// Sorry for the minor type mess, I blame typescript\n\t/**\n\t * Emits the event, triggering all registered event listeners under the event name and modifying the given value\n\t * @param name The name of the event\n\t * @param startingValue The starting value for the listeners\n\t */\n\temit<N extends keyof T>(\n\t\tname: N,\n\t\t...startingValue: T[N][0] extends void ? [undefined?] : [T[N][0]]\n\t): T[N][1] {\n\t\tif (this.forwardTo) return this.forwardTo.emit(name, ...startingValue)\n\t\tlet retVal: T[N][0] | T[N][1] = startingValue[0]\n\t\tif (!this._events[name]) this._events[name] = []\n\t\tfor (const func of this._events[name]) retVal = func(retVal)\n\t\treturn retVal\n\t}\n\t/**\n\t * Emits the event, triggering all registered event listeners under the event name and *not* modifying the given value\n\t * @param name The name of the event\n\t * @param startingValue The starting value for the listeners\n\t */\n\tconstEmit<N extends keyof T>(\n\t\tname: N,\n\t\t...startingValue: T[N][0] extends void ? [undefined?] : [T[N][0]]\n\t): void {\n\t\tif (this.forwardTo) return this.forwardTo.constEmit(name, ...startingValue)\n\t\tif (!this._events[name]) this._events[name] = []\n\t\tfor (const func of this._events[name]) func(startingValue[0])\n\t}\n\tsetForwardTarget(target: this): void {\n\t\tfor (const key in this._events)\n\t\t\tif (target._events[key]) target._events[key].push(...this._events[key])\n\t\t\telse target._events[key] = Array.from(this._events[key])\n\t\tthis.forwardTo = target\n\t}\n}\n","import { Injection } from \"./generic\"\nimport { injectCode } from \"../helpers\"\nimport { ReturnableEventEmitter } from \"../lib/eventemitter\"\n\nexport const buildingHooks: Record<\n\tstring,\n\tBuildingHooks\n> = window.__INTERNAL_CPPKIES_HOOKS__\n\t? window.__INTERNAL_CPPKIES_HOOKS__.buildings\n\t: {}\n\n/**\n * Creates the hooks for a building\n * @param building The building to create hooks for\n */\n\nexport type BuildingHooks = ReturnableEventEmitter<{\n\ttooltip: [string, string]\n\tcps: [number, number]\n\tbuy: [void, void]\n\tlevelUp: [void, void]\n}>\n\nexport function createBuildingHooks(building: Game.Object): void {\n\tconst emitter: BuildingHooks = new ReturnableEventEmitter()\n\tconst injections = [\n\t\tnew Injection(\"tooltip\", 1, () => {\n\t\t\tbuilding.tooltip = injectCode(\n\t\t\t\tinjectCode(building.tooltip, \"return\", \"let tempRet = \", \"replace\"),\n\t\t\t\tnull,\n\t\t\t\t`\\n//Cppkies injection\n\t\t\t\treturn __INTERNAL_CPPKIES_HOOKS__.buildings[this.name].emit(\"tooltip\", tempRet)`,\n\t\t\t\t\"after\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"buy\", 1, () => {\n\t\t\tbuilding.buy = injectCode(\n\t\t\t\tbuilding.buy,\n\t\t\t\tnull,\n\t\t\t\t`\\n//Cppkies injection\n\t\t\t\tif(success) {\n\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.buildings[this.name].emit(\"buy\")\n\t\t\t\t}`,\n\t\t\t\t\"after\"\n\t\t\t)\n\t\t}),\n\t\tnew Injection(\"levelUp\", 1, () => {\n\t\t\tbuilding.levelUp = injectCode(\n\t\t\t\tbuilding.levelUp,\n\t\t\t\t\"me.level+=1;\",\n\t\t\t\t`\\n// Cppkies injection\n__INTERNAL_CPPKIES_HOOKS__.buildings[me.name].emit(\"levelUp\")`,\n\t\t\t\t\"after\",\n\t\t\t\t{ me: building }\n\t\t\t)\n\t\t}),\n\t]\n\tinjections.forEach(inject => inject.runHook())\n\tbuildingHooks[building.name] = emitter\n}\n","import { injectCode, injectCodes } from \"../helpers\"\nimport { ReturnableEventEmitter } from \"../lib/eventemitter\"\nimport { buildingHooks, createBuildingHooks } from \"./buildings\"\nimport { HOOKS_VERSION, Injection } from \"./generic\"\n\nexport type Hooks = ReturnableEventEmitter<{\n\t//! Custom menus\n\t/**\n\t * Allows you to add entries to all menus\n\t */\n\tmenu: [void, void]\n\t/**\n\t * Allows you to add entries to the options menu\n\t */\n\toptionsMenu: [void, void]\n\t/**\n\t * Allows you to add entries to the stats menu\n\t */\n\tstatsMenu: [void, void]\n\t/**\n\t * Allows you to add entries to the info menu\n\t */\n\tinfoMenu: [void, void]\n\n\t//! Data manipulation\n\n\t/**\n\t * Allows you to execute a function on before saving, useful for cleaning up data which will be invalid if no mod is present\n\t */\n\tpreSave: [void, void]\n\n\tpostSave: [void, void]\n\t/**\n\t * Allows you to execute a function on data reset, useful for custom data resetting\n\t * @param hard whether or not this is a hard reset\n\t */\n\treset: [boolean, void]\n\n\treincarnate: [void, void]\n\t//! Tiers\n\n\tgetIcon: [\n\t\t{\n\t\t\ttype: string\n\t\t\ttier: string | number\n\t\t\ticon: Game.Icon\n\t\t},\n\t\t{\n\t\t\ttype: string\n\t\t\ttier: string | number\n\t\t\ticon: Game.Icon\n\t\t}\n\t]\n\n\t//! Buildings\n\t/**\n\t * Called after BuildStore, used internally\n\t */\n\tbuildStore: [void, void]\n\t/**\n\t * Adds grandma options for the grandma art\n\t */\n\tgrandmaPic: [string[], string[]]\n\t//! Gameplay\n\trawCps: [number, number]\n\trawCpsMult: [number, number]\n\tcps: [number, number]\n\tcpsMult: [number, number]\n\t/**\n\t * The multiplier of cursor finger bonus\n\t */\n\tcursorFingerMult: [number, number]\n\t/**\n\t * Cookies per click\n\t */\n\tcpc: [number, number]\n\tcpcAdd: [number, number]\n\t//! Vanilla hooks\n\tlogic: [void, void]\n\tdraw: [void, void]\n\tcheck: [void, void]\n\tticker: [string[], string[]]\n\t// !!!INTERNAL DO NOT USE!!! Use buildingHooks' \"cps\" instead\n\tbuildingCps: [\n\t\t{ building: string; cps: number },\n\t\t{ building: string; cps: number }\n\t]\n\t//! Special objects hooks\n\tspecialPic: [\n\t\t{ tab: string; pic: string; frame: number },\n\t\t{ tab: string; pic: string; frame: number }\n\t]\n}>\n\nconst hooks: Hooks = new ReturnableEventEmitter()\n\nexport default hooks\n\ndeclare global {\n\tinterface Window {\n\t\t__INTERNAL_CPPKIES_HOOKS__: {\n\t\t\tbasegame: Hooks\n\t\t\tbuildings: typeof buildingHooks\n\t\t\thiddenMilkMult: number\n\t\t\tcreateBuildingHooks: typeof createBuildingHooks\n\t\t\thooksVersion: number\n\t\t\tinjectedMinigames: Set<string>\n\t\t}\n\t}\n}\n\n/**\n * Creates the function hooks for base game\n * @returns A promise\n */\nexport function injectBasegame(): Promise<Hooks> {\n\treturn new Promise(resolve => {\n\t\tif (window.__INTERNAL_CPPKIES_HOOKS__) {\n\t\t\t// The hooks with the lower version target the greater ones, if this is the lower version hooks, just return the good one\n\t\t\tif (window.__INTERNAL_CPPKIES_HOOKS__.hooksVersion > HOOKS_VERSION) {\n\t\t\t\thooks.setForwardTarget(window.__INTERNAL_CPPKIES_HOOKS__.basegame)\n\t\t\t\treturn window.__INTERNAL_CPPKIES_HOOKS__.basegame\n\t\t\t} else window.__INTERNAL_CPPKIES_HOOKS__.basegame.setForwardTarget(hooks)\n\t\t}\n\t\tconst injections: Array<Injection> = [\n\t\t\t//// -- Custom menus -- ////\n\t\t\t/*\n\t\t\tHooks that allow you to add new stuff do the menu \n\n\t\t\t\"optionsMenu\"\n\t\t\tAllows you to add entries to the options menu\n\n\t\t\t\"statsMenu\"\n\t\t\tAllows you to add entries to the stats menu\n\n\t\t\t\"logMenu\"\n\t\t\tAllows you to add entries to the info menu\n\n\t\t\t\"menu\"\n\t\t\tAllows you to add entries to all menus\n\t\t\t*/\n\t\t\tnew Injection(\"menu\", 1, () => {\n\t\t\t\tGame.UpdateMenu = injectCode(\n\t\t\t\t\tGame.UpdateMenu,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\tswitch (Game.onMenu) {\n\t\t\t\t\t\tcase \"prefs\":\n\t\t\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"optionsMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"stats\":\n\t\t\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"statsMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"logMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"menu\")\n\t\t\t\t\t`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Data manipulation -- ////\n\n\t\t\tnew Injection(\"preSave\", 1, () => {\n\t\t\t\tGame.WriteSave = injectCode(\n\t\t\t\t\tGame.WriteSave,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"preSave\")\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"postSave\", 1, () => {\n\t\t\t\tGame.WriteSave = injectCode(\n\t\t\t\t\tGame.WriteSave,\n\t\t\t\t\t\"if (type==2 || type==3)\",\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"postSave\")\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"reset\", 1, () => {\n\t\t\t\t// Called before everything else, so ascend with _ achievements are possible\n\t\t\t\tGame.Reset = injectCode(\n\t\t\t\t\tGame.Reset,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\t__INTERNAL_CPPKIES_HOOKS__.basegame.constEmit(\"reset\", hard)\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"reincarnate\", 1, () => {\n\t\t\t\tGame.registerHook(\"reincarnate\", () => hooks.emit(\"reincarnate\"))\n\t\t\t}),\n\t\t\t//// -- Tiers -- ////\n\t\t\t/**\n\t\t\t\t\"customGetIcon\"\n\t\t\t\tOverrides for icons gotten from GetIcon\n\t\t\t\ttype: string - The type of icon, either a building name or \"Kitten\"\n\t\t\t\ttier: string - The tier of the icon, gotten from Tier.iconRow\n\t\t\t\ticon: Icon - the current icon\n\t\t\t */\n\t\t\tnew Injection(\"getIcon\", 1, () => {\n\t\t\t\tGame.GetIcon = injectCodes(Game.GetIcon, [\n\t\t\t\t\t[\n\t\t\t\t\t\t\"return [col,Game.Tiers[tier].iconRow];\",\n\t\t\t\t\t\t`// Cppkies Injection\n\t\t\t\t\treturn __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"getIcon\", { icon: [col, Game.Tiers[tier].iconRow], tier: tier, type: type }).icon`,\n\t\t\t\t\t\t\"replace\",\n\t\t\t\t\t],\n\t\t\t\t\t[\"col=18;\", 'else if (type === \"Mouse\") col = 11;', \"after\"],\n\t\t\t\t])\n\t\t\t}),\n\t\t\t//// -- Sugar Lump -- ////\n\t\t\t// TODO Rewrite Game.computeLumpType\n\t\t\t// TODO Cppkies.hooks.customComputeLumpType\n\t\t\t// TODO Cppkies.hooks.customDoLumps\n\t\t\t//// -- Shimmers -- ////\n\t\t\t// TODO everything shimmer related\n\t\t\t//// -- Prompts -- ////\n\t\t\t// Idk what here\n\t\t\t//// -- Menus -- ////\n\t\t\t// TODO Patch disabled buttons(?)\n\t\t\t//// -- Buildings -- ////\n\t\t\tnew Injection(\"buildStore\", 1, () => {\n\t\t\t\tGame.BuildStore = injectCode(\n\t\t\t\t\tGame.BuildStore,\n\t\t\t\t\tnull,\n\t\t\t\t\t`;\\n__INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"buildStore\")`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"grandmaPic\", 1, () => {\n\t\t\t\tGame.Objects.Grandma.art.pic = injectCode(\n\t\t\t\t\tGame.Objects.Grandma.art.pic as (\n\t\t\t\t\t\tbuilding: Game.Object,\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => string,\n\t\t\t\t\t\"return choose(list)+'.png'\",\n\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\tlist = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"grandmaPic\", list)\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Gameplay -- ////\n\t\t\tnew Injection(\"cps\", 1, () => {\n\t\t\t\tGame.CalculateGains = injectCodes(Game.CalculateGains, [\n\t\t\t\t\t[\n\t\t\t\t\t\t\"var rawCookiesPs=Game.cookiesPs*mult;\",\n\t\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\tGame.cookiesPs = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"rawCps\", Game.cookiesPs);\n\t\t\t\t\tmult = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"rawCpsMult\", mult);\\n`,\n\t\t\t\t\t\t\"before\",\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t\"Game.cookiesPs=Game.runModHookOnValue('cps',Game.cookiesPs);\",\n\t\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\t\tmult = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"cpsMult\", mult);\\n`,\n\t\t\t\t\t\t\"before\",\n\t\t\t\t\t],\n\t\t\t\t])\n\t\t\t\tGame.registerHook(\"cps\", cps => hooks.emit(\"cps\", cps))\n\t\t\t}),\n\t\t\tnew Injection(\"cursorFingerMult\", 1, () => {\n\t\t\t\tGame.Objects.Cursor.cps = injectCode(\n\t\t\t\t\tGame.Objects.Cursor.cps,\n\t\t\t\t\t`var mult=1;`,\n\t\t\t\t\t`// Cppkies injection\nadd = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"cursorFingerMult\", add);\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"cpc\", 1, () => {\n\t\t\t\tGame.mouseCps = injectCodes(Game.mouseCps, [\n\t\t\t\t\t[\n\t\t\t\t\t\t`var num=0;`,\n\t\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\t\tadd = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"cursorFingerMult\", add);\\n`,\n\t\t\t\t\t\t\"before\",\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t`var out`,\n\t\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\t\tadd = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"cpcAdd\", add);\\n`,\n\t\t\t\t\t\t\"before\",\n\t\t\t\t\t],\n\t\t\t\t])\n\n\t\t\t\tGame.registerHook(\"cookiesPerClick\", cpc => hooks.emit(\"cpc\", cpc))\n\t\t\t}),\n\t\t\t// !!!INTERNAL DO NOT USE!!! Use buildingHooks' \"cps\" instead\n\t\t\tnew Injection(\"buildingCps\", 1, () => {\n\t\t\t\tGame.CalculateGains = injectCode(\n\t\t\t\t\tGame.CalculateGains,\n\t\t\t\t\t\"me.storedTotalCps=me.amount*me.storedCps;\",\n\t\t\t\t\t`// Cppkies injection (internal, do not use)\nme.storedCps = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"buildingCps\", { building: i, cps: me.storedCps }).cps;\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Vanilla -- ////\n\t\t\tnew Injection(\"logic\", 1, () => {\n\t\t\t\tGame.registerHook(\"logic\", () => hooks.emit(\"logic\"))\n\t\t\t}),\n\t\t\tnew Injection(\"draw\", 1, () => {\n\t\t\t\tGame.registerHook(\"draw\", () => hooks.emit(\"draw\"))\n\t\t\t}),\n\t\t\tnew Injection(\"check\", 1, () => {\n\t\t\t\tGame.registerHook(\"check\", () => hooks.emit(\"check\"))\n\t\t\t}),\n\t\t\tnew Injection(\"ticker\", 1, () => {\n\t\t\t\tGame.getNewTicker = injectCode(\n\t\t\t\t\tGame.getNewTicker,\n\t\t\t\t\t\"Game.TickerAge=Game.fps*10;\",\n\t\t\t\t\t`// Cppkies injection\nlist = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"ticker\", list);\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Specials -- ////\n\t\t\tnew Injection(\"specialPic\", 1, () => {\n\t\t\t\tGame.DrawSpecial = injectCode(\n\t\t\t\t\tGame.DrawSpecial,\n\t\t\t\t\t\"if (hovered || selected)\",\n\t\t\t\t\t`// Cppkies injection\nconst override = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"specialPic\", {tab: Game.specialTabs[i], frame: frame, pic: pic})\npic = override.pic\nframe = override.frame;\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t\tGame.ToggleSpecialMenu = injectCode(\n\t\t\t\t\tGame.ToggleSpecialMenu,\n\t\t\t\t\t\"else {pic='dragon.png?v='+Game.version;frame=4;}\",\n\t\t\t\t\t`// Cppkies injection\nconst override = __INTERNAL_CPPKIES_HOOKS__.basegame.emit(\"specialPic\", {tab: Game.specialTab, frame: frame, pic: pic})\npic = override.pic\nframe = override.frame;\\n`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"autoMoveDragonLevels\", 1, () => {\n\t\t\t\tGame.ToggleSpecialMenu = injectCodes(Game.ToggleSpecialMenu, [\n\t\t\t\t\t[\n\t\t\t\t\t\t\">=5\",\n\t\t\t\t\t\t'>=Game.dragonLevels.findIndex(val => val.name === \"Krumblor, cookie hatchling\")',\n\t\t\t\t\t\t\"replace\",\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t\">=25\",\n\t\t\t\t\t\t'>=Game.dragonLevels.findIndex(val => val.action === \"Train secondary aura<br><small>Lets you use two dragon auras simultaneously</small>\") + 1',\n\t\t\t\t\t\t\"replace\",\n\t\t\t\t\t],\n\t\t\t\t])\n\t\t\t}),\n\t\t\tnew Injection(\"loaderFreedom\", 1, () => {\n\t\t\t\tGame.Loader.Load = injectCode(\n\t\t\t\t\tGame.Loader.Load,\n\t\t\t\t\t\"img.src=this.domain\",\n\t\t\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\timg.src = (assets[i].indexOf('http') !== -1 ? \"\" : this.domain)\n`,\n\t\t\t\t\t\"replace\"\n\t\t\t\t)\n\t\t\t\tGame.UpdateMenu = injectCodes(Game.UpdateMenu, [\n\t\t\t\t\t[\n\t\t\t\t\t\t\"url(img/'+milk.pic+'.png)\",\n\t\t\t\t\t\t\"url(' + (milk.pic.indexOf('http') >= 0 ? milk.pic : 'img/'+milk.pic) + '.png)\",\n\t\t\t\t\t\t\"replace\",\n\t\t\t\t\t],\n\t\t\t\t\t[\n\t\t\t\t\t\t\"img/icons.png?v='+Game.version+'\",\n\t\t\t\t\t\t\"' + (Game.Milks[i].iconLink ? Game.Milks[i].iconLink : 'img/icons.png?v='+Game.version) + '\",\n\t\t\t\t\t\t\"replace\",\n\t\t\t\t\t],\n\t\t\t\t])\n\t\t\t}),\n\t\t\tnew Injection(\"buildingAutoHook\", 1, () => {\n\t\t\t\tGame.Object = injectCode(\n\t\t\t\t\tGame.Object,\n\t\t\t\t\t\"Game.ObjectsN++\",\n\t\t\t\t\t`\n// Cppkies injection\n__INTERNAL_CPPKIES_HOOKS__.createBuildingHooks(this);\\n`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"milkMult\", 1, () => {\n\t\t\t\tGame.CalculateGains = injectCode(\n\t\t\t\t\tGame.CalculateGains,\n\t\t\t\t\t\"var catMult=1;\",\n\t\t\t\t\t`// Cppkies injection\n\t\t\t__INTERNAL_CPPKIES_HOOKS__.hiddenMilkMult = milkMult;\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t]\n\t\tinjections.forEach(inject => inject.runHook())\n\n\t\twindow.__INTERNAL_CPPKIES_HOOKS__ = {\n\t\t\tbasegame: hooks,\n\t\t\tbuildings: buildingHooks,\n\t\t\thiddenMilkMult: 1,\n\t\t\tcreateBuildingHooks,\n\t\t\thooksVersion: HOOKS_VERSION,\n\t\t\tinjectedMinigames: new Set(),\n\t\t}\n\t\tresolve(hooks)\n\t})\n}\n","import { Upgrade } from \"./baseUpgrade\"\nimport { toSentenseCase } from \"../helpers\"\nimport hooks from \"../injects/basegame\"\n\nexport class GrandmaSynergy extends Upgrade\n\timplements Game.GrandmaSynergyClass {\n\tbuildingTie: Game.Object\n\tpool: \"\"\n\t/**\n\t * Creates a grandma synergy upgrade\n\t * @param name The name for the upgrade(Usually something like \"_ Grandmas\")\n\t * @param quote The flavor text of the upgrade\n\t * @param buildingName The building to be tied with\n\t * @param grandmaPicture Optional, the picture of the grandma to use in grandma art\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tbuilding: Game.Object | string,\n\t\tgrandmaPicture?: string\n\t) {\n\t\tif (grandmaPicture) {\n\t\t\tif (!grandmaPicture.endsWith(\".png\"))\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`Can't use the grandma picture URL \"${grandmaPicture}\", URL must end with .png`\n\t\t\t\t)\n\t\t\tgrandmaPicture = grandmaPicture.substring(0, grandmaPicture.length - 4)\n\t\t}\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tlet grandmaNumber: string | number = building.id - 1\n\t\tif (grandmaNumber === 1) grandmaNumber = \"grandma\"\n\t\telse grandmaNumber = `${grandmaNumber} grandmas`\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Grandmas are <b>twice</b> as efficient. ${toSentenseCase(\n\t\t\t\tbuilding.plural\n\t\t\t)} gain <b>+1% CpS</b> per ${grandmaNumber}.<q>${quote}</q>`,\n\t\t\tbuilding.basePrice * Game.Tiers[2].price,\n\t\t\t[10, 9, \"\"],\n\t\t\tGame.Objects.Grandma.redraw\n\t\t)\n\t\tthis.pool = \"\"\n\t\tbuilding.grandma = this\n\t\tthis.buildingTie = building\n\t\tthis.order = 250 + this.id / 1000\n\t\tif (building.id >= 12) this.order += 5\n\t\tGame.GrandmaSynergies.push(this.name)\n\t\tif (grandmaPicture) {\n\t\t\thooks.on(\"grandmaPic\", src => {\n\t\t\t\tif (this.bought) return [...src, grandmaPicture] as string[]\n\t\t\t\telse return src\n\t\t\t})\n\t\t}\n\t\tGame.Objects.Grandma.redraw()\n\t\tbuilding.buyFunction.apply(building)\n\t}\n}\n","import { toSentenseCase } from \"../helpers\"\nimport { Upgrade } from \"./baseUpgrade\"\nexport class SynergyUpgrade<Tier extends string> extends Upgrade\n\timplements Game.SynergyUpgradeClass<Tier> {\n\tbuildingTie1: Game.Object\n\tbuildingTie2: Game.Object\n\ttier: Tier\n\tpool: \"\"\n\t/**\n\t * Creates a synergy upgrade\n\t * @param name The name for the upgrade\n\t * @param quote The flavor text for it\n\t * @param building1 The first building, note that the icon will be inherited from this\n\t * @param building2 The second building\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `synergy1`(Synergy I), `synergy2`(Synergy II), etc. **Warning: The tier must have a req field**\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tbuilding1: Game.Object | string,\n\t\tbuilding2: Game.Object | string,\n\t\ttier: Tier\n\t) {\n\t\tif (typeof building1 === \"string\") building1 = Game.Objects[building1]\n\t\tif (typeof building2 === \"string\") building2 = Game.Objects[building2]\n\t\tconst icon = Game.GetIcon(building1.name, tier)\n\t\t// Swap\n\t\tif (building1.basePrice > building2.basePrice) {\n\t\t\tconst temp = building1\n\t\t\tbuilding1 = building2\n\t\t\tbuilding2 = temp\n\t\t}\n\t\tsuper(\n\t\t\tname,\n\t\t\t`${toSentenseCase(\n\t\t\t\tbuilding1.plural\n\t\t\t)} gain <b>+5% CpS</b> per ${building2.name.toLowerCase()}.<br>${toSentenseCase(\n\t\t\t\tbuilding2.plural\n\t\t\t)} gain <b>+0.1% CpS</b> per \n\t\t\t${building1.name.toLowerCase()}.<q>${quote}</q>`,\n\t\t\t(building1.basePrice * 10 + building2.basePrice * 1) *\n\t\t\t\tGame.Tiers[tier].price,\n\t\t\ticon\n\t\t)\n\t\tthis.pool = \"\"\n\t\tthis.tier = tier\n\t\tthis.buildingTie1 = building1\n\t\tthis.buildingTie2 = building2\n\t\tthis.order = 5000 + this.id / 1000\n\t\tbuilding1.synergies.push(this)\n\t\tbuilding2.synergies.push(this)\n\t\tGame.Tiers[tier].upgrades.push(this)\n\t\tbuilding1.buyFunction.apply(building1)\n\t}\n}\n","import { Upgrade } from \"./baseUpgrade\"\nimport hooks from \"../injects/basegame\"\nimport { buildingHooks } from \"../injects/buildings\"\n/**\n * Early cursor logs which don't follow any pattern\n */\nconst cursorEarlyLogs = [5, 7, 8, 9, 10]\n\nexport class CursorUpgrade<Tier extends string | number> extends Upgrade\n\timplements Game.GenericTieredUpgrade<Tier> {\n\tpool: \"\"\n\ttier: Tier\n\t/**\n\t * Creates an upgrade which powers up the Thousand Fingers upgrade\n\t * @param name Name of the upgrade\n\t * @param quote Quote (flavour text) of it\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), `synergy2`(Synergy II), etc.\n\t * @param power The multiplier of of thousand fingers, if omitted, 20 by default, which is the multiplier of later cursor upgrades\n\t */\n\tconstructor(name: string, quote: string, tier: Tier, power = 20) {\n\t\tconst building = Game.Objects.Cursor\n\t\tconst tierPow = parseInt(tier.toString())\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Multiplies the gain from Thousand fingers by <b>${power}</b>.<q>${quote}</q>`,\n\t\t\tGame.Tiers[tier].special || isNaN(tierPow)\n\t\t\t\t? building.basePrice * Game.Tiers[tier].price\n\t\t\t\t: // Calculate the cursor price\n\t\t\t\t  10 **\n\t\t\t\t\t\t// Early logs kinda don't really follow anything\n\t\t\t\t\t\t(cursorEarlyLogs[\n\t\t\t\t\t\t\t// Get the latest one\n\t\t\t\t\t\t\tMath.min(tierPow - 4, cursorEarlyLogs.length - 1)\n\t\t\t\t\t\t] +\n\t\t\t\t\t\t\t// The normal *10^3 for all other stuffs\n\t\t\t\t\t\t\tMath.max(tierPow - 8, 0) * 3),\n\t\t\tGame.GetIcon(building.name, tier)\n\t\t)\n\t\tthis.tier = tier\n\t\tthis.pool = \"\"\n\t\tthis.order = 100 + this.id / 1000\n\t\thooks.on(\"cursorFingerMult\", mult => (this.bought ? mult * power : mult))\n\t\tif (!Game.Tiers[tier].special && !isNaN(tierPow))\n\t\t\tbuildingHooks.Cursor.on(\"buy\", () => {\n\t\t\t\tif (building.amount >= (tierPow === 4 ? 25 : (tierPow - 4) * 50))\n\t\t\t\t\tGame.Unlock(this.name)\n\t\t\t})\n\t\tif (tier === \"fortune\") Game.Tiers[tier].upgrades.push(this)\n\t\tGame.Objects.Cursor.buyFunction.apply(Game.Objects.Cursor)\n\t}\n}\n","import hooks from \"../injects/basegame\"\nimport { Upgrade } from \"./baseUpgrade\"\n\n/**\n * Exceptions when the change kitten cost is not 3 (in log10)\n */\nconst kittenPriceRules: Record<number | \"default\", number> = {\n\t1: 5,\n\t2: 4,\n\t4: 4,\n\tdefault: 3,\n}\n\n/**\n * Calculates the cost of a kitten, based on price rules and tier.\n * @param tier The tier, must be a number\n */\nfunction computeKittenCost(tier: number): number {\n\tlet cost = 1\n\tfor (let i = 1; i <= tier; i++)\n\t\tif (i in kittenPriceRules) cost += kittenPriceRules[i]\n\t\telse cost += kittenPriceRules.default\n\treturn 9 * 10 ** cost\n}\n\n/**\n * The pattern of kitten powers, might be inaccurate on further versions.\n * (Loops if tier is beyond length)\n */\nconst kittenPowerPattern = [\n\t0.1,\n\t0.125,\n\t0.15,\n\t0.175,\n\t0.2,\n\t0.2,\n\t0.2,\n\t0.2,\n\t0.2,\n\t0.175,\n\t0.15,\n\t0.125,\n\t0.115,\n]\n\nexport class KittenUpgrade<Tier extends string | number> extends Upgrade\n\timplements Game.KittenUpgrade<Tier> {\n\tkitten = true as const\n\tpool = \"\" as const\n\t/**\n\t * Creates a new kitten upgrade, which boosts CpS based on achievement amount\n\t * @param name Name of the upgrade\n\t * @param quote The quote (flavour text) of it\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), `synergy2`(Synergy II), etc.\n\t * @param power The multiplier of CpS per 25 achievement, if not set, automatically calculated\n\t * @param cost The cost of the upgrade, if not set, automatically calculated\n\t * @param milkUnlockAmount The milk progess (achievements / 25) required to unlock the upgrade, if not set, automatically calculated\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tpublic tier: Tier,\n\t\tpower = Game.Tiers[tier].special || isNaN(parseInt(tier.toString()))\n\t\t\t? null\n\t\t\t: kittenPowerPattern[\n\t\t\t\t\t(parseInt(tier.toString()) - 1) % (kittenPowerPattern.length - 1)\n\t\t\t  ],\n\t\tcost?: number,\n\t\tmilkUnlockAmount = Game.Tiers[tier].special ||\n\t\tisNaN(parseInt(tier.toString()))\n\t\t\t? null\n\t\t\t: tier === 1\n\t\t\t? 0.5\n\t\t\t: // Trust me\n\t\t\t  (tier as number) - 1\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\t`You gain <b>more CpS</b> the more milk you have.<q>${quote}</q>`,\n\t\t\tGame.Tiers[tier].special || isNaN(parseInt(tier.toString()))\n\t\t\t\t? cost ?? 0\n\t\t\t\t: computeKittenCost(tier as number), //Just trust me.\n\t\t\tGame.GetIcon(\"Kitten\", tier)\n\t\t)\n\t\tif (power === null)\n\t\t\tconsole.warn(\n\t\t\t\t\"Please make sure to specify the power if the kitten tier is special\"\n\t\t\t)\n\t\tif (\n\t\t\t(Game.Tiers[tier].special || isNaN(parseInt(tier.toString()))) &&\n\t\t\tcost === undefined\n\t\t)\n\t\t\tconsole.warn(\n\t\t\t\t\"Please make sure to specify the cost if the kitten tier is special\"\n\t\t\t)\n\t\tif (milkUnlockAmount !== null)\n\t\t\thooks.on(\"logic\", () => {\n\t\t\t\tif (Game.milkProgress >= milkUnlockAmount) Game.Unlock(this.name)\n\t\t\t})\n\t\tthis.order = 20000 + this.id / 1000\n\t\tif (power !== null)\n\t\t\thooks.on(\"rawCpsMult\", mult => {\n\t\t\t\tconst addMult = this.bought\n\t\t\t\t\t? 1 +\n\t\t\t\t\t  Game.milkProgress *\n\t\t\t\t\t\t\tpower *\n\t\t\t\t\t\t\twindow.__INTERNAL_CPPKIES_HOOKS__.hiddenMilkMult\n\t\t\t\t\t: 1\n\t\t\t\tGame.cookiesMultByType[\"kittens\"] *= addMult\n\n\t\t\t\treturn mult * addMult\n\t\t\t})\n\t\tGame.UpgradesByPool[\"kitten\"].push(this)\n\t\tif (tier === \"fortune\") Game.Tiers[tier].upgrades.push(this)\n\t}\n}\n","import { Upgrade } from \"./baseUpgrade\"\nimport hooks from \"../injects/basegame\"\n\nexport class MouseUpgrade<Tier extends string | number> extends Upgrade\n\timplements Game.GenericTieredUpgrade<Tier> {\n\tpool = \"\" as const\n\t/**\n\t * Creates an upgrade which powers up the cookies per click\n\t * @param name Name of the upgrade\n\t * @param quote Quote (flavour text) of it\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), `synergy2`(Synergy II), etc.\n\t * @param power The multiplier of CpS per click, `0.01` by default, which is what all other cursor upgrades give\n\t */\n\tconstructor(name: string, quote: string, public tier: Tier, power = 1) {\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Clicking gains <b>+${power}% of your CpS</b>.<q>${quote}</q>`,\n\t\t\t10 ** (3 + parseInt(tier.toString()) * 2),\n\t\t\tGame.GetIcon(\"Mouse\", tier) // Injected in `basegame.ts`\n\t\t)\n\t\tconst tierPow = parseInt(tier.toString())\n\t\tthis.order = 150 + this.id / 1000\n\t\thooks.on(\"cpcAdd\", add =>\n\t\t\tthis.bought ? add + (Game.cookiesPs * power) / 100 : add\n\t\t)\n\t\tif (!Game.Tiers[tier].special && !isNaN(tierPow))\n\t\t\thooks.on(\"check\", () => {\n\t\t\t\tif (Game.handmadeCookies >= 10 ** (1 + tierPow * 2))\n\t\t\t\t\tGame.Unlock(this.name)\n\t\t\t})\n\t\tif (tier === \"fortune\") Game.Tiers[tier].upgrades.push(this)\n\t}\n}\n","import { CommonValue } from \"../helpers\"\nimport { Upgrade } from \"./baseUpgrade\"\nimport { miscValues } from \"../vars\"\n\nexport class CookieUpgrade extends Upgrade implements Game.CookieUpgrade {\n\tpool = \"cookie\" as const\n\t/**\n\t * Create an upgrade which multiplier cookie production\n\t * @param name Name of the cookie\n\t * @param quote Quote (flavour text) of it\n\t * @param price The price of the cookie\n\t * @param icon The icon of it\n\t * @param power The multiplier of CpS, in %, so `5` means +5% CpS, etc.\n\t * @param req Some optional conditions, etc. the season, the upgrade required, or if the upgrade can be unlocked naturally at all to unlock this\n\t * (Note: All cookies which aren't locked *require* you to have 1/20 of it's cost to be unlocked)\n\t * @param order Position of the cookie in the list, Most cookies have 10020 by default, cookies from boxes and special cookies have different orders.\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tprice: CommonValue<number>,\n\t\ticon: Game.Icon,\n\t\tpublic power: Upgrade[\"power\"],\n\t\treq?: { require?: string; season?: string; locked?: boolean },\n\t\torder?: number\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Cookie production multiplier <b>+${\n\t\t\t\ttypeof power === \"function\" ? \"???\" : Beautify(power, 1)\n\t\t\t}%</b>.<q>${quote}</q>`,\n\t\t\tprice,\n\t\t\ticon\n\t\t)\n\t\tif (typeof power === \"function\") {\n\t\t\tthis.baseDesc = `Cookie production multiplier <b>+${Beautify(\n\t\t\t\tpower(this),\n\t\t\t\t1\n\t\t\t)}%</b>.<q>${quote}</q>`\n\t\t\tthis.desc = BeautifyInText(this.baseDesc)\n\t\t}\n\t\tthis.order = (order ?? miscValues.cookieOrder ?? 10020) + this.id / 1000\n\t\tthis.unlockAt = {\n\t\t\tname,\n\t\t\tcookies: (typeof price === \"function\" ? price() : price) / 20,\n\t\t\trequire: req?.require,\n\t\t\tseason: req?.season,\n\t\t}\n\t\tGame.UnlockAt.push(this.unlockAt)\n\t\tGame.UpgradesByPool.cookie.push(this)\n\t\tGame.cookieUpgrades.push(this)\n\t}\n}\n","import { resolveIcon } from \"../spritesheets\"\nimport { applyAllProps } from \"../helpers\"\nimport { customAchievements, setUnitOwner } from \"../vars\"\nimport { loadAchievement } from \"../saves\"\nimport { Mod, OwnershipUnit } from \"../mods\"\n\nexport class Achievement extends Game.Achievement implements OwnershipUnit {\n\towner?: Mod\n\t/**\n\t * Creates an achievement\n\t * @param name The name of the achievement\n\t * @param desc The description of it\n\t * @param icon  The icon for it\n\t */\n\tconstructor(name: string, desc: string, icon: Game.Icon) {\n\t\tsuper(name, desc, resolveIcon(icon))\n\t\tsetUnitOwner(this)\n\t\tapplyAllProps(this, loadAchievement(this))\n\t\tcustomAchievements.push(this)\n\t\tif (this.won && Game.CountsAsAchievementOwned(this.pool))\n\t\t\tGame.AchievementsOwned++\n\t}\n}\n","import { Achievement } from \"./baseAchievement\"\nimport { buildingHooks } from \"../injects/buildings\"\n\nexport class TieredAchievement<Tier extends string | number> extends Achievement\n\timplements Game.TieredAchievementClass<Tier> {\n\tbuildingTie: Game.Object\n\tpool: \"normal\"\n\ttier: Tier\n\t/**\n\t * Creates an achievement which is won by having an amount of buildings\n\t * @param name The name of it\n\t * @param quote The optional quote of it\n\t * @param tier The upgrade's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), etc. (Can be \"cursor2\" or \"cursor50\" for special cursor amounts)\n\t * @param building The buildings linked to this achievement\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string | null,\n\t\tbuilding: Game.Object | string,\n\t\ttier: Tier | \"cursor2\" | \"cursor50\"\n\t) {\n\t\tconst buildingObject =\n\t\t\ttypeof building === \"object\" ? building : Game.Objects[building]\n\t\tlet icon: Game.Icon | null = null\n\t\tlet req = -1\n\t\tif (buildingObject.id === 0) {\n\t\t\tswitch (tier) {\n\t\t\t\tcase \"cursor2\":\n\t\t\t\t\ticon = [0, 6]\n\t\t\t\t\treq = 2\n\t\t\t\t\tbreak\n\t\t\t\tcase \"cursor50\":\n\t\t\t\t\ticon = [1, 6]\n\t\t\t\t\treq = 50\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tif (Game.Tiers[tier].achievUnlock <= 0) {\n\t\t\t\t\t\tconsole.warn(\"Tier has invalid unlock amount\")\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\treq = tier === 1 ? 1 : Game.Tiers[tier].achievUnlock * 2\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tbuildingHooks.Cursor.on(\"buy\", () => {\n\t\t\t\tif (Game.Objects.Cursor.amount >= req) Game.Win(this.name)\n\t\t\t})\n\t\t} else req = Game.Tiers[tier].achievUnlock\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Have <b>${req}</b> ${\n\t\t\t\tMath.abs(req) === 1 ? buildingObject.single : buildingObject.plural\n\t\t\t}.${quote ? `<q>${quote}</q>` : \"\"}`,\n\t\t\ticon ?? Game.GetIcon(buildingObject.name, tier)\n\t\t)\n\t\tthis.pool = \"normal\"\n\t\tthis.tier = tier === \"cursor2\" || tier === \"cursor50\" ? (1 as Tier) : tier\n\t\tthis.buildingTie = buildingObject\n\t\tbuildingObject.tieredAchievs[tier] = this\n\n\t\tthis.buildingTie = buildingObject\n\n\t\tthis.order = 1000 + buildingObject.id * 100 + this.id / 1000\n\t\t// Manually patch order since Orteil doesn't like consistency\n\t\tthis.order -= Math.max(0, Math.min(buildingObject.id - 4, 3)) * 75\n\t\tif (buildingObject.id >= 8) this.order -= 75\n\t\tif (buildingObject.id === 0) this.order += 50\n\t}\n}\n","import { Achievement } from \"./baseAchievement\"\n\nexport class BankAchievement extends Achievement\n\timplements Game.BankAchievementClass {\n\ttreshold: number\n\t/**\n\t * Creates an achievement which is automatically unlocked on CBTA amount\n\t * @param name Name of the achievement\n\t * @param icon The icon of it\n\t * @param q The optional quote of it\n\t * @param treshold The amount of cookies required, if not set, automatically calculated\n\t */\n\tconstructor(\n\t\tname: string,\n\t\ticon: Game.Icon,\n\t\tq?: string | null,\n\t\ttreshold = 10 ** Math.floor(Game.BankAchievements.length * 1.5 + 2)\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Bake <b>${toFixed(treshold)}</b> cookie${\n\t\t\t\tMath.abs(treshold) === 1 ? \"\" : \"s\"\n\t\t\t} in one ascension.${q ? `<q>${q}</q>` : \"\"}`,\n\t\t\ticon\n\t\t)\n\t\tthis.treshold = treshold\n\t\tthis.order = 100 + Game.BankAchievements.length * 0.01\n\t\tGame.BankAchievements.push(this)\n\t}\n}\n\nexport class CpsAchievement extends Achievement\n\timplements Game.CpsAchievementClass {\n\ttreshold: number\n\t/**\n\t * Creates an achievement which is automatically unlocked on CpS amount\n\t * @param name Name of the achievement\n\t * @param icon The icon of it\n\t * @param q The optional quote of it\n\t * @param treshold The amount of cookies per second required, if not set, automatically calculated\n\t */\n\tconstructor(\n\t\tname: string,\n\t\ticon: Game.Icon,\n\t\tq?: string | null,\n\t\ttreshold = 10 ** Math.floor(Game.BankAchievements.length * 1.2)\n\t) {\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Bake <b>${toFixed(treshold)}</b> cookie${\n\t\t\t\tMath.abs(treshold) === 1 ? \"\" : \"s\"\n\t\t\t} per second.${q ? `<q>${q}</q>` : \"\"}`,\n\t\t\ticon\n\t\t)\n\t\tthis.treshold = treshold\n\t\tthis.order = 200 + Game.CpsAchievements.length * 0.01\n\t\tGame.CpsAchievements.push(this)\n\t}\n}\n","import { hasOwnProperty } from \"../helpers\"\nimport { Achievement } from \"./baseAchievement\"\n\nexport class Level10Achievement extends Achievement {\n\t/**\n\t * Creates an achievement which is given for getting level 10 of the building\n\t * @param name Name of the achievement\n\t * @param building The building to track the level of\n\t * @param quote The (optional) quote of it\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tbuilding: string | Game.Object,\n\t\tquote?: string | null\n\t) {\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tconst icon: Game.Icon = [\n\t\t\tbuilding.iconColumn,\n\t\t\t26,\n\t\t\thasOwnProperty(building, \"iconLink\") &&\n\t\t\ttypeof building.iconLink === \"string\"\n\t\t\t\t? building.iconLink\n\t\t\t\t: undefined,\n\t\t]\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Reach level <b>10</b> ${building.plural}.${\n\t\t\t\tquote ? `<q>${quote}</q>` : \"\"\n\t\t\t}`,\n\t\t\ticon\n\t\t)\n\t\tthis.order = 1020 + building.id * 100 + this.id / 1000\n\t\t// Manually patch order since Orteil doesn't like consistency\n\t\tthis.order -= Math.max(0, Math.min(building.id - 4, 3)) * 75\n\t\tif (building.id >= 8) this.order -= 75\n\t\tif (building.id === 0) this.order += 50\n\t\tbuilding.levelAchiev10 = this\n\t}\n}\n","import { Achievement } from \"./baseAchievement\"\nimport hooks from \"../injects/basegame\"\n\nexport class MouseAchievement<\n\tTier extends string | number\n> extends Achievement {\n\tpool: \"normal\"\n\ttier: Tier\n\t/**\n\t * Creates an achievement which is unlocked when a specific amount of cookies is made\n\t * @param name Name of the achievement\n\t * @param quote Quote (flavour text) of it\n\t * @param tier The achievement's tier, is the id of the tier, ex. `2`(Berrylium), `7`(Jetmint), `synergy2`(Synergy II), etc.\n\t */\n\tconstructor(name: string, tier: Tier, quote: string) {\n\t\tconst tierPow = parseInt(tier.toString())\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Make <b>${toFixed(10 ** (1 + tierPow * 2))}</b> cookies from clicking.${\n\t\t\t\tquote ? `<q>${quote}</q>` : \"\"\n\t\t\t}`,\n\t\t\tGame.GetIcon(\"Mouse\", tier) // Injected in `basegame.ts`\n\t\t)\n\t\tthis.pool = \"normal\"\n\t\tthis.tier = tier\n\t\tthis.order = 1000 + this.id / 1000\n\t\tif (!Game.Tiers[tier].special && !isNaN(tierPow))\n\t\t\thooks.on(\"check\", () => {\n\t\t\t\tif (Game.handmadeCookies >= 10 ** (1 + tierPow * 2)) Game.Win(this.name)\n\t\t\t})\n\t}\n}\n","import { hasOwnProperty } from \"../helpers\"\nimport { Achievement } from \"./baseAchievement\"\n\nexport class ProductionAchievement extends Achievement {\n\t/**`\n\t * Creates a production achievement (Make \\_ from only \\_ achievements)\n\t * @param name Name of the achievement\n\t * @param building The building of the achivement\n\t * @param tier The tier of productivity, not the normal tier, fully works with only `1`, `2`, `3`, otherwise icon will be messed up.\n\t * @param quote The (optional) quote of it\n\t * @param mult The additional multiplier, should be used if the achievement is too easy to obtain\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tbuilding: string | Game.Object,\n\t\ttier: number,\n\t\tquote?: string | null,\n\t\tmult?: number | null\n\t) {\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tconst icon: Game.Icon = [\n\t\t\tbuilding.iconColumn,\n\t\t\t21 + tier,\n\t\t\thasOwnProperty(building, \"iconLink\") &&\n\t\t\ttypeof building.iconLink === \"string\"\n\t\t\t\t? building.iconLink\n\t\t\t\t: undefined,\n\t\t]\n\t\tconst pow = 10 ** (12 + building.id + (mult ?? 0) + (tier - 1) * 7)\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Make <b>${toFixed(pow)}</b> cookies just from ${building.plural}.${\n\t\t\t\tquote ? `<q>${quote}</q>` : \"\"\n\t\t\t}`,\n\t\t\ticon\n\t\t)\n\t\tthis.order = 1020 + building.id * 100 + this.id / 1000\n\t\t// Manually patch order since Orteil doesn't like consistency\n\t\tthis.order -= Math.max(0, Math.min(building.id - 4, 3)) * 75\n\t\tif (building.id >= 8) this.order -= 75\n\t\tif (building.id === 0) this.order += 50\n\t\tbuilding.productionAchievs.push({ pow, achiev: this })\n\t}\n}\n","import { BuildingSave, loadBuilding } from \"./saves\"\nimport { resolveAlias } from \"./spritesheets\"\nimport hooks from \"./injects/basegame\"\nimport { buildingHooks, createBuildingHooks } from \"./injects/buildings\"\nimport { miscValues, customBuildings, setUnitOwner } from \"./vars\"\nimport { shouldRunVersioned } from \"./injects/generic\"\nimport { Mod, OwnershipUnit } from \"./mods\"\n\n/**\n * The building class for creating new buildings\n */\nexport class Building extends Game.Object implements OwnershipUnit {\n\ticonLink: string\n\tbuildingLink: string\n\towner?: Mod\n\t/**\n\t * Creates a new building and creates the hooks for it\n\t * @param name The name of the building\n\t * @param commonName Various additional string for the building, split by |:  The name of the building, then in plural, how the building produced the cookies, the effect from sugar lumps, then in plural\n\t * @param desc The description of the building\n\t * @param icon The icon for the building (Only the column matters) (See http://cppkies.js.org/#/./CommonProblems?id=relink-column for instructions about the icons)\n\t * @param bigIcon The icon that shows up in store (Only the row matters) (See http://cppkies.js.org/#/./CommonProblems?id=big-icons for instructions about the big icons)\n\t * @param art The art for the building\n\t * @param cpsFunc The function to calculate CPS\n\t * @param buyFunction The function which gets called when it's bought\n\t * @param foolObject The fool building to display during business day\n\t * @param buildingSpecial The building special and building debuff\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tcommonName: string,\n\t\tdesc: string,\n\t\ticon: Game.Icon,\n\t\tbigIcon: Game.Icon,\n\t\tart: Game.Art,\n\t\tcpsFunc: (me: Game.Object) => number,\n\t\tbuyFunction: (this: Game.Object) => void,\n\t\tfoolObject: Game.FoolBuilding,\n\t\tbuildingSpecial: [string, string]\n\t) {\n\t\tif (Game.Objects[name])\n\t\t\tthrow new Error(\n\t\t\t\t`Can't create building, \"${name}\" is already used as a building name`\n\t\t\t)\n\t\t//Warn about enforced orders\n\t\tif (icon[1] !== 0) {\n\t\t\tconsole.warn(\n\t\t\t\t\"All icon sheets must follow an order, see https://cppkies.js.org/#/CommonProblems#IconOrder?id=relink-column\"\n\t\t\t)\n\t\t}\n\t\tif (bigIcon[0] !== 0) {\n\t\t\tconsole.warn(\n\t\t\t\t\"All big icon sheets must follow an order, see https://cppkies.js.org/#/CommonProblems#IconOrder?id=big-icons\"\n\t\t\t)\n\t\t}\n\t\tsuper(\n\t\t\tname,\n\t\t\tcommonName,\n\t\t\tdesc,\n\t\t\tbigIcon[1],\n\t\t\ticon[0],\n\t\t\tart,\n\t\t\t0, // The game automatically calculates Price and BaseCps\n\t\t\tcpsFunc,\n\t\t\tbuyFunction\n\t\t)\n\t\tsetUnitOwner(this)\n\t\tcustomBuildings.push(this)\n\t\t// Create hooks if they don't exist yet\n\t\tif (!buildingHooks[name]) createBuildingHooks(this)\n\t\t//Manually relink canvases and contexts because Orteil made it so new buildings break the old canvas and context links\n\t\tfor (const i in Game.ObjectsById) {\n\t\t\tif (parseInt(i) <= 0) continue\n\t\t\tconst me = Game.ObjectsById[i]\n\t\t\tme.canvas = l(`rowCanvas${i}`) as HTMLCanvasElement\n\t\t\tif (!me.canvas) continue\n\t\t\t// Why does getContext return null possibly???\n\t\t\tme.ctx = me.canvas.getContext(\"2d\") as CanvasRenderingContext2D\n\t\t\t//Relink their events too\n\t\t\tme.canvas.addEventListener(\"mouseover\", () => {\n\t\t\t\tme.mouseOn = true\n\t\t\t})\n\t\t\tme.canvas.addEventListener(\"mouseout\", () => {\n\t\t\t\tme.mouseOn = false\n\t\t\t})\n\t\t\tme.canvas.addEventListener(\"mousemove\", e => {\n\t\t\t\tconst box = me.canvas.getBoundingClientRect()\n\t\t\t\tme.mousePos[0] = e.pageX - box.left\n\t\t\t\tme.mousePos[1] = e.pageY - box.top\n\t\t\t})\n\t\t\t//Restore minigames\n\t\t\tif (me.minigame && me.minigameLoaded) {\n\t\t\t\tconst save = me.minigame.save()\n\t\t\t\tme.minigame.launch()\n\t\t\t\tme.minigame.load(save)\n\t\t\t}\n\t\t}\n\t\tthis.buildingLink = bigIcon[2] ?? miscValues.buildingLink\n\t\tthis.iconLink = resolveAlias(icon[2] ?? miscValues.iconLink)\n\t\t// This is the name, description, and icon used during Business Season\n\t\tif (foolObject) Game.foolObjects[name] = foolObject\n\t\t// The name of this building's golden cookie buff and debuff\n\t\tif (buildingSpecial) Game.goldenCookieBuildingBuffs[name] = buildingSpecial\n\n\t\tif (this.iconLink) {\n\t\t\tbuildingHooks[this.name].on(\"tooltip\", ret =>\n\t\t\t\tthis.locked\n\t\t\t\t\t? ret\n\t\t\t\t\t: ret.replace(\n\t\t\t\t\t\t\t\"background-position\",\n\t\t\t\t\t\t\t`background-image:url(${this.iconLink});background-position`\n\t\t\t\t\t  )\n\t\t\t)\n\t\t}\n\n\t\tGame.BuildStore()\n\t\tif (this.buildingLink) {\n\t\t\thooks.on(\"buildStore\", () => {\n\t\t\t\tconst productIcon = document.getElementById(`productIcon${this.id}`),\n\t\t\t\t\tproductIconOff = document.getElementById(`productIconOff${this.id}`)\n\t\t\t\tif (!(productIcon && productIconOff)) return\n\t\t\t\tproductIcon.style.backgroundImage = `url(${this.buildingLink})`\n\t\t\t\tproductIconOff.style.backgroundImage = `url(${this.buildingLink})`\n\t\t\t})\n\t\t}\n\t\tGame.BuildStore()\n\t\tthis.canvas = l(`rowCanvas${this.id}`) as HTMLCanvasElement\n\t\t// Why does getContext return null possibly???\n\t\tthis.ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D\n\t\t//this.context = this.ctx\n\t\tthis.pics = []\n\t\tconst muteDiv = document.createElement(\"div\")\n\t\tmuteDiv.className = \"tinyProductIcon\"\n\t\tmuteDiv.id = `mutedProduct${this.id}`\n\t\tmuteDiv.style.display = \"none\"\n\t\tif (this.buildingLink)\n\t\t\tmuteDiv.style.backgroundImage = `url(${this.buildingLink})`\n\t\tmuteDiv.style.backgroundPositionX = `-${icon[0]}px`\n\t\tmuteDiv.style.backgroundPositionY = `-${icon[1]}px`\n\t\tmuteDiv.addEventListener(\"click\", () => {\n\t\t\tthis.mute(0)\n\t\t\twindow.PlaySound(this.muted ? \"snd/clickOff.mp3\" : \"snd/clickOn.mp3\")\n\t\t})\n\n\t\twindow.AddEvent(this.canvas, \"mouseover\", () => {\n\t\t\tthis.mouseOn = true\n\t\t})\n\t\twindow.AddEvent(this.canvas, \"mouseout\", () => {\n\t\t\tthis.mouseOn = false\n\t\t})\n\t\tthis.canvas.addEventListener(\"mousemove\", e => {\n\t\t\tconst box = this.canvas.getBoundingClientRect()\n\t\t\tthis.mousePos[0] = e.pageX - box.left\n\t\t\tthis.mousePos[1] = e.pageY - box.top\n\t\t})\n\t\tconst muteElement = document.getElementById(\"buildingsMute\")\n\t\tif (muteElement) muteElement.appendChild(muteDiv)\n\t\t// Load the save stuff\n\t\tconst loadProps = loadBuilding(this)\n\t\t// @ts-expect-error Typescript is kinda dumb here\n\t\tfor (const i in loadProps) this[i] = loadProps[i]\n\t\tGame.recalculateGains = 1\n\t}\n}\n/**\n * The recommended function to pass in building CpsFunc\n * @param me Itself\n */\nexport const DEFAULT_CPS = (me: Building): number =>\n\tGame.GetTieredCpsMult(me) * Game.magicCpS(me.name) * me.baseCps\n/**\n * The reccomended function to pass in building BuyFunc\n */\nexport const DEFAULT_ONBUY = function(this: Building): void {\n\tGame.UnlockTiered(this)\n\tif (\n\t\tthis.amount >= Game.SpecialGrandmaUnlock &&\n\t\tGame.Objects[\"Grandma\"].amount > 0 &&\n\t\tthis.grandma\n\t)\n\t\tGame.Unlock(this.grandma.name)\n}\n\nif (shouldRunVersioned(1))\n\thooks.on(\"getIcon\", ({ icon, type, tier }) => {\n\t\tcustomBuildings.forEach(val => {\n\t\t\tif (val.name === type && val.iconLink) icon[2] = val.iconLink\n\t\t})\n\t\treturn { icon, tier, type }\n\t})\n","import { hasOwnProperty } from \"./helpers\"\nimport { save, VANILLA_DRAGON_LEVEL_AMOUNT } from \"./saves\"\nimport { resolveIcon } from \"./spritesheets\"\nimport hooks from \"./injects/basegame\"\nimport { shouldRunVersioned } from \"./injects/generic\"\nimport { Mod, OwnershipUnit } from \"./mods\"\nimport { setUnitOwner } from \"./vars\"\n\nexport class DragonAura implements Game.DragonAura, OwnershipUnit {\n\tpic: Game.Icon\n\tisCppkies = true\n\towner?: Mod\n\t/**\n\t * Creates a (non-building) dragon aura\n\t * @param name Name of the dragon aura (in HTML text)\n\t * @param desc Description of it (in HTML text)\n\t * @param icon The icon of it\n\t */\n\tconstructor(name: string, desc: string, icon: Game.Icon)\n\t/**\n\t * Creates a (building) dragon aura\n\t * @param name Name of the dragon aura (in HTML text)\n\t * @param desc Description of it (in HTML text)\n\t * @param building The building (name or object) to link the aura to\n\t */\n\tconstructor(name: string, desc: string, building: string | Game.Object)\n\tconstructor(\n\t\tpublic name: string,\n\t\tpublic desc: string,\n\t\tbuildingOrIcon: string | Game.Object | Game.Icon\n\t) {\n\t\tsetUnitOwner(this)\n\t\tif (typeof buildingOrIcon === \"string\")\n\t\t\tbuildingOrIcon = Game.Objects[buildingOrIcon]\n\t\tif (buildingOrIcon instanceof Game.Object)\n\t\t\tthis.pic = resolveIcon([\n\t\t\t\tbuildingOrIcon.iconColumn,\n\t\t\t\t25,\n\t\t\t\thasOwnProperty(buildingOrIcon, \"iconLink\") &&\n\t\t\t\ttypeof buildingOrIcon.iconLink === \"string\"\n\t\t\t\t\t? buildingOrIcon.iconLink\n\t\t\t\t\t: undefined,\n\t\t\t])\n\t\telse this.pic = buildingOrIcon\n\t\tGame.dragonAuras[Object.keys(Game.dragonAuras).length] = this\n\t\tif (\n\t\t\tsave.dragon.auras[0] !== \"sync\" &&\n\t\t\tObject.keys(Game.dragonAuras).length >= save.dragon.auras[0]\n\t\t)\n\t\t\tGame.dragonAura = save.dragon.auras[0]\n\t\tif (\n\t\t\tsave.dragon.auras[1] !== \"sync\" &&\n\t\t\tObject.keys(Game.dragonAuras).length >= save.dragon.auras[1]\n\t\t)\n\t\t\tGame.dragonAura2 = save.dragon.auras[1]\n\t}\n}\n\nexport class DragonLevel implements Game.DragonLevel, OwnershipUnit {\n\tisCppkies = true\n\towner?: Mod\n\t/**\n\t * The X position of the dragon icon\n\t */\n\tpic: number\n\t/**\n\t * The Y position of the dragon icon\n\t */\n\tpicY = 0\n\t/**\n\t * The link to the dragon icon\n\t */\n\tpicLink?: string\n\t// Dragon name\n\tname: string\n\t// Description of the cost\n\tcostStr: () => string\n\t// Determines if the level can be upgraded\n\tcost: () => boolean\n\n\t// Description of effects of leveling up\n\taction: string\n\t/**\n\t * Creates a new dragon level\n\t * @param name Name of the dragon at this level, null for last name\n\t * @param desc A string describing the effects of leveling up\n\t * @param costDescription A string (or a function) describing the resources required to be able to buy the level\n\t * @param canBuy A function which determines if it is possible to buy the level\n\t * @param buy A function which spends the required resources\n\t * @param icon  Icon of the dragon at this level, null for last icon, note that the icon is 96x96, not 48x48\n\t */\n\tconstructor(\n\t\tname: string | null,\n\t\tdesc: string, // `this.action`\n\t\tcostDescription: string | (() => string), // `this.costStr`\n\t\tcanBuy: () => boolean, // `this.cost`\n\t\tpublic buy: () => void,\n\t\ticon?: Game.Icon | null, // `this.pic`, `this.picLink`, and `this.picY`\n\t\torder: number = Game.dragonLevels.length - 3\n\t) {\n\t\tsetUnitOwner(this)\n\t\tconst lastLevel = Game.dragonLevels[order - 1]\n\t\tthis.name = name ?? lastLevel.name\n\t\tthis.action = desc\n\t\tthis.costStr =\n\t\t\ttypeof costDescription === \"string\"\n\t\t\t\t? () => costDescription\n\t\t\t\t: costDescription\n\t\tthis.cost = canBuy\n\t\tif (icon) {\n\t\t\tthis.pic = icon[0]\n\t\t\tthis.picY = icon[1]\n\t\t\t// TODO: Implement pic Y in specials\n\t\t\tif (this.picY !== 0)\n\t\t\t\tconsole.warn(\"For now, all dragon levels must not use pic Y, sorry.\")\n\t\t\tthis.picLink = icon[2]\n\t\t} else {\n\t\t\tthis.pic = lastLevel.pic\n\t\t\tif (lastLevel instanceof DragonLevel) {\n\t\t\t\tthis.picY = lastLevel.picY\n\t\t\t\tthis.picLink = lastLevel.picLink\n\t\t\t}\n\t\t}\n\t\tGame.dragonLevels.splice(order, 0, this)\n\t\tif (\n\t\t\tsave.dragon.level !== \"sync\" &&\n\t\t\tGame.dragonLevels.length >= save.dragon.level\n\t\t)\n\t\t\tGame.dragonLevel = save.dragon.level\n\t}\n}\n\nexport class DragonAuraLevel extends DragonLevel {\n\t/**\n\t * Creates a level which unlocks an aura\n\t * @param auraName Name of the aura\n\t * @param auraDesc Short description of the aura, in html text\n\t * @param building The building which the aura is tied to\n\t */\n\tconstructor(\n\t\tauraName: string,\n\t\tauraDesc: string,\n\t\tbuilding: string | Game.Object\n\t) {\n\t\tconst buildingObject =\n\t\t\ttypeof building === \"string\" ? Game.Objects[building] : building\n\n\t\tsuper(\n\t\t\tnull,\n\t\t\t`Train ${auraName}<br/><small>Aura : ${auraDesc}</small>`,\n\t\t\t`100 ${buildingObject.plural}`,\n\t\t\t// Grr typescript\n\t\t\t() => buildingObject.amount >= 100,\n\t\t\t() => buildingObject.sacrifice(100)\n\t\t)\n\t}\n}\n\nif (shouldRunVersioned(1)) {\n\t/**\n\t * **Auras**\n\t * Three levels of being loaded:\n\t * 1. Not loaded\n\t * The user can't manipulate Cppkies dragon data, has no aura if aura is custom\n\t * 2. Cppkies loaded (here)\n\t * When loaded with custom aura:\n\t * a. If normal aura is none (has not been modified), keep it at that, but  keep  the custom aura data on save\n\t * b. If normal aura is not none (has been modified), keep it at that, but remove the custom aura data on save\n\t * 3. Aura loaded\n\t * On aura creation, if aura id exists now, set the normal aura to the custom aura\n\t */\n\thooks.on(\"preSave\", () => {\n\t\tif (Game.dragonAura !== 0) save.dragon.auras[0] = \"sync\"\n\t\tif (Game.dragonAura2 !== 0) save.dragon.auras[1] = \"sync\"\n\n\t\tif (Game.dragonAuras[Game.dragonAura] instanceof DragonAura) {\n\t\t\tsave.dragon.auras[0] = Game.dragonAura\n\t\t\tGame.dragonAura = 0\n\t\t}\n\t\tif (Game.dragonAuras[Game.dragonAura2] instanceof DragonAura) {\n\t\t\tsave.dragon.auras[1] = Game.dragonAura2\n\t\t\tGame.dragonAura2 = 0\n\t\t}\n\t\tif (\n\t\t\tGame.dragonLevels[Game.dragonLevel] instanceof DragonLevel ||\n\t\t\tGame.dragonLevel >= VANILLA_DRAGON_LEVEL_AMOUNT\n\t\t) {\n\t\t\tsave.dragon.level = Game.dragonLevel\n\t\t\twhile (\n\t\t\t\tGame.dragonLevels[Game.dragonLevel] instanceof DragonLevel ||\n\t\t\t\tGame.dragonLevel >= VANILLA_DRAGON_LEVEL_AMOUNT\n\t\t\t)\n\t\t\t\tGame.dragonLevel--\n\t\t} // else save.dragon.level = \"sync\"\n\t})\n\thooks.on(\"postSave\", () => {\n\t\tif (\n\t\t\tsave.dragon.auras[0] !== \"sync\" &&\n\t\t\tGame.dragonAuras[save.dragon.auras[0]]\n\t\t)\n\t\t\tGame.dragonAura = save.dragon.auras[0]\n\t\tif (\n\t\t\tsave.dragon.auras[1] !== \"sync\" &&\n\t\t\tGame.dragonAuras[save.dragon.auras[1]]\n\t\t)\n\t\t\tGame.dragonAura2 = save.dragon.auras[1]\n\t\tif (save.dragon.level !== \"sync\" && Game.dragonLevels[save.dragon.level])\n\t\t\tGame.dragonLevel = save.dragon.level\n\t})\n\n\thooks.on(\"reset\", () => {\n\t\tsave.dragon.auras = [\"sync\", \"sync\"]\n\t\tsave.dragon.level = \"sync\"\n\t})\n\n\thooks.on(\"specialPic\", pic => {\n\t\tconst level = Game.dragonLevels[Game.dragonLevel]\n\t\tif (pic.tab === \"dragon\" && level instanceof DragonLevel)\n\t\t\tpic.pic = level.picLink ?? pic.pic\n\t\treturn pic\n\t})\n}\n","import { toRomanNumeral } from \"./helpers\"\nimport { Mod, OwnershipUnit } from \"./mods\"\nimport { resolveIcon } from \"./spritesheets\"\nimport { setUnitOwner } from \"./vars\"\n\ntype MilkClass = typeof Game.Milk & Game.ChoiceCosmetics\n\nexport class Milk implements MilkClass, OwnershipUnit {\n\ticon: [number, number]\n\ticonLink?: string\n\towner?: Mod\n\t/**\n\t * Creates a new milk type\n\t * @param name The name of the milk\n\t * @param icon The icon of the mink\n\t * @param pic The image to use for the milk itself, must end in .png\n\t * @param special If true, the milk is only avaliable via milk selector\n\t */\n\tconstructor(\n\t\tpublic name: string,\n\t\ticon: Game.Icon,\n\t\tpublic pic: string,\n\t\tpublic special = false\n\t) {\n\t\tsetUnitOwner(this)\n\t\tif (!pic.endsWith(\".png\"))\n\t\t\tthrow new Error(\n\t\t\t\t`Can't create milk with the milk URL \"${pic}\", the URL must end with .png!`\n\t\t\t)\n\t\tif (!special)\n\t\t\tthis.name = `Rank ${toRomanNumeral(Game.Milks.length + 1)} - ${name}`\n\t\tthis.pic = pic.substr(0, pic.length - 4)\n\t\tresolveIcon(icon)\n\t\tthis.icon = [icon[0], icon[1]]\n\t\tthis.iconLink = icon[2]\n\t\t// TODO: Special milks\n\t\tif (special)\n\t\t\tGame.MilksByChoice[Object.keys(Game.MilksByChoice).length] = this\n\t\telse Game.Milks.push(this)\n\t}\n}\n","import { resolveAlias } from \"./spritesheets\"\nimport { miscValues, customTiers, setUnitOwner } from \"./vars\"\nimport hooks from \"./injects/basegame\"\nimport { Mod, OwnershipUnit } from \"./mods\"\n\nexport default class Tier implements Game.Tier, OwnershipUnit {\n\tachievUnlock = 0\n\ticonRow: number\n\ticonLink?: string\n\towner?: Mod<\n\t\tobject\n\t> /**\n\t\tIndicates if the tier shouldn't be accounted for tiered upgrades\n\t*/\n\tspecial: boolean\n\treq?: string\n\tupgrades: Game.GenericTieredUpgrade[] = []\n\n\tunlock = 0\n\tprice: number\n\tkeyName: string\n\n\t/**\n\t * Adds a new tier to the game for upgrades and achievements\n\t * @param name The name of the new tier\n\t * @param sampleIcon A sample of an icon using the tier\n\t * @param color The color of the tier\n\t * @param price The base price of tiered upgrades\n\t * @param special Indicates if the tier shouldn't be accounted for tiered upgrades\n\t * @param unlock How many buildings are needed for the upgrade\n\t * @param achievUnlock How many buildings are needed for the achievement\n\t * @param req Which upgrade is required to unlock the upgrades\n\t * @param keyName Optional, the key for tiers, used in everything\n\t */\n\tconstructor(\n\t\tpublic name: string,\n\t\tsampleIcon: Game.Icon,\n\t\tpublic color: string,\n\t\tspecial = false,\n\t\tprice: number | \"auto\" = \"auto\",\n\t\tunlock: number | \"auto\" | null = null,\n\t\tachievUnlock: number | \"auto\" | null = null,\n\t\treq: string | null = null,\n\t\tkeyName: string | \"auto\" = \"auto\"\n\t) {\n\t\tthis.special = special\n\t\tsetUnitOwner(this)\n\t\tif (keyName === \"auto\")\n\t\t\tif (!special)\n\t\t\t\tthis.keyName = (\n\t\t\t\t\tObject.keys(Game.Tiers).filter(val => !isNaN(parseInt(val))).length +\n\t\t\t\t\t1\n\t\t\t\t).toString()\n\t\t\telse this.keyName = name\n\t\telse this.keyName = keyName\n\n\t\tif (unlock === null) this.unlock = -1\n\t\tif (typeof unlock === \"number\") this.unlock = unlock\n\t\tif ((special === false && unlock === null) || unlock === \"auto\")\n\t\t\tthis.unlock = Game.Tiers[parseInt(this.keyName) - 1].unlock + 50\n\n\t\tif (typeof achievUnlock === \"number\") this.achievUnlock = achievUnlock\n\t\tif ((special === false && achievUnlock === null) || achievUnlock === \"auto\")\n\t\t\tthis.achievUnlock =\n\t\t\t\tGame.Tiers[parseInt(this.keyName) - 1].achievUnlock + 50\n\t\tif (req) this.req = req\n\t\tif (price === \"auto\")\n\t\t\tthis.price =\n\t\t\t\tGame.Tiers[\n\t\t\t\t\tObject.keys(Game.Tiers)\n\t\t\t\t\t\t.filter(val => !isNaN(parseInt(val)))\n\t\t\t\t\t\t.length.toString()\n\t\t\t\t].price * 1e8\n\t\telse this.price = price\n\t\t/*\n\t\t\tAnalyze sample icon\n\t\t*/\n\t\tthis.iconRow = sampleIcon[1]\n\t\tthis.iconLink = resolveAlias(sampleIcon[2] ?? miscValues.iconLink)\n\t\tGame.Tiers[this.keyName] = this\n\t\tcustomTiers.push(this)\n\t}\n}\n\nhooks.on(\"getIcon\", ({ icon, type, tier }) => {\n\tcustomTiers.forEach(val => {\n\t\tif (val.keyName === tier.toString() && val.iconLink) icon[2] = val.iconLink\n\t})\n\treturn { icon, type, tier }\n})\nhooks.on(\"getIcon\", ({ icon, type, tier }) => {\n\tif (\n\t\t(icon[2] === undefined || icon[2] === null) &&\n\t\tGame.Tiers[tier.toString()] instanceof Tier\n\t)\n\t\ticon[2] = \"\"\n\treturn { icon, tier, type }\n})\n","let loaded = false\n\nexport function setLoaded(): void {\n\tloaded = true\n}\n\n/**\n * An array of functions to call on Cppkies load\n * Functions pushed here after Cppkies has loaded are executed immediately\n * It is reccomended to use `Cppkies.deffer` instead\n */\nexport const onLoad: Array<() => void> = new Proxy([], {\n\tset: (target, key, value): boolean => {\n\t\tif (typeof value === \"function\" && loaded) value()\n\t\telse target[(key as unknown) as number] = value as never\n\t\treturn true\n\t},\n})\n\nexport let defferResolve: (() => void) | undefined\n\n/**\n * A promise which is resolved on Cppkies load\n */\nexport const deffer = new Promise<void>(res => (defferResolve = res))\n","import { applyAllProps, hasOwnProperty } from \"./helpers\"\nimport { mods, setCurrentMod } from \"./vars\"\nimport { ToggleBase } from \"./modUI\"\nimport { applyModSave, loadMod } from \"./saves\"\nimport { deffer } from \"./loadValues\"\n\n/**\n * An object which mods can own\n */\nexport interface OwnershipUnit {\n\towner?: Mod\n}\n\nexport interface ModMetadata {\n\t/**\n\t * The unique keyname of the mod, can consist of\n\t * A-Z a-z 0-9 - _ . ! ~ * ' ( )\n\t */\n\tkeyname: string\n\t/**\n\t * The shown name of the mod, doesn't contain any restrictions\n\t */\n\tname?: string\n\t/**\n\t * The icon of the mod\n\t */\n\ticon?: Game.Icon\n\t/**\n\t * The version of the mod, must be in semver\n\t */\n\tversion: string\n}\n\nexport class Mod<C extends object = object> implements ModMetadata {\n\t/**\n\t * The unique keyname of the mod, can consist of\n\t * A-Z a-z 0-9 - _ . ! ~ * ' ( )\n\t */\n\tkeyname = \"never-should-happen\"\n\t/**\n\t * The shown name of the mod, doesn't contain any restrictions\n\t */\n\tname?: string\n\t/**\n\t * The icon of the mod\n\t */\n\ticon?: Game.Icon\n\t/**\n\t * The version of the mod, must be in semver\n\t */\n\tversion = \"1.0\"\n\t/**\n\t * Custom additional data which mods can read/write to\n\t */\n\tcustom: C | null = null\n\n\ttoggles: ToggleBase[] = []\n\townedUnits: OwnershipUnit[] = []\n\t/**\n\t * Creates a mod which can have a settings UI and is only launched on Cppkies load\n\t * @param metadata The metadata of the mod, it is strongly recommended to set a name\n\t * @param modFunction The function which is called when cppkies is loaded\n\t */\n\tconstructor(\n\t\tmetadata: ModMetadata,\n\t\tpublic modFunction?: <T extends Mod<any> = Mod<C>>(this: T) => void\n\t) {\n\t\tapplyAllProps(this, metadata)\n\t\tconst ogMod = mods.find(val => val.keyname === metadata.keyname)\n\t\tif (ogMod)\n\t\t\tif (ogMod.version !== this.version)\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"You are trying to load multiple versions of the same mod\"\n\t\t\t\t)\n\t\t\telse {\n\t\t\t\tconsole.warn(`Loading the same mod (${ogMod.keyname}) multiple times.`)\n\t\t\t\treturn\n\t\t\t}\n\t\tmods.push(this)\n\t\tapplyModSave(this, loadMod(this))\n\t\tdeffer.then(() => {\n\t\t\tsetCurrentMod(this)\n\t\t\tmodFunction?.apply(this)\n\t\t\t// Update the menu, just in case\n\t\t\tGame.UpdateMenu()\n\t\t\tsetCurrentMod(null)\n\t\t})\n\t}\n\n\trender(): HTMLElement {\n\t\tconst modDiv = document.createElement(\"div\")\n\t\tfor (const toggle of this.toggles) modDiv.appendChild(toggle.render())\n\t\treturn modDiv\n\t}\n}\n","import { getValue, CommonValue } from \"../helpers\"\n\nexport type FriendlyHtml = CommonValue<string | HTMLElement>\n\nexport function friendlyAppendHtml(\n\tvalue: FriendlyHtml,\n\telement: HTMLElement,\n\tcontainerName?: string | null\n): void {\n\tif (containerName === undefined) containerName = \"div\"\n\tvalue = getValue(value)\n\tif (typeof value === \"string\") {\n\t\tif (!containerName) element.innerHTML = value\n\t\telse {\n\t\t\tconst container = document.createElement(containerName)\n\t\t\tcontainer.innerHTML = value\n\t\t\telement.appendChild(container)\n\t\t}\n\t} else element.appendChild(value)\n}\n","import { friendlyAppendHtml, FriendlyHtml } from \"./appendHTML\"\n\n/**\n * Creates a cookie clicker UI button\n * @param name Text on the button\n * @param description The grey label describing the effects of the button\n * @param onClick Is called on click\n * @param type The color type of the button\n * @param off If it is true, the button is faded out\n * @param additionalClasses Additional classes to add to the button\n */\nexport function ccButton(\n\tname: FriendlyHtml,\n\tdescription?: FriendlyHtml | null,\n\tonClick?: null | (() => void),\n\ttype?: \"normal\" | \"warning\" | \"neato\" | null,\n\toff?: boolean | null,\n\tadditionalClasses?: string[]\n): HTMLDivElement {\n\tconst button = document.createElement(\"a\")\n\tbutton.classList.add(\"option\")\n\tif (type && type !== \"normal\") button.classList.add(type)\n\tif (off) button.classList.add(\"off\")\n\tif (additionalClasses) button.classList.add(...additionalClasses)\n\n\tfriendlyAppendHtml(name, button)\n\n\tbutton.addEventListener(\"click\", () => {\n\t\tPlaySound(\"snd/tick.mp3\")\n\t\tonClick?.()\n\t})\n\n\tconst div = document.createElement(\"div\")\n\tdiv.appendChild(button)\n\n\tif (description) {\n\t\tconst label = document.createElement(\"label\")\n\t\tfriendlyAppendHtml(description, label, \"span\")\n\t\tdiv.appendChild(label)\n\t}\n\n\treturn div\n}\n","import { friendlyAppendHtml, FriendlyHtml } from \"./appendHTML\"\n\nconst sectionState: Record<string, boolean> = {}\n\n/**\n * Creates a section which can be collapsed by a button\n * Note that you need to manually refresh the menu the section is in\n * @param keyname The id name reference to track if the\n * @param title The title of the section, which is never hidden\n * @param body The collapsible part of the section\n * @param onClick Called when the collapse button is clicked\n */\nexport function ccHideableSection(\n\tkeyname: string,\n\ttitle: FriendlyHtml,\n\tbody: FriendlyHtml,\n\tonClick?: (() => void) | null\n): HTMLDivElement {\n\tconst titleDiv = document.createElement(\"div\")\n\ttitleDiv.className = \"title\"\n\n\tif (typeof sectionState[keyname] === \"undefined\") sectionState[keyname] = true\n\n\t// From CCSE, which is from CM\n\tconst showHideButton = document.createElement(\"span\")\n\tshowHideButton.style.cursor = \"pointer\"\n\tshowHideButton.style.display = \"inline-block\"\n\tshowHideButton.style.height = showHideButton.style.width = \"14px\"\n\tshowHideButton.style.borderRadius = \"7px\"\n\tshowHideButton.style.textAlign = \"center\"\n\tshowHideButton.style.backgroundColor = \"#C0C0C0\"\n\tshowHideButton.style.color = \"black\"\n\tshowHideButton.style.fontSize = \"13px\"\n\tshowHideButton.style.verticalAlign = \"middle\"\n\tshowHideButton.style.marginRight = \"13px\"\n\tshowHideButton.textContent = sectionState[keyname] ? \"-\" : \"+\"\n\n\tshowHideButton.addEventListener(\"click\", () => {\n\t\tsectionState[keyname] = !sectionState[keyname]\n\t\tonClick?.()\n\t})\n\n\ttitleDiv.appendChild(showHideButton)\n\n\tfriendlyAppendHtml(title, titleDiv, \"span\")\n\n\tconst div = document.createElement(\"div\")\n\tdiv.appendChild(titleDiv)\n\tif (sectionState[keyname]) friendlyAppendHtml(body, div)\n\n\treturn div\n}\n","import { friendlyAppendHtml, FriendlyHtml } from \"./appendHTML\"\n\nconst additionalCss = document.createElement(\"style\")\n\nadditionalCss.textContent = `\n.cppkiesSliderBox {\n\tdisplay: flex;\n\tflex-direction: column;\n}\n.cppkiesSliderRight {\n\tposition: absolute;\n\talign-self: flex-end;\n} \n`\n\ndocument.head.appendChild(additionalCss)\n\nexport function ccSlider(\n\tname: FriendlyHtml,\n\tvalueFunc: (value: number) => FriendlyHtml,\n\tvalue: number,\n\tbounds: [number, number, number?],\n\tonChange?: (newValue: number) => void\n): HTMLDivElement {\n\tconst div = document.createElement(\"div\")\n\tdiv.classList.add(\"sliderBox\", \"cppkiesSliderBox\")\n\tfriendlyAppendHtml(name, div)\n\tconst rightDiv = document.createElement(\"div\")\n\trightDiv.classList.add(\"cppkiesSliderRight\")\n\tfriendlyAppendHtml(valueFunc(value), rightDiv, null)\n\tdiv.appendChild(rightDiv)\n\tconst slider = document.createElement(\"input\")\n\tslider.classList.add(\"slider\")\n\tslider.type = \"range\"\n\tslider.min = bounds[0].toString()\n\tslider.max = bounds[1].toString()\n\tslider.step = (bounds[2] ?? 1).toString()\n\tslider.value = value.toString()\n\tslider.addEventListener(\"input\", () => {\n\t\t// Reset the right div and apply new value\n\t\trightDiv.innerText = \"\"\n\t\tfriendlyAppendHtml(valueFunc(parseFloat(slider.value)), rightDiv, null)\n\t\tonChange?.(parseFloat(slider.value))\n\t})\n\tslider.addEventListener(\"mouseup\", () => PlaySound(\"snd/tick.mp3\"))\n\tdiv.appendChild(slider)\n\treturn div\n}\n","import { ccHideableSection } from \"../ccUI\"\nimport hooks from \"../injects/basegame\"\nimport { shouldRunVersioned } from \"../injects/generic\"\nimport { Mod } from \"../mods\"\nimport { save } from \"../saves\"\nimport { mods, currentMod } from \"../vars\"\n\nexport abstract class ToggleBase<C = unknown> {\n\tmod: Mod\n\tconstructor(public keyname: string) {\n\t\tif (!currentMod)\n\t\t\tthrow new Error(\n\t\t\t\t\"You are instancing a mod UI class outside of a mod declaration.\"\n\t\t\t)\n\t\tcurrentMod.toggles.push(this)\n\t\tthis.mod = currentMod\n\t\tif (\n\t\t\tthis.load &&\n\t\t\tsave.mods[this.mod.keyname]?.ui?.[this.keyname] !== undefined\n\t\t)\n\t\t\t// @ts-expect-error We are trusting the save here\n\t\t\tthis.load(save.mods[this.mod.keyname].ui[this.keyname])\n\t}\n\tabstract render(): HTMLElement\n\tsave?(this: this): C\n\tload?(this: this, save: C): void\n}\n\nif (shouldRunVersioned(1))\n\thooks.on(\"optionsMenu\", () => {\n\t\tconst menuDiv = document.querySelector(\"#menu\")\n\t\tif (!menuDiv || mods.length === 0) return\n\t\tconst menuSubsection = menuDiv.children[menuDiv.children.length - 1]\n\t\tconst menuListing =\n\t\t\tmenuSubsection.children[menuSubsection.children.length - 2]\n\n\t\tfor (const mod of mods)\n\t\t\tmenuListing.appendChild(\n\t\t\t\tccHideableSection(\n\t\t\t\t\t`${mod.keyname}ui`,\n\t\t\t\t\tmod.name ?? mod.keyname,\n\t\t\t\t\tmod.render(),\n\t\t\t\t\tGame.UpdateMenu\n\t\t\t\t)\n\t\t\t)\n\t})\n","import { ccButton, FriendlyHtml } from \"../ccUI\"\nimport { ToggleBase } from \"./toggleBase\"\n\nexport class Button<C = unknown> extends ToggleBase<C> {\n\tadditionalClasses: string[] = []\n\toff?: boolean\n\tconstructor(\n\t\tkeyname: string,\n\t\tpublic name: FriendlyHtml,\n\t\tpublic description?: FriendlyHtml,\n\t\tpublic onClick?: (this: Button) => void,\n\t\tpublic type?: \"warning\" | \"neato\" | \"normal\" | null\n\t) {\n\t\tsuper(keyname)\n\t}\n\trender(): HTMLDivElement {\n\t\treturn ccButton(\n\t\t\tthis.name,\n\t\t\tthis.description,\n\t\t\t() => {\n\t\t\t\tthis.onClick?.()\n\t\t\t\tGame.UpdateMenu()\n\t\t\t},\n\t\t\tthis.type,\n\t\t\tthis.off,\n\t\t\tthis.additionalClasses\n\t\t)\n\t}\n}\n","import { FriendlyHtml } from \"../ccUI\"\nimport { Button } from \"./button\"\n\nexport class MultiStateButton<T extends string[]> extends Button<string> {\n\tstate: T[number]\n\tprivate stateFunc?: (state: T[number]) => FriendlyHtml\n\tconstructor(\n\t\tkeyname: string,\n\t\tname: FriendlyHtml | ((state: T[number]) => FriendlyHtml),\n\t\tpublic states: T,\n\t\tpublic description?: FriendlyHtml,\n\t\tonClick?: (this: Button) => void,\n\t\tpublic type?: \"warning\" | \"neato\" | \"normal\" | null\n\t) {\n\t\tsuper(\n\t\t\tkeyname,\n\t\t\ttypeof name === \"function\" ? \"TEMP\" : name,\n\t\t\tdescription,\n\t\t\t() => {\n\t\t\t\tthis.state =\n\t\t\t\t\tthis.states[this.states.indexOf(this.state) + 1] ?? this.states[0]\n\t\t\t\tonClick?.apply(this)\n\t\t\t}\n\t\t)\n\t\t// @ts-expect-error No, load may or may not have triggered already\n\t\tif (this.state === undefined) this.state = this.states[0]\n\t}\n\tsave(): string {\n\t\treturn this.state\n\t}\n\tload(save: string): void {\n\t\tthis.state = save\n\t}\n\trender(): HTMLDivElement {\n\t\tif (this.stateFunc) this.name = this.stateFunc(this.state)\n\t\treturn super.render()\n\t}\n}\n","import { ccSlider, FriendlyHtml } from \"../ccUI\"\nimport { ToggleBase } from \"./toggleBase\"\n\nexport class Slider extends ToggleBase<number> {\n\tvalue: number\n\tconstructor(\n\t\tkeyname: string,\n\t\tpublic name: FriendlyHtml,\n\t\tpublic bounds: [number, number, number?],\n\t\tpublic valueFunc: (value: number) => FriendlyHtml,\n\t\tdefaultValue = bounds[0],\n\t\tpublic onChange?: (this: Slider, value: number) => void\n\t) {\n\t\tsuper(keyname)\n\t\t// @ts-expect-error No, load may or may not have triggered already\n\t\tif (this.value === undefined) this.value = defaultValue\n\t}\n\tsave(): number {\n\t\treturn this.value\n\t}\n\tload(save: number): void {\n\t\tthis.value = save\n\t}\n\trender(): HTMLDivElement {\n\t\treturn ccSlider(\n\t\t\tthis.name,\n\t\t\tthis.valueFunc,\n\t\t\tthis.value,\n\t\t\tthis.bounds,\n\t\t\t(val: number) => {\n\t\t\t\tthis.value = val\n\t\t\t\tthis.onChange?.(val)\n\t\t\t}\n\t\t)\n\t}\n}\n","import { FriendlyHtml } from \"../ccUI\"\nimport { CommonValue } from \"../helpers\"\nimport { MultiStateButton } from \"./multiStateButton\"\n\nexport class ToggleButton extends MultiStateButton<[\"ON\", \"OFF\"]> {\n\tconstructor(\n\t\tkeyname: string,\n\t\tname: FriendlyHtml | ((state: boolean) => FriendlyHtml),\n\t\tpublic description?: CommonValue<string>,\n\t\tonClick?: (this: ToggleButton) => void,\n\t\tpublic type?: \"warning\" | \"neato\" | \"normal\" | null,\n\t\tpublic defaultState?: boolean\n\t) {\n\t\tsuper(\n\t\t\tkeyname,\n\t\t\ttypeof name === \"function\"\n\t\t\t\t? (state: \"ON\" | \"OFF\") => name(state === \"ON\")\n\t\t\t\t: () => `${name} ${this.state}`,\n\t\t\t[\"ON\", \"OFF\"],\n\t\t\tdescription,\n\t\t\t() => {\n\t\t\t\tif (this.state === \"ON\")\n\t\t\t\t\tthis.additionalClasses.splice(\n\t\t\t\t\t\tthis.additionalClasses.indexOf(\"off\"),\n\t\t\t\t\t\t1\n\t\t\t\t\t)\n\t\t\t\telse this.additionalClasses.push(\"off\")\n\t\t\t\tonClick?.apply(this)\n\t\t\t}\n\t\t)\n\t\tif (this.state === undefined)\n\t\t\tthis.state =\n\t\t\t\tthis.defaultState || this.defaultState === undefined ? \"ON\" : \"OFF\"\n\t\tif (this.state === \"OFF\") this.additionalClasses.push(\"off\")\n\t}\n\trender(): HTMLDivElement {\n\t\tthis.off = this.state === \"OFF\"\n\t\treturn super.render()\n\t}\n}\n","import { CommonValue, toSentenseCase } from \"../helpers\"\n\nfunction attachTooltip(\n\telement: HTMLElement,\n\ttext: CommonValue<string>,\n\torigin?: Game.TooltipOrigins\n): void {\n\telement.addEventListener(\"mouseover\", () => {\n\t\tGame.tooltip.dynamic = typeof text === \"function\" ? 1 : 0\n\t\tGame.tooltip.draw(element, text, origin)\n\t\tGame.tooltip.wobble()\n\t})\n\telement.addEventListener(\"mouseout\", () => (Game.tooltip.shouldHide = 1))\n}\n\nexport class Spirit implements Game.PantheonSpirit {\n\tactiveDescFunc?: () => string\n\tdesc1?: string\n\tdesc2?: string\n\tdesc3?: string\n\tdescAfter?: string\n\tdescBefore?: string\n\tid: number\n\tname: string\n\tslot: 0 | 2 | 1 | -1 = -1\n\tconstructor(\n\t\tspiritName: string,\n\t\tspiritTitle: string,\n\t\tpublic icon: Game.Icon,\n\t\tdescriptions: Partial<\n\t\t\tRecord<1 | 2 | 3 | \"before\" | \"after\", string> &\n\t\t\t\tRecord<\"active\", () => string>\n\t\t>,\n\t\tpublic quote: string,\n\t\tfullName?: string\n\t) {\n\t\tif (!Game.Objects.Temple.minigameLoaded)\n\t\t\tthrow new Error(\"The pantheon minigame has not loaded yet!\")\n\t\tconst mg = Game.Objects.Temple.minigame\n\t\tif (fullName) this.name = fullName\n\t\telse\n\t\t\tthis.name = `${toSentenseCase(spiritName)}, Spirit of ${toSentenseCase(\n\t\t\t\tspiritTitle\n\t\t\t)}`\n\t\tif (descriptions) {\n\t\t\tif (descriptions[1]) this.desc1 = descriptions[1]\n\t\t\tif (descriptions[2]) this.desc2 = descriptions[2]\n\t\t\tif (descriptions[3]) this.desc3 = descriptions[3]\n\t\t\tif (descriptions.before) this.descBefore = descriptions.before\n\t\t\tif (descriptions.after) this.descAfter = descriptions.after\n\t\t\tif (descriptions.active) this.activeDescFunc = descriptions.active\n\t\t}\n\t\tthis.id = mg.godsById.length\n\t\tmg.godsById.push(this)\n\t\tmg.gods[spiritTitle] = this\n\t\tconst godDiv = document.createElement(\"div\")\n\t\tgodDiv.classList.add(\n\t\t\t\"ready\",\n\t\t\t\"templeGod\",\n\t\t\t\"templeGod\" + (this.id % 4),\n\t\t\t\"titleFont\"\n\t\t)\n\t\tgodDiv.id = \"templeGod\" + this.id\n\t\tattachTooltip(godDiv, mg.godTooltip(this.id), \"this\")\n\t\tconst godIconDiv = document.createElement(\"div\")\n\t\tgodIconDiv.classList.add(\"usesIcon\", \"shadowFilter\", \"templeIcon\")\n\t\tgodIconDiv.style.backgroundPosition = `${-icon[0] * 48}px ${-icon[1] *\n\t\t\t48}px`\n\t\tif (icon[2]) godIconDiv.style.backgroundImage = `url(${icon[2]})`\n\t\tgodDiv.appendChild(godIconDiv)\n\t\tconst godDragDiv = document.createElement(\"div\")\n\t\tgodDragDiv.classList.add(\"templeSlotDrag\")\n\t\tgodDragDiv.id = \"templeGodDrag\" + this.id\n\t\tgodDragDiv.addEventListener(\"mousedown\", ev => {\n\t\t\tif (ev.button === 0) mg.dragGod(this)\n\t\t})\n\t\tgodDragDiv.addEventListener(\"mouseup\", ev => {\n\t\t\tif (ev.button === 0) mg.dropGod()\n\t\t})\n\t\tgodDiv.appendChild(godDragDiv)\n\t\tconst godPlaceholder = document.createElement(\"div\")\n\t\tgodPlaceholder.classList.add(\"templeGodPlaceholder\")\n\t\tgodPlaceholder.id = \"templeGodPlaceholder\" + this.id\n\t\tconst godsDiv = document.querySelector(\"#templeGods\")\n\t\tif (godsDiv) {\n\t\t\tgodsDiv.appendChild(godDiv)\n\t\t\tgodsDiv.appendChild(godPlaceholder)\n\t\t}\n\t}\n}\n","import { MinigameInjection, setMinigameInjection } from \"./generic\"\nimport { ReturnableEventEmitter } from \"../lib/eventemitter\"\nimport { deffer } from \"../loadValues\"\nimport { injectCode } from \"../helpers\"\n\nfunction injectPantheon(): void {\n\tconst mg = Game.Objects.Temple.minigame\n\tsetMinigameInjection(mg)\n\tconst injections = [\n\t\tnew MinigameInjection(\"customIcons\", 1, () => {\n\t\t\tmg.godTooltip = injectCode(\n\t\t\t\tmg.godTooltip,\n\t\t\t\t\"'px;\\\"></div\",\n\t\t\t\t'\\'px;\\' + (me.icon[2] ? \"background-image: url(\" + me.icon[2] + \");\" : \"\") + \\'\"></div',\n\t\t\t\t\"replace\",\n\t\t\t\t{ M: mg }\n\t\t\t)\n\t\t\tmg.slotTooltip = injectCode(\n\t\t\t\tmg.slotTooltip,\n\t\t\t\t\"'px;\\\"></div\",\n\t\t\t\t'\\'px;\\' + (me.icon[2] ? \"background-image: url(\" + me.icon[2] + \");\" : \"\") + \\'\"></div',\n\t\t\t\t\"replace\",\n\t\t\t\t{ M: mg }\n\t\t\t)\n\t\t}),\n\t]\n\tfor (const injection of injections) injection.runHook()\n\tsetMinigameInjection()\n}\n\ndeffer.then(injectPantheon)\n","import { injectBasegame } from \"./injects/basegame\"\nimport { prod } from \"../isprod.json\"\nimport { exportSave, importSave } from \"./saves\"\nimport { createBuildingHooks } from \"./injects/buildings\"\n\nimport { defferResolve, setLoaded, onLoad } from \"./loadValues\"\n\nconst isFirstCppkies = !window.__INTERNAL_CPPKIES_HOOKS__\n\nif (isFirstCppkies && Game.UpdateMenu.toString().includes(\"Cppkies\")) {\n\tGame.Prompt(\n\t\t`<h3>Hello!</h3>\n<div class=\"block\">\nIt seems like you are trying to load Cppkies 0.3 or higher while having Cppkies 0.2 or lower already loaded.<br/>\nSadly, due to internal changes, Cppkies 0.3 mods are incompatible with Cppkies 0.2 mods. <br/>\n(The mod will still be launched, but it may or may not work correctly)<br/>\n<small>((If you are a mod author, please update your mods to use Cppkies 0.3 or higher.))</small><br/>\n</div>`,\n\t\t[[`Ok${Math.random() < 0.01 ? \" boomer\" : \"\"}`, \"Game.ClosePrompt()\"]]\n\t)\n} else {\n\tfor (const building of Game.ObjectsById) createBuildingHooks(building)\n\tinjectBasegame().then(() => {\n\t\tsetLoaded()\n\t\tif (isFirstCppkies) {\n\t\t\tGame.Notify(\"Cppkies loaded!\", \"\", [32, prod ? 17 : 21], 1.5)\n\n\t\t\tconst cppkiesNote = document.createElement(\"div\")\n\t\t\tcppkiesNote.textContent = \"Cppkies!\"\n\t\t\tconst topBar = document.querySelector(\"#topBar\")\n\t\t\tif (topBar) topBar.insertBefore(cppkiesNote, topBar.children[1])\n\n\t\t\tif (!Game.modSaveData[\"cppkies\"]) Game.modSaveData[\"cppkies\"] = \"{}\"\n\t\t\tGame.registerMod(\"cppkies\", {\n\t\t\t\tsave: exportSave,\n\t\t\t\tload: importSave,\n\t\t\t})\n\t\t\tGame.Win(\"Third-party\")\n\t\t}\n\t\t//Run all onLoad events\n\t\tonLoad.forEach(val => val())\n\t\t//Force all new onLoad events to run\n\t\tif (isFirstCppkies) {\n\t\t\t//Do the same for CPPKIES_ONLOAD\n\t\t\tif (!window.CPPKIES_ONLOAD) window.CPPKIES_ONLOAD = []\n\t\t\t//Run all onLoad events\n\t\t\twindow.CPPKIES_ONLOAD.forEach(val => val())\n\t\t\t//Force all new onLoad events to run\n\t\t\twindow.CPPKIES_ONLOAD = new Proxy([], {\n\t\t\t\tset: (_target, key, value): boolean => {\n\t\t\t\t\tif (key !== \"length\") value()\n\t\t\t\t\treturn true\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\t\tdefferResolve?.()\n\t})\n}\n\nimport \"./injects/pantheon\"\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__spreadArray","to","from","pack","arguments","ar","i","l","slice","concat","miscValues","cookieOrder","iconLink","buildingLink","customBuildings","customAchievements","customUpgrades","customTiers","mods","currentMod","setCurrentMod","mod","setUnitOwner","unit","owner","ownedUnits","aliases","steppedAliases","alias","oldName","aliasName","resolveAlias","name","includes","Error","generateImageFromLink","link","img","Image","addEventListener","crossOrigin","src","toBlobURI","buf","canvas","toBlob","blob","URL","createObjectURL","relink","icons","matrix","iconSize","size","postProcess","references","x","toString","toLowerCase","parseInt","buffer","document","createElement","getContext","width","height","drawImage","ret","postPostProcess","columnRelinkAmount","extraColumnIcons","3d","milestone1","milestone2","milestone3","krumblor","level1","level2","rowRelinkAmount","extraRowIcons","research","cookie","mouse","multicursor","kitten","resolveIcon","icon","undefined","iconsNamespace","patchIconsheet","replacements","followAlias","ogImg","_g","maxSize","replacements_1","_i","place","replacementCache","replacements_2","_b","replacement","_c","_d","clearRect","_e","relinkColumn","offset","columnIcons","Game","Tiers","iconRow","_a","values","reduce","acc","Math","max","Infinity","ctx","img_1","relinkRow","rowIcons","ObjectsById","single","iconColumn","img_2","unalias","doSingleInject","source","config","sliceMode","regex","RegExp","replace","test","console","warn","injectCode","func","target","where","context","newFunc","Function","keys","injectCodes","injections","newStr","injections_1","applyAllProps","targObj","srcObj","toSentenseCase","string","charAt","toUpperCase","obj","prop","fromCharCode","o","r","u","a","s","c","h","w","charCodeAt","pow","join","A","val","position","index","VANILLA_DRAGON_LEVEL_AMOUNT","dragonLevels","createDefaultSaveFragment","custom","level","auras","won","bought","unlocked","amount","free","totalCookies","muted","minigameSave","createDefaultSave","foreign","saveVer","dragon","save","initSave","newSave","saveBuilding","buildingsObject","keyname","buildings","loadBuilding","building","saveUpgrade","upgrade","upgradesObject","upgrades","loadUpgrade","saveAchievement","achievements","loadAchievement","saveMod","toggles","ui","modUI","loadMod","applyModSave","modSave","load","loadAll","customBuildings_1","customUpgrades_1","CountsAsUpgradeOwned","pool","UpgradesOwned","customAchievements_1","achievement","CountsAsAchievementOwned","AchievementsOwned","dragonLevel","dragonAuras","dragonAura","dragonAura2","mods_1","importSave","data","decompressedData","decompressFromUTF16","JSON","parse","err","error","computedSave","virtualSave","virtualModSave","buildingName","upgradeName","achievementName","uiName","modName","aura","applySave","exportSave","mods_2","customBuildings_2","customUpgrades_2","customAchievements_2","saveAll","stringify","isFortune","tier","currentMinigame","desc","price","buyFunc","_super","_this","descFunc","priceFunc","iconFunction","upgradesToRebuild","Upgrade","parents","posX","posY","map","id","UpgradesById","Upgrades","PrestigeUpgrades","UpgradePositions","quote","Objects","plural","basePrice","GetIcon","buildingTie","tieredUpgrades","buildingTie1","order","fortune","isNaN","min","buyFunction","ReturnableEventEmitter","forwardTo","on","_events","arg","off","splice","indexOf","startingValue","emit","retVal","constEmit","key","hookVersion","Injection","shouldRunVersioned","window","__INTERNAL_CPPKIES_HOOKS__","hooksVersion","setMinigameInjection","mg","MinigameInjection","injectedMinigames","has","buildingHooks","createBuildingHooks","emitter","tooltip","buy","levelUp","me","forEach","inject","runHook","hooks","grandmaPicture","endsWith","substring","grandmaNumber","Grandma","redraw","grandma","GrandmaSynergies","building1","building2","temp","buildingTie2","synergies","cursorEarlyLogs","power","Cursor","tierPow","special","mult","Unlock","kittenPriceRules","1","2","4","default","kittenPowerPattern","cost","milkUnlockAmount","computeKittenCost","milkProgress","addMult","hiddenMilkMult","cookiesMultByType","UpgradesByPool","add","cookiesPs","handmadeCookies","req","Beautify","baseDesc","BeautifyInText","unlockAt","cookies","require","season","UnlockAt","cookieUpgrades","Achievement","buildingObject","achievUnlock","Win","abs","tieredAchievs","q","treshold","floor","BankAchievements","toFixed","CpsAchievements","levelAchiev10","productionAchievs","achiev","commonName","bigIcon","art","cpsFunc","foolObject","buildingSpecial","mouseOn","box","getBoundingClientRect","mousePos","pageX","left","pageY","top","minigame","minigameLoaded","launch","foolObjects","goldenCookieBuildingBuffs","locked","BuildStore","productIcon","getElementById","productIconOff","style","backgroundImage","pics","muteDiv","className","display","backgroundPositionX","backgroundPositionY","mute","PlaySound","AddEvent","muteElement","appendChild","loadProps","recalculateGains","type","buildingOrIcon","pic","costDescription","canBuy","lastLevel","action","costStr","picY","picLink","DragonLevel","auraName","auraDesc","sacrifice","DragonAura","tab","num","roman","lookup_1","charType","toRomanNumeral","Milks","substr","MilksByChoice","sampleIcon","color","unlock","keyName","filter","Tier","loaded","setLoaded","onLoad","Proxy","set","deffer","res","defferResolve","metadata","modFunction","ogMod","find","version","UpdateMenu","Mod","modDiv","toggle","render","friendlyAppendHtml","element","containerName","getValue","container","innerHTML","ccButton","description","onClick","additionalClasses","button","classList","div","sectionState","ccHideableSection","title","titleDiv","showHideButton","cursor","borderRadius","textAlign","backgroundColor","fontSize","verticalAlign","marginRight","textContent","additionalCss","ccSlider","valueFunc","bounds","onChange","rightDiv","slider","innerText","parseFloat","head","menuDiv","querySelector","menuSubsection","children","menuListing","Button","ToggleBase","states","state","MultiStateButton","stateFunc","defaultValue","Slider","defaultState","ToggleButton","spiritName","spiritTitle","descriptions","fullName","Temple","desc1","desc2","desc3","before","descBefore","after","descAfter","active","activeDescFunc","godsById","gods","text","origin","godDiv","godTooltip","dynamic","draw","wobble","shouldHide","godIconDiv","backgroundPosition","godDragDiv","ev","dragGod","dropGod","godPlaceholder","godsDiv","M","slotTooltip","isFirstCppkies","Prompt","random","setForwardTarget","basegame","WriteSave","Reset","registerHook","CalculateGains","cps","mouseCps","cpc","getNewTicker","DrawSpecial","ToggleSpecialMenu","Loader","Load","Set","Notify","cppkiesNote","topBar","insertBefore","modSaveData","registerMod","CPPKIES_ONLOAD","_target","GetTieredCpsMult","magicCpS","baseCps","UnlockTiered","SpecialGrandmaUnlock"],"mappings":"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"}