{"version":3,"file":"index.js","sources":["../src/spritesheets.ts","../src/helpers.ts","../src/saves.ts","../src/buildings.ts","../src/upgrade.ts","../src/injects/postInject.ts","../src/index.ts","../src/lib/eventemitter.ts","../src/injects/generic.ts","../src/tiers.ts","../src/vars.ts","../src/injects/basegame.ts"],"sourcesContent":["import master from \"./vars\"\n// Resolve aliases\n/**\n * Currently defined alias\n */\nexport const aliases: Record<string, string> = {}\nlet steppedAliases: string[] = []\n/**\n * Creates an alias from an old name to a new one\n * @param oldName The current name\n * @param aliasName The new, alias name\n */\nexport function alias(oldName: string, aliasName: string): void {\n\taliases[oldName] = aliasName\n}\n\n/**\n * Deletes an alias from the name\n * @param name The name to remove an alias from\n */\nexport function unalias(name: string): void {\n\tdelete alias[name]\n}\n\n/**\n * Resolves an aliased name\n * @param name The name to be resolved\n */\nexport function resolveAlias(name: string): string {\n\tif (steppedAliases.includes(name)) throw new Error(\"Recursive alias\")\n\tsteppedAliases.push(name)\n\tif (name in aliases) return resolveAlias(aliases[name])\n\tsteppedAliases = []\n\treturn name\n}\n\n/**\n * A local helper to fetch an image from an image link\n * @param link The image URI\n */\nfunction generateImageFromLink(link: string): Promise<HTMLImageElement> {\n\treturn new Promise(resolve => {\n\t\tconst img = new Image()\n\t\timg.addEventListener(\"load\", (): void => {\n\t\t\tresolve(img)\n\t\t})\n\t\timg.crossOrigin = \"Anonymous\"\n\t\timg.src = link\n\t})\n}\n\n/**\n * A local helper to create a blob URI from a canvas buffer\n */\nfunction toBlobURI(buf: CanvasRenderingContext2D): Promise<string> {\n\treturn new Promise(resolve => {\n\t\tbuf.canvas.toBlob((blob: Blob) => {\n\t\t\tresolve(URL.createObjectURL(blob))\n\t\t})\n\t})\n}\n\n/**\n * A universal version of Icon which is not restricted to CC\n */\nexport type UniversalIcon = [number, number]\n/**\n * Relocates the icons on an iconsheets\n * @param link The link to the original file\n * @param icons The definition of iconName: iconPosition\n * @param matrix The matrix of icon names\n * @param iconSize The size of a single icon\n * @param size The size of the new spritesheet\n * @param postProcess Optional operations after the relink\n */\nfunction relink(\n\tlink: string,\n\ticons: Record<string, UniversalIcon>,\n\tmatrix: string[][] | string[],\n\ticonSize: [number, number],\n\tsize: [number, number],\n\tpostProcess?: (ctx: CanvasRenderingContext2D) => void | Promise<void>\n): Promise<string> {\n\treturn new Promise(resolve => {\n\t\tif (!(matrix[0] instanceof Array)) matrix = [matrix as string[]]\n\t\tmatrix = matrix as string[][]\n\t\t//Collect references\n\t\tconst references: Record<string, Game.Icon> = {}\n\t\tfor (const y in matrix)\n\t\t\tfor (const x in matrix[y]) {\n\t\t\t\t// Ignore if falsy\n\t\t\t\tif (!matrix[y][x]) continue\n\t\t\t\tmatrix[y][x] = matrix[y][x].toString().toLowerCase()\n\t\t\t\tif (!(matrix[y][x] in icons)) throw new Error(\"Invalid icon name\")\n\t\t\t\treferences[matrix[y][x]] = [parseInt(x), parseInt(y)]\n\t\t\t}\n\t\t//Draw new column\n\t\tconst buffer = document.createElement(\"canvas\").getContext(\"2d\")\n\t\tconst img = new Image()\n\t\timg.addEventListener(\"load\", (): void => {\n\t\t\tbuffer.canvas.width = size[0]\n\t\t\tbuffer.canvas.height = size[1]\n\t\t\tfor (const i in references)\n\t\t\t\tbuffer.drawImage(\n\t\t\t\t\timg,\n\t\t\t\t\treferences[i][0] * iconSize[0],\n\t\t\t\t\treferences[i][1] * iconSize[1],\n\t\t\t\t\ticonSize[0],\n\t\t\t\t\ticonSize[1],\n\t\t\t\t\ticons[i][0] * iconSize[0],\n\t\t\t\t\ticons[i][1] * iconSize[1],\n\t\t\t\t\ticonSize[0],\n\t\t\t\t\ticonSize[1]\n\t\t\t\t)\n\t\t\tconst postPostProcess = (): void => {\n\t\t\t\ttoBlobURI(buffer).then(resolve)\n\t\t\t}\n\t\t\tlet ret: void | Promise<void>\n\t\t\tif (postProcess) ret = postProcess(buffer)\n\t\t\tif (ret instanceof Promise) ret.then(postPostProcess)\n\t\t\telse postPostProcess()\n\t\t})\n\t\timg.crossOrigin = \"Anonymous\"\n\t\timg.src = link\n\t})\n}\n\n/**\n * The amount of column relinks a URI has been to\n */\nconst columnRelinkAmount: Record<string, number> = {}\n\n/**\n * Additional icons which aren't defined with tiers\n */\nconst extraColumnIcons: Record<string, UniversalIcon> = {\n\t\"3d\": [0, 21],\n\tmilestone1: [0, 22],\n\tmilestone2: [0, 23],\n\tmilestone3: [0, 24],\n\tkrumblor: [0, 25],\n\tlevel1: [0, 26],\n\tlevel2: [0, 27],\n}\n/**\n * Relocates the icons for a column and automatically aliases it\n * @param link The link to the original, unordered iconsheet\n * @param matrix The matrix of the names of the icon tiers\n * Valid tier names are:\n * * Tier ids: `1`, `5`, `7`, etc.\n * * Tier names: `\"jetmint\"`, `\"plain\"`, etc.\n * * Non-standard tier icon tiers: `\"3d\"`, `\"milestone1\"`, `\"milestone2\"`, `\"milestone3\"`, `\"krumblor\"`, `\"level1\"`, `\"level2\"`\n * @param offset The icon X to offset the column\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function relinkColumn(\n\tlink: string,\n\tmatrix: string[] | string[][],\n\toffset?: number,\n\tfollowAlias = false\n): Promise<void> {\n\t// Automatically offset the X by 1 for each relink\n\tif (offset === undefined) {\n\t\tif (!columnRelinkAmount[link]) columnRelinkAmount[link] = 0\n\t\toffset = columnRelinkAmount[link]++\n\t}\n\tconst columnIcons: Record<string, UniversalIcon> = {}\n\tfor (const i in extraColumnIcons) {\n\t\tcolumnIcons[i] = [offset, extraColumnIcons[i][1]]\n\t}\n\t// Automatically generate normal tiers\n\tfor (const i in Game.Tiers)\n\t\tcolumnIcons[Game.Tiers[i].name.toLowerCase()] = columnIcons[\n\t\t\ti.toString()\n\t\t] = [offset, Game.Tiers[i].iconRow]\n\talias(\n\t\tlink,\n\t\tawait relink(\n\t\t\tfollowAlias ? resolveAlias(link) : link,\n\t\t\tcolumnIcons,\n\t\t\tmatrix,\n\t\t\t[48, 48],\n\t\t\t[\n\t\t\t\t(offset + 1) * 48,\n\t\t\t\t(Object.values(columnIcons).reduce(\n\t\t\t\t\t(acc, value) => Math.max(acc, value[1]),\n\t\t\t\t\t-Infinity\n\t\t\t\t) +\n\t\t\t\t\t1) *\n\t\t\t\t\t48,\n\t\t\t],\n\t\t\tctx => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t// If not first relink, append to original image\n\t\t\t\t\tif (resolveAlias(link) !== link) {\n\t\t\t\t\t\tconst img = new Image()\n\t\t\t\t\t\timg.addEventListener(\"load\", (): void => {\n\t\t\t\t\t\t\tctx.drawImage(img, 0, 0)\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t})\n\t\t\t\t\t\timg.src = resolveAlias(link)\n\t\t\t\t\t\timg.crossOrigin = \"Anonymous\"\n\t\t\t\t\t} else resolve()\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t)\n}\n\n/**\n * The amount of row relinks a URI has been to\n */\nconst rowRelinkAmount: Record<string, number> = {}\n\n/**\n * Additional icons which aren't defined with buildings\n */\nconst extraRowIcons: Record<string, UniversalIcon> = {\n\tresearch: [9, 0],\n\tcookie: [10, 0],\n\tmouse: [11, 0],\n\tmulticursor: [12, 0],\n\tkitten: [18, 0],\n}\n/**\n * Relocates the icons for a row and automatically aliases it\n * @param link The link to the original, unordered iconsheet\n * @param matrix The matrix of the names of the icon types\n * Valid tier types are:\n * * Building ids: `1, `5`, `7`, etc.\n * * Building names: `\"cursor\"`, `\"farm\"`, etc.\n * * Non-standard tier icon tiers: `\"research\"`, `\"cookie\"`, `\"mouse\"`, `\"multicursor\"`, `\"kitten\"`\n * @param offset The icon X to offset the column\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function relinkRow(\n\tlink: string,\n\tmatrix: string[] | string[][],\n\toffset?: number,\n\tfollowAlias = false\n): Promise<void> {\n\tif (offset === undefined) {\n\t\tif (!rowRelinkAmount[link]) rowRelinkAmount[link] = 0\n\t\toffset = rowRelinkAmount[link]++\n\t}\n\tconst rowIcons: Record<string, UniversalIcon> = {}\n\tfor (const i in extraRowIcons) {\n\t\trowIcons[i] = [extraRowIcons[i][0], offset]\n\t}\n\t// Automatically generate normal buildings\n\tfor (const i in Game.ObjectsById)\n\t\trowIcons[Game.ObjectsById[i].single.toLowerCase()] = rowIcons[i] = [\n\t\t\tGame.ObjectsById[i].iconColumn,\n\t\t\toffset,\n\t\t]\n\talias(\n\t\tlink,\n\t\tawait relink(\n\t\t\tfollowAlias ? resolveAlias(link) : link,\n\t\t\trowIcons,\n\t\t\tmatrix,\n\t\t\t[48, 48],\n\t\t\t[\n\t\t\t\t(Object.values(rowIcons).reduce(\n\t\t\t\t\t(acc, value) => Math.max(acc, value[0]),\n\t\t\t\t\t-Infinity\n\t\t\t\t) +\n\t\t\t\t\t1) *\n\t\t\t\t\t48,\n\t\t\t\t(offset + 1) * 48,\n\t\t\t],\n\t\t\tctx => {\n\t\t\t\treturn new Promise(resolve => {\n\t\t\t\t\t// If not first relink, append to original image\n\t\t\t\t\tif (resolveAlias(link) !== link) {\n\t\t\t\t\t\tconst img = new Image()\n\t\t\t\t\t\timg.addEventListener(\"load\", (): void => {\n\t\t\t\t\t\t\tctx.drawImage(img, 0, 0)\n\t\t\t\t\t\t\tresolve()\n\t\t\t\t\t\t})\n\t\t\t\t\t\timg.src = resolveAlias(link)\n\t\t\t\t\t\timg.crossOrigin = \"Anonymous\"\n\t\t\t\t\t} else resolve()\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t)\n}\n\n/**\n * Patches an iconsheet with replacements\n * @param link The link to the original, unpatched iconsheet\n * @param replacements The replacements to make, first element in tuple is the original position,\n * second is the icon to replace with\n * @param followAlias If true, the original image URI will be de-aliased (`relinkColumn`, `relinkRow` and `patchIconsheet` create an alias!)\n */\nexport async function patchIconsheet(\n\tlink: string,\n\treplacements: [UniversalIcon, Game.Icon][],\n\tfollowAlias = true\n): Promise<void> {\n\t// First, create a canvas with the original image\n\tconst buffer = document.createElement(\"canvas\").getContext(\"2d\")\n\tconst ogImg = await generateImageFromLink(\n\t\tfollowAlias ? resolveAlias(link) : link\n\t)\n\tconst maxSize = [ogImg.width, ogImg.height]\n\t// Get the size of the output canvas\n\tfor (const place of replacements) {\n\t\tif (place[0][0] * 48 > maxSize[0]) maxSize[0] = place[0][0] * 48\n\t\tif (place[0][1] * 48 > maxSize[1]) maxSize[1] = place[0][1] * 48\n\t}\n\tbuffer.canvas.width = maxSize[0]\n\tbuffer.canvas.height = maxSize[1]\n\tbuffer.drawImage(ogImg, 0, 0)\n\t// Generate a cache\n\tconst replacementCache: Record<string, HTMLImageElement> = {}\n\tfor (const replacement of replacements) {\n\t\t// Little trick, here, if icon [2] is \"\", go to \"img/icons.png\" instead of `master.iconLink`\n\t\tconst iconLink = resolveAlias(\n\t\t\t(replacement[1][2] ?? master.iconLink) || \"img/icons.png\"\n\t\t)\n\t\tif (!replacementCache[iconLink])\n\t\t\treplacementCache[iconLink] = await generateImageFromLink(iconLink)\n\t\t// Clear the icon beforehand\n\t\tbuffer.clearRect(replacement[0][0] * 48, replacement[0][1] * 48, 48, 48)\n\n\t\tbuffer.drawImage(\n\t\t\treplacementCache[iconLink],\n\t\t\treplacement[1][0] * 48,\n\t\t\treplacement[1][1] * 48,\n\t\t\t48,\n\t\t\t48,\n\t\t\treplacement[0][0] * 48,\n\t\t\treplacement[0][1] * 48,\n\t\t\t48,\n\t\t\t48\n\t\t)\n\t}\n\talias(link, await toBlobURI(buffer))\n}\n","/**\n * The common type for a value, can be either the value or a function that returns a value with the type.\n */\nexport type CommonValue<T> = T | (() => T)\n/**\n * A helper function which converts a common value to a value\n * @param value The common value to convert\n * @helper\n */\nexport function getValue<T>(value: CommonValue<T>): T {\n\tif (value instanceof Function) return value()\n\treturn value\n}\n/**\n * A helper function which escapes special regex characters.\n * @param str The string to escape\n * @helper\n */\nexport function escapeRegExp(str: string): string {\n\t// eslint-disable-next-line no-useless-escape\n\treturn str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\")\n}\n/**\n * A helper function which replaces(or appends) code in a function, returning the new function, and it's eval free!\n * @param func The source function\n * @param source What to replace, can be null for slicing\n * @param target What to put instead of (or before/after) the source\n * @param where Where to insert or replace your injection\n * @param context The optional context to use\n * @helper\n */\nexport function injectCode<T extends Function>(\n\tfunc: T,\n\tsource: CommonValue<string> | CommonValue<RegExp> | null,\n\ttarget: CommonValue<string>,\n\twhere: \"before\" | \"replace\" | \"after\",\n\tcontext: object = {}\n): T {\n\t// Sanity check\n\tfor (const i in context) {\n\t\tif (!/[a-zA-Z_$][0-9a-zA-Z_$]*/.test(i))\n\t\t\tthrow new Error(\"Invalid context variable name!\")\n\t}\n\tlet newFuncStr = func.toString()\n\tconst sliceMode = source === null\n\tlet regex: RegExp\n\tif (!sliceMode) {\n\t\tsource = getValue(source)\n\t\tif (typeof source === \"string\")\n\t\t\tregex = new RegExp(escapeRegExp(source), \"g\")\n\t\telse regex = source\n\t}\n\ttarget = getValue(target)\n\tconst findStart = /(\\)[^{]*{)/\n\tconst findEnd = /(}?)$/\n\tif (!sliceMode && !regex.test(newFuncStr)) console.warn(\"Nothing to inject.\")\n\tswitch (where) {\n\t\tcase \"before\":\n\t\t\tif (sliceMode) newFuncStr = newFuncStr.replace(findStart, `$1${target}`)\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}${source}`)\n\t\t\tbreak\n\t\tcase \"replace\":\n\t\t\tif (sliceMode) newFuncStr = `${target}`\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${target}`)\n\t\t\tbreak\n\t\tcase \"after\":\n\t\t\tif (sliceMode) newFuncStr = newFuncStr.replace(findEnd, `${target}$1`)\n\t\t\telse newFuncStr = newFuncStr.replace(regex, `${source}${target}`)\n\t\t\tbreak\n\t\tdefault:\n\t\t\tthrow new Error('where Parameter must be \"before\", \"replace\" or \"after\"')\n\t}\n\tlet contextStr = \"\"\n\tfor (const i in context) {\n\t\tcontextStr += `var ${i} = globalThis.tempCtx.${i}\\n`\n\t}\n\tglobalThis.tempCtx = context\n\tconst newFunc = new Function(\n\t\t`${contextStr}globalThis.tempCtx = null\\nreturn (${newFuncStr})`\n\t)()\n\tnewFunc.prototype = func.prototype\n\treturn newFunc\n}\n/**\n * Applies all props to an object via mutating\n * @param targObj The object which will be mutated\n * @param srcObj The object which properties will be applied to the target object\n */\n\nexport function applyAllProps(targObj: object, srcObj: object): void {\n\tfor (const i in srcObj) targObj[i] = srcObj[i]\n}\n\n/**\n * Converts a string to sentense case, AKA first letter upper, all next lower\n * @param strign\n */\nexport function toSentenseCase(strign: string): string {\n\treturn strign.charAt(0).toUpperCase() + strign.slice(1).toLowerCase()\n}\n","import master from \"./vars\"\nimport { Building } from \"./buildings\"\nimport { Upgrade } from \"./upgrade\"\nimport { applyAllProps } from \"./helpers\"\nexport let save: SaveType = null\n/**\n * The save type for Cppkies\n */\nexport interface SaveType {\n\tsaveVer: number\n\tmods: Record<string, ModSave>\n\tforeign: ModSave\n\texists: boolean\n}\n/**\n * The save type for a mod\n */\nexport interface ModSave {\n\tbuildings: Record<string, BuildingSave>\n\tupgrades: Record<string, UpgradeSave>\n}\n/**\n * The save type for a building\n */\nexport interface BuildingSave {\n\tamount: number\n\tbought: number\n\tfree: number\n\ttotalCookies: number\n\tlevel: number\n\tmuted: number\n\tminigameSave: string\n}\n/**\n * The save type for an upgrade\n */\nexport interface UpgradeSave {\n\tunlocked: boolean\n\tbought: boolean\n}\n/**\n * The default save file for buildings\n */\nexport const DEFAULT_BUILDING_SAVE: BuildingSave = {\n\tamount: 0,\n\tbought: 0,\n\tfree: 0,\n\ttotalCookies: 0,\n\tlevel: 0,\n\tmuted: 0,\n\tminigameSave: \"\",\n}\n/**\n * The default save for an upgrade\n */\nexport const DEFAULT_UPGRADE_SAVE: UpgradeSave = {\n\tbought: false,\n\tunlocked: false,\n}\nexport const DEFAULT_MOD_SAVE: ModSave = {\n\tbuildings: {},\n\tupgrades: {},\n}\n/**\n * Creates a save for Cppkies\n */\nexport function initSave(): void {\n\tmaster.save = save = {\n\t\tmods: {},\n\t\tforeign: DEFAULT_MOD_SAVE,\n\t\tsaveVer: 0,\n\t\texists: true,\n\t}\n}\n/**\n * Loads the building save data\n * @param building The building to load savedata for\n */\nexport function loadBuilding(building: Building): BuildingSave {\n\t//Use names because ID conflicts\n\treturn save.foreign.buildings[building.name] || DEFAULT_BUILDING_SAVE\n}\n/**\n * Saves a building\n * @param building The building to save\n */\nexport function saveBuilding({\n\tamount,\n\tbought,\n\tfree,\n\ttotalCookies,\n\tlevel,\n\tmuted,\n\tminigameSave,\n\tname,\n}: Building): void {\n\tsave.foreign.buildings[name] = {\n\t\tamount,\n\t\tbought,\n\t\tfree,\n\t\ttotalCookies,\n\t\tlevel,\n\t\tmuted,\n\t\tminigameSave,\n\t}\n}\n/**\n * Loads an upgrade\n * @param upgrade The upgrade to load\n */\nexport function loadUpgrade(upgrade: Upgrade): UpgradeSave {\n\treturn save.foreign.upgrades[upgrade.name] || DEFAULT_UPGRADE_SAVE\n}\n/**\n * Saves an upgrade\n * @param upgrade The upgrade to save\n */\nexport function saveUpgrade(upgrade: Upgrade): void {\n\tsave.foreign.upgrades[upgrade.name] = {\n\t\tunlocked: !!upgrade.unlocked,\n\t\tbought: !!upgrade.bought,\n\t}\n}\n/**\n * Loads everything\n * (Doesn't get called on Game.Load since Cppkies save isn't saved in the normal one)\n */\nexport function loadAll(): void {\n\tfor (const i in master.customBuildings) {\n\t\tconst me = master.customBuildings[i]\n\t\tapplyAllProps(Game.Objects[me.name], loadBuilding(me))\n\t}\n\tfor (const i in master.customUpgrades) {\n\t\tconst me = master.customUpgrades[i]\n\t\tapplyAllProps(Game.Upgrades[me.name], loadUpgrade(me))\n\t}\n}\n/**\n * Saves everything\n */\nexport function saveAll(): void {\n\tfor (const i in master.customBuildings)\n\t\tsaveBuilding(master.customBuildings[i])\n\tfor (const i in master.customUpgrades) saveUpgrade(master.customUpgrades[i])\n}\n\nexport function importSave(data: string): void {\n\ttry {\n\t\tmaster.save = save = JSON.parse(data)\n\t\tif (!save.exists) initSave()\n\t} catch {\n\t\tinitSave()\n\t}\n\tloadAll()\n}\n\nexport function exportSave(): string {\n\tsaveAll()\n\treturn JSON.stringify(save)\n}\n","import master from \"./vars\"\nimport { injectCode } from \"./helpers\"\nimport { Injection } from \"./injects/generic\"\nimport { loadBuilding } from \"./saves\"\nimport { resolveAlias } from \"./spritesheets\"\n\nexport const buildingHooks: Record<string, BuildingHooks> = {}\nexport const customBuildings: Building[] = []\n/**\n * Creates the hooks for a building\n * @param building The building to create hooks for\n */\n\nexport interface BuildingHooks {\n\ttooltip: ((this: Game.Object, ret: string) => string | null)[]\n}\n\nexport function createHooks(building: Building | Game.Object): void {\n\tconst injections = [\n\t\tnew Injection(\"tooltip\", () => {\n\t\t\tbuilding.tooltip = injectCode(\n\t\t\t\tinjectCode(building.tooltip, \"return\", \"let ret = \", \"replace\"),\n\t\t\t\tnull,\n\t\t\t\t`\\n//Cppkies injection\n\t\tfor(const i in Cppkies.buildingHooks[\"${building.name}\"].tooltip) {\n\t\t\tconst tempRet = Cppkies.buildingHooks[\"${building.name}\"].tooltip[i].call(this, ret)\n\t\t\tret = tempRet || ret\n\t\t}\n\t\treturn ret`,\n\t\t\t\t\"after\"\n\t\t\t)\n\t\t}),\n\t]\n\tconst dummy: Record<string, Function[]> = {}\n\tinjections.forEach(inject => {\n\t\tdummy[inject.value] = inject.defValue\n\t\tif (inject.func) inject.func()\n\t})\n\tbuildingHooks[building.name] = (dummy as unknown) as BuildingHooks\n}\n\n/**\n * The building class for creating new buildings\n */\nexport class Building extends Game.Object {\n\ticonLink: string\n\tbuildingLink: string\n\t/**\n\t * Creates a new building and creates the hooks for it\n\t * @param name The name of the building\n\t * @param commonName Various additional string for the building, split by |:  The name of the building, then in plural, how the building produced the cookies, the effect from sugar lumps, then in plural\n\t * @param desc The description of the building\n\t * @param icon The icon for the building (Only the column matters) (See http://cppkies.js.org/#/./CommonProblems?id=relink-column for instructions about the icons)\n\t * @param bigIcon The icon that shows up in store (Only the row matters) (See http://cppkies.js.org/#/./CommonProblems?id=big-icons for instructions about the big icons)\n\t * @param art The art for the building\n\t * @param cpsFunc The function to calculate CPS\n\t * @param buyFunction The function which gets called when it's bought\n\t * @param foolObject The fool building to display during business day\n\t * @param buildingSpecial The building special and building debuff\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tcommonName: string,\n\t\tdesc: string,\n\t\ticon: Game.Icon,\n\t\tbigIcon: Game.Icon,\n\t\tart: Game.Art,\n\t\tcpsFunc: (me: Building) => number,\n\t\tbuyFunction: () => void,\n\t\tfoolObject: Game.FoolBuilding,\n\t\tbuildingSpecial: [string, string]\n\t) {\n\t\t//Warn about enforced orders\n\t\t//TODO Create article\n\t\tif (icon[1] !== 0) {\n\t\t\tconsole.warn(\n\t\t\t\t\"All icon sheets must follow an order, see https://cppkies.js.org/#/CommonProblems#IconOrder?id=relink-column\"\n\t\t\t)\n\t\t}\n\t\tif (bigIcon[0] !== 0) {\n\t\t\tconsole.warn(\n\t\t\t\t\"All big icon sheets must follow an order, see https://cppkies.js.org/#/CommonProblems#IconOrder?id=big-icons\"\n\t\t\t)\n\t\t}\n\t\tsuper(\n\t\t\tname,\n\t\t\tcommonName,\n\t\t\tdesc,\n\t\t\tbigIcon[1],\n\t\t\ticon[0],\n\t\t\tart,\n\t\t\t0, // The game automatically calculates Price and BaseCps\n\t\t\tcpsFunc,\n\t\t\tbuyFunction\n\t\t)\n\t\tcustomBuildings.push(this)\n\t\t// Create hooks\n\t\tcreateHooks(this)\n\t\t//Manually relink canvases and contexts because Orteil made it so new buildings break the old canvas and context links\n\t\tfor (const i in Game.ObjectsById) {\n\t\t\tif (parseInt(i) <= 0) continue\n\t\t\tconst me = Game.ObjectsById[i]\n\t\t\tme.canvas = l(`rowCanvas${i}`) as HTMLCanvasElement\n\t\t\tif (!me.canvas) continue\n\t\t\tme.ctx = me.canvas.getContext(\"2d\")\n\t\t\t//Relink their events too\n\t\t\tme.canvas.addEventListener(\"mouseover\", () => {\n\t\t\t\tme.mouseOn = true\n\t\t\t})\n\t\t\tme.canvas.addEventListener(\"mouseout\", () => {\n\t\t\t\tme.mouseOn = false\n\t\t\t})\n\t\t\tme.canvas.addEventListener(\"mousemove\", e => {\n\t\t\t\tconst box = me.canvas.getBoundingClientRect()\n\t\t\t\tme.mousePos[0] = e.pageX - box.left\n\t\t\t\tme.mousePos[1] = e.pageY - box.top\n\t\t\t})\n\t\t\t//Restore minigames\n\t\t\tif (me.minigame && me.minigameLoaded) {\n\t\t\t\tconst save = me.minigame.save()\n\t\t\t\tme.minigame.launch()\n\t\t\t\tme.minigame.load(save)\n\t\t\t}\n\t\t}\n\t\tthis.buildingLink = bigIcon[2] || master.buildingLink + \"\"\n\t\tthis.iconLink = resolveAlias(icon[2] || master.iconLink + \"\")\n\t\t// This is the name, description, and icon used during Business Season\n\t\tif (foolObject) Game.foolObjects[name] = foolObject\n\t\t// The name of this building's golden cookie buff and debuff\n\t\tif (buildingSpecial) Game.goldenCookieBuildingBuffs[name] = buildingSpecial\n\n\t\tif (this.iconLink) {\n\t\t\tbuildingHooks[this.name].tooltip.push((ret: string) =>\n\t\t\t\tthis.locked\n\t\t\t\t\t? ret\n\t\t\t\t\t: ret.replace(\n\t\t\t\t\t\t\t\"background-position\",\n\t\t\t\t\t\t\t`background-image:url(${this.iconLink});background-position`\n\t\t\t\t\t  )\n\t\t\t)\n\t\t}\n\n\t\tGame.BuildStore()\n\t\tif (this.buildingLink) {\n\t\t\tmaster.hooks.on(\"buildStore\", () => {\n\t\t\t\tl(\n\t\t\t\t\t`productIcon${this.id}`\n\t\t\t\t).style.backgroundImage = `url(${this.buildingLink})`\n\t\t\t\tl(\n\t\t\t\t\t`productIconOff${this.id}`\n\t\t\t\t).style.backgroundImage = `url(${this.buildingLink})`\n\t\t\t})\n\t\t}\n\t\tGame.BuildStore()\n\t\tthis.canvas = l(`rowCanvas${this.id}`) as HTMLCanvasElement\n\t\tthis.ctx = this.canvas.getContext(\"2d\")\n\t\t//this.context = this.ctx\n\t\tthis.pics = []\n\t\tconst muteDiv = document.createElement(\"div\")\n\t\tmuteDiv.className = \"tinyProductIcon\"\n\t\tmuteDiv.id = `mutedProduct${this.id}`\n\t\tmuteDiv.style.display = \"none\"\n\t\tif (this.buildingLink)\n\t\t\tmuteDiv.style.backgroundImage = `url(${this.buildingLink})`\n\t\tmuteDiv.style.backgroundPositionX = `-${icon[0]}px`\n\t\tmuteDiv.style.backgroundPositionY = `-${icon[1]}px`\n\t\tmuteDiv.addEventListener(\"click\", () => {\n\t\t\tthis.mute(0)\n\t\t\twindow.PlaySound(this.muted ? \"snd/clickOff.mp3\" : \"snd/clickOn.mp3\")\n\t\t})\n\n\t\twindow.AddEvent(this.canvas, \"mouseover\", () => {\n\t\t\tthis.mouseOn = true\n\t\t})\n\t\twindow.AddEvent(this.canvas, \"mouseout\", () => {\n\t\t\tthis.mouseOn = false\n\t\t})\n\t\tthis.canvas.addEventListener(\"mousemove\", e => {\n\t\t\tconst box = this.canvas.getBoundingClientRect()\n\t\t\tthis.mousePos[0] = e.pageX - box.left\n\t\t\tthis.mousePos[1] = e.pageY - box.top\n\t\t})\n\t\tl(\"buildingsMute\").appendChild(muteDiv)\n\t\t// Load the save stuff\n\t\tconst loadProps = loadBuilding(this)\n\t\tfor (const i in loadProps) this[i] = loadProps[i]\n\t\tGame.recalculateGains = 1\n\t}\n}\n/**\n * The recommended function to pass in building CpsFunc\n * @param me Itself\n */\nexport const defaultCps = (me: Building): number =>\n\tGame.GetTieredCpsMult(me) * Game.magicCpS(me.name) * me.baseCps\n/**\n * The reccomended function to pass in building BuyFunc\n */\nexport const defaultOnBuy = function(): void {\n\tGame.UnlockTiered(this)\n\tif (\n\t\tthis.amount >= Game.SpecialGrandmaUnlock &&\n\t\tGame.Objects[\"Grandma\"].amount > 0 &&\n\t\tthis.grandma\n\t)\n\t\tGame.Unlock(this.grandma.name)\n}\n","import master from \"./vars\"\nimport { loadUpgrade } from \"./saves\"\nimport { CommonValue, toSentenseCase } from \"./helpers\"\nimport { resolveAlias } from \"./spritesheets\"\n\nexport const customUpgrades: Upgrade[] = []\n\n/**\n * The class for upgrades\n */\nexport class Upgrade extends Game.Upgrade {\n\t/**\n\t * Creates an upgrade\n\t * @param name The name of the upgrade\n\t * @param desc The description of it\n\t * @param price The price of it\n\t * @param icon  The icon for it\n\t * @param buyFunc The function that gets called when you buy the upgrade\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdesc: CommonValue<string>,\n\t\tprice: CommonValue<number>,\n\t\ticon: CommonValue<Game.Icon>,\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\tbuyFunc: () => void = (): void => {}\n\t) {\n\t\tif (!icon[2]) icon[2] = master.iconLink + \"\"\n\t\ticon[2] = resolveAlias(icon[2])\n\t\tsuper(\n\t\t\tname,\n\t\t\ttypeof desc === \"function\" ? \"\" : desc,\n\t\t\ttypeof price === \"function\" ? 0 : price,\n\t\t\ttypeof icon === \"function\" ? [0, 0] : icon,\n\t\t\tbuyFunc\n\t\t)\n\n\t\tif (typeof desc === \"function\") this.descFunc = desc\n\t\tif (typeof price === \"function\") this.priceFunc = price\n\t\tif (typeof icon === \"function\") this.iconFunction = icon\n\t\tcustomUpgrades.push(this)\n\t\tconst loadProps = loadUpgrade(this)\n\t\tfor (const i in loadProps) this[i] = loadProps[i]\n\t}\n}\n\n/**\n * The class for heavenly upgrades\n */\nexport class HeavenlyUpgrade extends Upgrade implements Game.HeavenlyUpgrade {\n\tposX: number\n\tposY: number\n\n\tpool = \"prestige\" as const\n\t/**\n\t * Creates a heavenly upgrade\n\t * @param name The name for it\n\t * @param desc The description of it\n\t * @param price The price of in (in Heavenly Chips)\n\t * @param icon The icon for it\n\t * @param position The position of it on the heavenly map screen\n\t * @param parents It's parents, can be mixed ID's with names\n\t * @param buyFunc The function which gets called on being bought\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdesc: CommonValue<string>,\n\t\tprice: CommonValue<number>,\n\t\ticon: CommonValue<Game.Icon>,\n\t\tposition: [number, number],\n\t\tparents: (string | number)[] = [\"Legacy\"],\n\t\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\t\tbuyFunc: () => void = (): void => {}\n\t) {\n\t\tsuper(name, desc, price, icon, buyFunc)\n\n\t\tthis.posX = position[0]\n\t\tthis.posY = position[1]\n\n\t\tthis.parents = parents.map(id => Game.Upgrades[id] || Game.UpgradesById[id])\n\n\t\tGame.PrestigeUpgrades.push(this)\n\t\tGame.UpgradePositions[this.id] = position\n\t}\n}\n\nfunction isFortune<Tier extends string | number>(\n\tupgrade: TieredUpgrade<Tier | \"fortune\">\n): upgrade is TieredUpgrade<\"fortune\"> {\n\treturn upgrade.tier === \"fortune\"\n}\n\nexport class TieredUpgrade<Tier extends string | number = string | number>\n\textends Upgrade\n\timplements Game.TieredUpgradeClass<Tier> {\n\tbuildingTie: Game.Object\n\tbuildingTie1: Game.Object\n\ttier: Tier\n\tpool: \"\"\n\n\t/**\n\t * Creates a tiered upgrade\n\t * @param name The name of the tiered upgrade\n\t * @param description The description of the upgrade\n\t * @param building The building it boosts\n\t * @param tier The upgrade's tier\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdescription: string,\n\t\tbuilding: Game.Object | string,\n\t\ttier: Tier\n\t) {\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tsuper(\n\t\t\tname,\n\t\t\t`${toSentenseCase(\n\t\t\t\tbuilding.plural\n\t\t\t)} are <b>twice</b> as efficient.<q>${description}</q>`,\n\t\t\tbuilding.basePrice * Game.Tiers[tier.toString()].price,\n\t\t\tGame.GetIcon(building.name, tier)\n\t\t)\n\n\t\tGame.SetTier(building.name, tier)\n\n\t\tthis.buildingTie1 = building\n\t\tif (isFortune(this)) {\n\t\t\tthis.order = 19000\n\t\t\tbuilding.fortune = this\n\t\t}\n\t\tif (!isNaN(parseInt(tier.toString()))) {\n\t\t\ttier = parseInt(tier.toString()) as Tier\n\t\t}\n\t\tif (typeof tier === \"number\") {\n\t\t\tthis.order = (building.id + 1) * 100 + tier\n\t\t\t// Manually patch order since Orteil doesn't like consistency\n\t\t\tthis.order -= Math.max(0, Math.min(building.id - 4, 3)) * 75\n\t\t}\n\t}\n}\n\nexport class GrandmaSynergy extends Upgrade\n\timplements Game.GrandmaSynergyClass {\n\tbuildingTie: Game.Object\n\tpool: \"\"\n\t/**\n\t * Creates a grandma synergy upgrade\n\t * @param name The name for the upgrade(Usually something like \"_ Grandmas\")\n\t * @param quote The flavor text of the upgrade\n\t * @param buildingName The building to be tied with\n\t * @param grandmaPicture Optional, the picture of the grandma to use in grandma art\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tquote: string,\n\t\tbuilding: Game.Object | string,\n\t\tgrandmaPicture?: string\n\t) {\n\t\tif (typeof building === \"string\") building = Game.Objects[building]\n\t\tlet grandmaNumber: string | number = building.id - 1\n\t\tif (grandmaNumber === 1) grandmaNumber = \"grandma\"\n\t\telse grandmaNumber = `${grandmaNumber} grandmas`\n\t\tsuper(\n\t\t\tname,\n\t\t\t`Grandmas are <b>twice</b> as efficient.${toSentenseCase(\n\t\t\t\tbuilding.plural\n\t\t\t)} gain <b>+1% CpS</b> per ${grandmaNumber}.<q>${quote}</q>`,\n\t\t\tbuilding.basePrice * Game.Tiers[2].price,\n\t\t\t[10, 9],\n\t\t\tGame.Objects.Grandma.redraw\n\t\t)\n\t\tbuilding.grandma = this\n\t\tthis.buildingTie = building\n\t\tthis.order = 250 + (building.id / 12) * 5\n\t\tGame.GrandmaSynergies.push(this.name)\n\t\tif (grandmaPicture)\n\t\t\tmaster.hooks.on(\"grandmaPic\", src => {\n\t\t\t\tif (this.bought) return [...src, grandmaPicture]\n\t\t\t})\n\t}\n}\n\nexport class SynergyUpgrade<Tier extends string> extends Upgrade\n\timplements Game.SynergyUpgradeClass<Tier> {\n\tbuildingTie1: Game.Object\n\tbuildingTie2: Game.Object\n\ttier: Tier\n\tpool: \"\"\n\t/**\n\t * Creates a synergy upgrade\n\t * @param name The name for the upgrade\n\t * @param desc The flavor text for it\n\t * @param building1Name The first building\n\t * @param building2Name The second building\n\t * @param tier The synergy tier **Warning: The tier must have a req field**\n\t */\n\tconstructor(\n\t\tname: string,\n\t\tdesc: string,\n\t\tbuilding1: Game.Object | string,\n\t\tbuilding2: Game.Object | string,\n\t\ttier: Tier\n\t) {\n\t\tif (typeof building1 === \"string\") building1 = Game.Objects[building1]\n\t\tif (typeof building2 === \"string\") building2 = Game.Objects[building2]\n\t\tdesc = `${toSentenseCase(\n\t\t\tbuilding1.plural\n\t\t)} gain <b>+5% CpS</b> per ${building2.name.toLowerCase()}.<br>${toSentenseCase(\n\t\t\tbuilding2.plural\n\t\t)} gain <b>+0.1% CpS</b> per \n\t\t\t${building1.name.toLowerCase()}.<q>${desc}</q>`\n\t\tsuper(\n\t\t\tname,\n\t\t\tdesc,\n\t\t\t(building1.basePrice * 10 + building2.basePrice * 1) *\n\t\t\t\tGame.Tiers[tier].price,\n\t\t\tGame.GetIcon(building1.name, tier)\n\t\t)\n\t\tthis.tier = tier\n\t\tthis.buildingTie1 = building1\n\t\tthis.buildingTie2 = building2\n\t\tthis.order = 5000\n\t\tbuilding1.synergies.push(this)\n\t\tbuilding2.synergies.push(this)\n\t}\n}\n","import master from \"../vars\"\n\nexport default function postInject(): void {\n\tmaster.hooks.on(\"getIcon\", ({ icon, type, tier }) => {\n\t\tmaster.customTiers.forEach(val => {\n\t\t\tif (val.keyName === tier.toString() && val.iconLink)\n\t\t\t\ticon[2] = val.iconLink\n\t\t})\n\t\treturn { icon, type, tier }\n\t})\n\tmaster.hooks.on(\"getIcon\", ({ icon, type, tier }) => {\n\t\tmaster.customBuildings.forEach(val => {\n\t\t\tif (val.name === type && val.iconLink) icon[2] = val.iconLink\n\t\t})\n\t\treturn { icon, tier, type }\n\t})\n}\n","import { main } from \"./injects/basegame\"\n\nimport master from \"./vars\"\nimport { exportSave, importSave } from \"./saves\"\nimport { prod } from \"../isprod.json\"\nimport postInject from \"./injects/postInject\"\n\nlet CppkiesExport: typeof master\n\ndeclare global {\n\tinterface Window {\n\t\tCppkies: typeof master | undefined\n\t\tCPPKIES_ONLOAD: (() => void)[] | undefined\n\t}\n}\n\n//Check if Cppkies is already created\nif (window.Cppkies) {\n\t//If so, just reexport it\n\tCppkiesExport = window.Cppkies\n} else {\n\tCppkiesExport = master\n\t//Inject maingame and create hooks\n\tmain().then(answer => {\n\t\tCppkiesExport.hooks = answer\n\t\tCppkiesExport.on = answer.on.bind(answer)\n\t\tGame.Notify(\"Cppkies loaded!\", \"\", [32, prod ? 17 : 21])\n\t\tif (!Game.modSaveData[\"cppkies\"]) Game.modSaveData[\"cppkies\"] = \"{}\"\n\t\tGame.registerMod(\"cppkies\", {\n\t\t\tsave: exportSave,\n\t\t\tload: importSave,\n\t\t})\n\t\tGame.Win(\"Third-party\")\n\t\t//Run all onLoad events\n\t\tmaster.onLoad.forEach(val => val())\n\t\t//Force all new onLoad events to run\n\t\tmaster.onLoad = new Proxy(master.onLoad, {\n\t\t\tset: (_target, key, value): boolean => {\n\t\t\t\tif (key !== \"length\") value()\n\t\t\t\treturn true\n\t\t\t},\n\t\t})\n\t\t//Do the same for CPPKIES_ONLOAD\n\t\tif (!window.CPPKIES_ONLOAD) window.CPPKIES_ONLOAD = []\n\t\t//Run all onLoad events\n\t\twindow.CPPKIES_ONLOAD.forEach(val => val())\n\t\t//Force all new onLoad events to run\n\t\twindow.CPPKIES_ONLOAD = new Proxy(master.onLoad, {\n\t\t\tset: (_target, key, value): boolean => {\n\t\t\t\tif (key !== \"length\") value()\n\t\t\t\treturn true\n\t\t\t},\n\t\t})\n\t\tpostInject()\n\t\t//Force manual addition since in-module injects b r e a k\n\t\twindow.Cppkies = CppkiesExport\n\t})\n}\nexport default CppkiesExport\n","type EventListenerFunction<\n\tT extends Record<string, [unknown, unknown]>,\n\tN extends keyof T\n> = (src: T[N][0]) => T[N][1]\n\ntype EventList<T extends Record<string, [unknown, unknown]>> = {\n\t[P in keyof T]: EventListenerFunction<T, P>[]\n}\n\n/**\n * A small implementation of node's EventEmitter with return value support\n */\n\nexport class ReturnableEventEmitter<\n\tT extends Record<string, [unknown, unknown]>\n> {\n\t_events = {} as EventList<T>\n\n\t/**\n\t * Registers an event listener which is called each time the event is emitted\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\ton<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tif (!this._events[name]) {\n\t\t\tthis._events[name] = [func]\n\t\t} else this._events[name].push(func)\n\t}\n\t/**\n\t * Registers an event listener which is called for the first time the event is emitted\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\tonce<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tthis.on(name, arg => {\n\t\t\tthis.off(name, func)\n\t\t\treturn func(arg)\n\t\t})\n\t}\n\t/**\n\t * Removes an event listener which was registered before\n\t * @param name Name of the hook\n\t * @param func The event listener function\n\t */\n\toff<N extends keyof T>(name: N, func: EventListenerFunction<T, N>): void {\n\t\tthis._events[name].splice(this._events[name].indexOf(func), 1)\n\t}\n\n\t// Sorry for the minor type mess, I blame typescript\n\t/**\n\t * Emits the event, triggering all registered event listeners under the event name and modifying the given value\n\t * @param name The name of the event\n\t * @param startingValue The starting value for the listeners\n\t */\n\temit<N extends keyof T>(\n\t\tname: N,\n\t\t...startingValue: T[N][0] extends void ? [undefined?] : [T[N][0]]\n\t): T[N][1] {\n\t\tlet retVal: T[N][0] | T[N][1] = startingValue[0]\n\t\tif (!this._events[name]) this._events[name] = []\n\t\tfor (const func of this._events[name]) retVal = func(retVal)\n\t\treturn retVal\n\t}\n\t/**\n\t * Emits the event, triggering all registered event listeners under the event name and *not* modifying the given value\n\t * @param name The name of the event\n\t * @param startingValue The starting value for the listeners\n\t */\n\tconstEmit<N extends keyof T>(\n\t\tname: N,\n\t\t...startingValue: T[N][0] extends void ? [undefined?] : [T[N][0]]\n\t): void {\n\t\tif (!this._events[name]) this._events[name] = []\n\t\tfor (const func of this._events[name]) func(startingValue[0])\n\t}\n}\n","export class Injection {\n\tpublic defValue: Function[] = []\n\tconstructor(public value: string, public func?: Function) {}\n}\n","import { resolveAlias } from \"./spritesheets\"\nimport master from \"./vars\"\n\nexport const customTiers: Tier[] = []\n\nexport default class Tier implements Game.Tier {\n\tachievUnlock: number\n\ticonRow: number\n\ticonLink?: string\n\n\t/**\n\t\tIndicates if the tier shouldn't be accounted for tiered upgrades\n\t*/\n\tspecial: boolean\n\treq?: string\n\tupgrades: Game.TieredUpgradeClass<this[\"name\"]>[] = []\n\n\tunlock: number\n\tprice: number\n\tkeyName: string\n\n\t/**\n\t * Adds a new tier to the game for upgrades and achievements\n\t * @param name The name of the new tier\n\t * @param sampleIcon A sample of an icon using the tier\n\t * @param color The color of the tier\n\t * @param price The base price of tiered upgrades\n\t * @param special Indicates if the tier shouldn't be accounted for tiered upgrades\n\t * @param unlock How many buildings are needed for the upgrade\n\t * @param achievUnlock How many buildings are needed for the achievement\n\t * @param req Which upgrade is required to unlock the upgrades\n\t * @param keyName Optional, the key for tiers, used in everything\n\t */\n\tconstructor(\n\t\tpublic name: string,\n\t\tsampleIcon: Game.Icon,\n\t\tpublic color: string,\n\t\tspecial = false,\n\t\tprice: number | \"auto\" = \"auto\",\n\t\tunlock: number | \"auto\" | null = null,\n\t\tachievUnlock: number | \"auto\" | null = null,\n\t\treq: string | null = null,\n\t\tkeyName: string | \"auto\" = \"auto\"\n\t) {\n\t\tthis.special = special\n\n\t\tif (keyName === \"auto\")\n\t\t\tif (!special)\n\t\t\t\tthis.keyName = (\n\t\t\t\t\tObject.keys(Game.Tiers).filter(val => !isNaN(parseInt(val))).length +\n\t\t\t\t\t1\n\t\t\t\t).toString()\n\t\t\telse this.keyName = name\n\t\telse this.keyName = keyName\n\n\t\tif (unlock === null) this.unlock = -1\n\t\tif (typeof unlock === \"number\") this.unlock = unlock\n\t\tif ((special === false && unlock === null) || unlock === \"auto\")\n\t\t\tthis.unlock = Game.Tiers[parseInt(this.keyName) - 1].unlock + 50\n\n\t\tif (typeof achievUnlock === \"number\") this.achievUnlock = achievUnlock\n\t\tif ((special === false && achievUnlock === null) || achievUnlock === \"auto\")\n\t\t\tthis.achievUnlock =\n\t\t\t\tGame.Tiers[parseInt(this.keyName) - 1].achievUnlock + 50\n\t\tif (req) this.req = req\n\t\tif (price === \"auto\")\n\t\t\tthis.price =\n\t\t\t\tGame.Tiers[\n\t\t\t\t\tObject.keys(Game.Tiers)\n\t\t\t\t\t\t.filter(val => !isNaN(parseInt(val)))\n\t\t\t\t\t\t.length.toString()\n\t\t\t\t].price * 1e8\n\t\telse this.price = price\n\t\t/*\n\t\t\tAnalyze sample icon\n\t\t*/\n\t\tthis.iconRow = sampleIcon[1]\n\t\tthis.iconLink = resolveAlias(sampleIcon[2] || master.iconLink + \"\")\n\t\tGame.Tiers[this.keyName] = this\n\t\tcustomTiers.push(this)\n\t}\n}\n","import { save } from \"./saves\"\nimport {\n\tBuilding,\n\tdefaultOnBuy,\n\tdefaultCps,\n\tcustomBuildings,\n\tbuildingHooks,\n} from \"./buildings\"\nimport {\n\tUpgrade,\n\tTieredUpgrade,\n\tHeavenlyUpgrade,\n\tGrandmaSynergy,\n\tSynergyUpgrade,\n\tcustomUpgrades,\n} from \"./upgrade\"\nimport Tier, { customTiers } from \"./tiers\"\nimport { injectCode } from \"./helpers\"\nimport { patchIconsheet, relinkColumn, relinkRow } from \"./spritesheets\"\nimport { Hooks } from \"./injects/basegame\"\n\n/**\n * The main object which is exported by Cppkies\n */\nconst master = {\n\thooks: null as Hooks,\n\ton: null as Hooks[\"on\"],\n\ticonLink: \"\",\n\tbuildingLink: \"\",\n\tbuildingHooks,\n\tbuildingHooksById: [],\n\tcustomBuildings,\n\tcustomUpgrades,\n\tcustomTiers,\n\tsave,\n\tonLoad: [] as (() => void)[],\n\tBuilding,\n\tUpgrade,\n\tTieredUpgrade,\n\tTier,\n\tHeavenlyUpgrade,\n\tGrandmaSynergy,\n\tSynergyUpgrade,\n\tinjectCode,\n\tDEFAULT_ONBUY: defaultOnBuy,\n\tDEFAULT_CPS: defaultCps,\n\ticons: {\n\t\trelinkColumn,\n\t\trelinkRow,\n\t\tpatchIconsheet,\n\t},\n}\n\nexport default master\n","import { injectCode } from \"../helpers\"\nimport { ReturnableEventEmitter } from \"../lib/eventemitter\"\nimport { Injection } from \"./generic\"\n\nexport type Hooks = ReturnableEventEmitter<{\n\t//! Custom menus\n\t/**\n\t * Allows you to add entries to all menus\n\t */\n\tmenu: [void, void]\n\t/**\n\t * Allows you to add entries to the options menu\n\t */\n\toptionsMenu: [void, void]\n\t/**\n\t * Allows you to add entries to the stats menu\n\t */\n\tstatsMenu: [void, void]\n\t/**\n\t * Allows you to add entries to the info menu\n\t */\n\tinfoMenu: [void, void]\n\n\t//! Data manipulation\n\n\t/**\n\t * Allows you to execute a function on before saving, useful for cleaning up data which will be invalid if no mod is present\n\t */\n\tpreSave: [void, void]\n\n\t/**\n\t * Allows you to execute a function on data load, useful for custom data resetting\n\t * @param hard whether or not this is a hard reset\n\t */\n\tcustomReset: [boolean, void]\n\n\t//! Tiers\n\n\tgetIcon: [\n\t\t{\n\t\t\ttype: string\n\t\t\ttier: string | number\n\t\t\ticon: Game.Icon\n\t\t},\n\t\t{\n\t\t\ttype: string\n\t\t\ttier: string | number\n\t\t\ticon: Game.Icon\n\t\t}\n\t]\n\n\t//! Buildings\n\t/**\n\t * Called after BuildStore, used internally\n\t */\n\tbuildStore: [void, void]\n\t/**\n\t * Adds grandma options for the grandma art\n\t */\n\tgrandmaPic: [string[], string[]]\n\t//! Gameplay\n\trawCps: [number, number]\n\tcps: [number, number]\n\tcpsMult: [number, number]\n}>\n/**\n * Creates the function hooks for base game\n * @returns A promise\n */\nexport function main(): Promise<Hooks> {\n\treturn new Promise(resolve => {\n\t\tconst emitter: Hooks = new ReturnableEventEmitter()\n\t\tconst injections: Array<Injection> = [\n\t\t\t//// -- Custom menus -- ////\n\t\t\t/*\n\t\t\tHooks that allow you to add new stuff do the menu \n\n\t\t\t\"optionsMenu\"\n\t\t\tAllows you to add entries to the options menu\n\n\t\t\t\"statsMenu\"\n\t\t\tAllows you to add entries to the stats menu\n\n\t\t\t\"logMenu\"\n\t\t\tAllows you to add entries to the info menu\n\n\t\t\t\"menu\"\n\t\t\tAllows you to add entries to all menus\n\t\t\t*/\n\t\t\tnew Injection(\"customMenu\", () => {\n\t\t\t\tGame.UpdateMenu = injectCode(\n\t\t\t\t\tGame.UpdateMenu,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\tswitch (Game.onMenu) {\n\t\t\t\t\t\tcase \"prefs\":\n\t\t\t\t\t\t\tCppkies.hooks.emit(\"optionsMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"stats\":\n\t\t\t\t\t\t\tCppkies.hooks.emit(\"statsMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase \"log\":\n\t\t\t\t\t\t\tCppkies.hooks.emit(\"logMenu\")\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tCppkies.hooks.emit(\"menu\")\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Data manipulation -- ////\n\n\t\t\tnew Injection(\"preSave\", () => {\n\t\t\t\tGame.WriteSave = injectCode(\n\t\t\t\t\tGame.WriteSave,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\tCppkies.hooks.emit(\"preSave\")\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"reset\", () => {\n\t\t\t\tGame.Reset = injectCode(\n\t\t\t\t\tGame.Reset,\n\t\t\t\t\tnull,\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies injection\n\t\t\t\t\tCppkies.hooks.emit(\"reset\", hard)\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Tiers -- ////\n\t\t\t/**\n\t\t\t\t\"customGetIcon\"\n\t\t\t\tOverrides for icons gotten from GetIcon\n\t\t\t\ttype: string - The type of icon, either a building name or \"Kitten\"\n\t\t\t\ttier: string - The tier of the icon, gotten from Tier.iconRow\n\t\t\t\ticon: Icon - the current icon\n\t\t\t */\n\t\t\tnew Injection(\"getIcon\", () => {\n\t\t\t\tGame.GetIcon = injectCode(\n\t\t\t\t\tGame.GetIcon,\n\t\t\t\t\t\"return [col,Game.Tiers[tier].iconRow];\",\n\t\t\t\t\t`\n\t\t\t\t\t// Cppkies Injection\n\t\t\t\t\treturn Cppkies.hooks.emit(\"getIcon\", { icon: [col, Game.Tiers[tier].iconRow], tier: tier, type: type })`,\n\t\t\t\t\t\"replace\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\t//// -- Sugar Lump -- ////\n\t\t\t// TODO Rewrite Game.computeLumpType\n\t\t\t// TODO Cppkies.hooks.customComputeLumpType\n\t\t\t// TODO Cppkies.hooks.customDoLumps\n\t\t\t//// -- Shimmers -- ////\n\t\t\t// TODO everything shimmer related\n\t\t\t//// -- Prompts -- ////\n\t\t\t// Idk what here\n\t\t\t//// -- Menus -- ////\n\t\t\t// TODO Patch disabled buttons(?)\n\t\t\t//// -- Buildings -- ////\n\t\t\tnew Injection(\"buildStore\", () => {\n\t\t\t\tGame.BuildStore = injectCode(\n\t\t\t\t\tGame.BuildStore,\n\t\t\t\t\tnull,\n\t\t\t\t\t`;\\nCppkies.hooks.emit(\"buildStore\")`,\n\t\t\t\t\t\"after\"\n\t\t\t\t)\n\t\t\t}),\n\t\t\tnew Injection(\"grandmaPic\", () => {\n\t\t\t\tGame.Objects.Grandma.art.pic = injectCode(\n\t\t\t\t\tGame.Objects.Grandma.art.pic as (\n\t\t\t\t\t\tbuilding: Game.Object,\n\t\t\t\t\t\ti: number\n\t\t\t\t\t) => string,\n\t\t\t\t\t\"return choose(list)+'.png'\",\n\t\t\t\t\t`// Cppkies injection\n\t\t\t\t\tlist = Cppkies.hooks.emit(\"grandmaPic\", list)\n\t\t\t\t\t`,\n\t\t\t\t\t\"before\"\n\t\t\t\t) as (building: Game.Object, i: number) => string\n\t\t\t}),\n\t\t\t//// -- Gameplay -- ////\n\t\t\tnew Injection(\"cps\", () => {\n\t\t\t\tGame.CalculateGains = injectCode(\n\t\t\t\t\tGame.CalculateGains,\n\t\t\t\t\t\"Game.cookiesPsRaw=rawCookiesPs;\",\n\t\t\t\t\t'rawCookiesPs = Cppkies.hooks.emit(\"rawCps\", rawCookiesPs);\\n',\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t\tGame.CalculateGains = injectCode(\n\t\t\t\t\tGame.CalculateGains,\n\t\t\t\t\t\"Game.cookiesPs=Game.runModHookOnValue('cps',Game.cookiesPs);\",\n\t\t\t\t\t`mult = Cppkies.hooks.emit(\"cpsMult\", mult);\nGame.cookiesPs = Cppkies.hooks.emit(\"cps\", Game.cookiesPs);\\n`,\n\t\t\t\t\t\"before\"\n\t\t\t\t)\n\t\t\t}),\n\t\t]\n\t\tinjections.forEach(inject => {\n\t\t\tinject.func?.()\n\t\t})\n\t\t//Misc stuff\n\t\tGame.Loader.Load = injectCode(\n\t\t\tGame.Loader.Load,\n\t\t\t\"img.src=this.domain\",\n\t\t\t`\n\t\t\t// Cppkies injection\n\t\t\timg.src = (assets[i].indexOf('http') !== -1 ? \"\" : this.domain)\n`,\n\t\t\t\"replace\"\n\t\t)\n\t\tGame.Objects.Cursor.buyFunction = injectCode(\n\t\t\tGame.Objects.Cursor.buyFunction,\n\t\t\t\"Game.Unlock('Octillion fingers');\",\n\t\t\t`\n \t\t\t// Cppkies injection\n\t\t\tfor(const i in this.tieredUpgrades) {\n\t\t\t\tif (isNaN(parseInt(i))) break\n\t\t\t\tif (this.amount >= Game.Tiers[this.tieredUpgrades[i].tier].unlock - 50) this.tieredUpgrades[i].unlock()\n\t\t\t}\n`,\n\t\t\t\"after\"\n\t\t)\n\t\tresolve(emitter)\n\t})\n}\n"],"names":["Math","max","getValue","value","Function","escapeRegExp","str","replace","injectCode","func","source","target","where","context","i","test","Error","regex","newFuncStr","toString","sliceMode","RegExp","findStart","findEnd","console","warn","contextStr","globalThis","tempCtx","newFunc","prototype","applyAllProps","targObj","srcObj","toSentenseCase","strign","charAt","toUpperCase","slice","toLowerCase","initSave","master","save","mods","foreign","DEFAULT_MOD_SAVE","saveVer","exists","loadBuilding","building","buildings","name","DEFAULT_BUILDING_SAVE","saveBuilding","_a","amount","bought","free","totalCookies","level","muted","minigameSave","loadUpgrade","upgrade","upgrades","DEFAULT_UPGRADE_SAVE","saveUpgrade","unlocked","loadAll","customBuildings","me","Game","Objects","customUpgrades","Upgrades","saveAll","importSave","data","JSON","parse","exportSave","stringify","alias","oldName","aliasName","aliases","resolveAlias","steppedAliases","includes","push","generateImageFromLink","link","Promise","resolve","img","Image","addEventListener","crossOrigin","src","toBlobURI","buf","canvas","toBlob","blob","URL","createObjectURL","relink","icons","matrix","iconSize","size","postProcess","Array","references","y","x","parseInt","buffer","document","createElement","getContext","width","height","drawImage","ret","postPostProcess","then","createHooks","injections","Injection","tooltip","dummy","forEach","inject","defValue","buildingHooks","isFortune","tier","postInject","hooks","on","icon","type","customTiers","val","keyName","iconLink","CppkiesExport","ReturnableEventEmitter","_events","arg","_this","off","splice","indexOf","_i","startingValue","retVal","_b","columnRelinkAmount","extraColumnIcons","milestone1","milestone2","milestone3","krumblor","level1","level2","rowRelinkAmount","extraRowIcons","research","cookie","mouse","multicursor","kitten","commonName","desc","bigIcon","art","cpsFunc","buyFunction","foolObject","buildingSpecial","_super","ObjectsById","l","ctx","mouseOn","e","box","getBoundingClientRect","mousePos","pageX","left","pageY","top","minigame","minigameLoaded","launch","load","buildingLink","foolObjects","goldenCookieBuildingBuffs","locked","BuildStore","id","style","backgroundImage","pics","muteDiv","className","display","backgroundPositionX","backgroundPositionY","mute","window","PlaySound","AddEvent","appendChild","loadProps","recalculateGains","__extends","Object","price","buyFunc","descFunc","priceFunc","iconFunction","Upgrade","position","parents","posX","posY","map","UpgradesById","PrestigeUpgrades","UpgradePositions","description","min","plural","basePrice","Tiers","GetIcon","SetTier","buildingTie1","order","fortune","isNaN","quote","grandmaPicture","grandmaNumber","Grandma","redraw","grandma","buildingTie","GrandmaSynergies","building1","building2","buildingTie2","synergies","sampleIcon","color","special","unlock","achievUnlock","req","keys","filter","length","iconRow","buildingHooksById","onLoad","Building","TieredUpgrade","Tier","HeavenlyUpgrade","GrandmaSynergy","SynergyUpgrade","DEFAULT_ONBUY","UnlockTiered","SpecialGrandmaUnlock","Unlock","DEFAULT_CPS","GetTieredCpsMult","magicCpS","baseCps","relinkColumn","offset","followAlias","columnIcons","values","reduce","acc","Infinity","img_1","_c","relinkRow","rowIcons","single","iconColumn","img_2","patchIconsheet","replacements","ogImg","_g","maxSize","replacements_1","place","replacementCache","replacements_2","replacement","_d","clearRect","_e","Cppkies","emitter","UpdateMenu","WriteSave","Reset","pic","CalculateGains","Loader","Load","Cursor","answer","bind","Notify","modSaveData","registerMod","Win","Proxy","set","_target","key","CPPKIES_ONLOAD"],"mappings":"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"}